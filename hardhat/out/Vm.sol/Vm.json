{"abi":[{"type":"function","name":"accesses","inputs":[{"name":"target","type":"address","internalType":"address"}],"outputs":[{"name":"readSlots","type":"bytes32[]","internalType":"bytes32[]"},{"name":"writeSlots","type":"bytes32[]","internalType":"bytes32[]"}],"stateMutability":"nonpayable"},{"type":"function","name":"activeFork","inputs":[],"outputs":[{"name":"forkId","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"addr","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"keyAddr","type":"address","internalType":"address"}],"stateMutability":"pure"},{"type":"function","name":"allowCheatcodes","inputs":[{"name":"account","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"assertApproxEqAbs","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"maxDelta","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqAbs","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"maxDelta","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqAbs","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"maxDelta","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqAbs","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"maxDelta","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqAbsDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"maxDelta","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqAbsDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"maxDelta","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqAbsDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"maxDelta","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqAbsDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"maxDelta","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqRel","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"maxPercentDelta","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqRel","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"maxPercentDelta","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqRel","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"maxPercentDelta","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqRel","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"maxPercentDelta","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqRelDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"maxPercentDelta","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqRelDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"maxPercentDelta","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqRelDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"maxPercentDelta","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqRelDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"maxPercentDelta","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bytes32[]","internalType":"bytes32[]"},{"name":"right","type":"bytes32[]","internalType":"bytes32[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"int256[]","internalType":"int256[]"},{"name":"right","type":"int256[]","internalType":"int256[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"address","internalType":"address"},{"name":"right","type":"address","internalType":"address"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"string","internalType":"string"},{"name":"right","type":"string","internalType":"string"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"address[]","internalType":"address[]"},{"name":"right","type":"address[]","internalType":"address[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"address[]","internalType":"address[]"},{"name":"right","type":"address[]","internalType":"address[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bool","internalType":"bool"},{"name":"right","type":"bool","internalType":"bool"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"address","internalType":"address"},{"name":"right","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"uint256[]","internalType":"uint256[]"},{"name":"right","type":"uint256[]","internalType":"uint256[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bool[]","internalType":"bool[]"},{"name":"right","type":"bool[]","internalType":"bool[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"int256[]","internalType":"int256[]"},{"name":"right","type":"int256[]","internalType":"int256[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bytes32","internalType":"bytes32"},{"name":"right","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"uint256[]","internalType":"uint256[]"},{"name":"right","type":"uint256[]","internalType":"uint256[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bytes","internalType":"bytes"},{"name":"right","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bytes32","internalType":"bytes32"},{"name":"right","type":"bytes32","internalType":"bytes32"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"string[]","internalType":"string[]"},{"name":"right","type":"string[]","internalType":"string[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bytes32[]","internalType":"bytes32[]"},{"name":"right","type":"bytes32[]","internalType":"bytes32[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bytes","internalType":"bytes"},{"name":"right","type":"bytes","internalType":"bytes"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bool[]","internalType":"bool[]"},{"name":"right","type":"bool[]","internalType":"bool[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bytes[]","internalType":"bytes[]"},{"name":"right","type":"bytes[]","internalType":"bytes[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"string[]","internalType":"string[]"},{"name":"right","type":"string[]","internalType":"string[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"string","internalType":"string"},{"name":"right","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bytes[]","internalType":"bytes[]"},{"name":"right","type":"bytes[]","internalType":"bytes[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bool","internalType":"bool"},{"name":"right","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEqDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEqDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEqDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEqDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertFalse","inputs":[{"name":"condition","type":"bool","internalType":"bool"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertFalse","inputs":[{"name":"condition","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGe","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGe","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGe","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGe","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGeDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGeDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGeDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGeDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGt","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGt","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGt","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGt","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGtDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGtDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGtDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGtDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLe","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLe","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLe","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLe","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLeDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLeDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLeDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLeDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLt","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLt","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLt","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLt","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLtDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLtDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLtDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLtDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bytes32[]","internalType":"bytes32[]"},{"name":"right","type":"bytes32[]","internalType":"bytes32[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"int256[]","internalType":"int256[]"},{"name":"right","type":"int256[]","internalType":"int256[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bool","internalType":"bool"},{"name":"right","type":"bool","internalType":"bool"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bytes[]","internalType":"bytes[]"},{"name":"right","type":"bytes[]","internalType":"bytes[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bool","internalType":"bool"},{"name":"right","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bool[]","internalType":"bool[]"},{"name":"right","type":"bool[]","internalType":"bool[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bytes","internalType":"bytes"},{"name":"right","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"address[]","internalType":"address[]"},{"name":"right","type":"address[]","internalType":"address[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"uint256[]","internalType":"uint256[]"},{"name":"right","type":"uint256[]","internalType":"uint256[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bool[]","internalType":"bool[]"},{"name":"right","type":"bool[]","internalType":"bool[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"string","internalType":"string"},{"name":"right","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"address[]","internalType":"address[]"},{"name":"right","type":"address[]","internalType":"address[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"string","internalType":"string"},{"name":"right","type":"string","internalType":"string"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"address","internalType":"address"},{"name":"right","type":"address","internalType":"address"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bytes32","internalType":"bytes32"},{"name":"right","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bytes","internalType":"bytes"},{"name":"right","type":"bytes","internalType":"bytes"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"uint256[]","internalType":"uint256[]"},{"name":"right","type":"uint256[]","internalType":"uint256[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"address","internalType":"address"},{"name":"right","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bytes32","internalType":"bytes32"},{"name":"right","type":"bytes32","internalType":"bytes32"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"string[]","internalType":"string[]"},{"name":"right","type":"string[]","internalType":"string[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bytes32[]","internalType":"bytes32[]"},{"name":"right","type":"bytes32[]","internalType":"bytes32[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"string[]","internalType":"string[]"},{"name":"right","type":"string[]","internalType":"string[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"int256[]","internalType":"int256[]"},{"name":"right","type":"int256[]","internalType":"int256[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bytes[]","internalType":"bytes[]"},{"name":"right","type":"bytes[]","internalType":"bytes[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEqDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEqDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEqDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEqDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertTrue","inputs":[{"name":"condition","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertTrue","inputs":[{"name":"condition","type":"bool","internalType":"bool"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assume","inputs":[{"name":"condition","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"blobBaseFee","inputs":[{"name":"newBlobBaseFee","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"blobhashes","inputs":[{"name":"hashes","type":"bytes32[]","internalType":"bytes32[]"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"breakpoint","inputs":[{"name":"char","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"breakpoint","inputs":[{"name":"char","type":"string","internalType":"string"},{"name":"value","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"broadcast","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"broadcast","inputs":[{"name":"signer","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"broadcast","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"broadcastRawTransaction","inputs":[{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"chainId","inputs":[{"name":"newChainId","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"clearMockedCalls","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"closeFile","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"coinbase","inputs":[{"name":"newCoinbase","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"computeCreate2Address","inputs":[{"name":"salt","type":"bytes32","internalType":"bytes32"},{"name":"initCodeHash","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"pure"},{"type":"function","name":"computeCreate2Address","inputs":[{"name":"salt","type":"bytes32","internalType":"bytes32"},{"name":"initCodeHash","type":"bytes32","internalType":"bytes32"},{"name":"deployer","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"pure"},{"type":"function","name":"computeCreateAddress","inputs":[{"name":"deployer","type":"address","internalType":"address"},{"name":"nonce","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"pure"},{"type":"function","name":"copyFile","inputs":[{"name":"from","type":"string","internalType":"string"},{"name":"to","type":"string","internalType":"string"}],"outputs":[{"name":"copied","type":"uint64","internalType":"uint64"}],"stateMutability":"nonpayable"},{"type":"function","name":"createDir","inputs":[{"name":"path","type":"string","internalType":"string"},{"name":"recursive","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"createFork","inputs":[{"name":"urlOrAlias","type":"string","internalType":"string"}],"outputs":[{"name":"forkId","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"createFork","inputs":[{"name":"urlOrAlias","type":"string","internalType":"string"},{"name":"blockNumber","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"forkId","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"createFork","inputs":[{"name":"urlOrAlias","type":"string","internalType":"string"},{"name":"txHash","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"forkId","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"createSelectFork","inputs":[{"name":"urlOrAlias","type":"string","internalType":"string"},{"name":"blockNumber","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"forkId","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"createSelectFork","inputs":[{"name":"urlOrAlias","type":"string","internalType":"string"},{"name":"txHash","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"forkId","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"createSelectFork","inputs":[{"name":"urlOrAlias","type":"string","internalType":"string"}],"outputs":[{"name":"forkId","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"createWallet","inputs":[{"name":"walletLabel","type":"string","internalType":"string"}],"outputs":[{"name":"wallet","type":"tuple","internalType":"struct VmSafe.Wallet","components":[{"name":"addr","type":"address","internalType":"address"},{"name":"publicKeyX","type":"uint256","internalType":"uint256"},{"name":"publicKeyY","type":"uint256","internalType":"uint256"},{"name":"privateKey","type":"uint256","internalType":"uint256"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"createWallet","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"wallet","type":"tuple","internalType":"struct VmSafe.Wallet","components":[{"name":"addr","type":"address","internalType":"address"},{"name":"publicKeyX","type":"uint256","internalType":"uint256"},{"name":"publicKeyY","type":"uint256","internalType":"uint256"},{"name":"privateKey","type":"uint256","internalType":"uint256"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"createWallet","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"},{"name":"walletLabel","type":"string","internalType":"string"}],"outputs":[{"name":"wallet","type":"tuple","internalType":"struct VmSafe.Wallet","components":[{"name":"addr","type":"address","internalType":"address"},{"name":"publicKeyX","type":"uint256","internalType":"uint256"},{"name":"publicKeyY","type":"uint256","internalType":"uint256"},{"name":"privateKey","type":"uint256","internalType":"uint256"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"deal","inputs":[{"name":"account","type":"address","internalType":"address"},{"name":"newBalance","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"deleteSnapshot","inputs":[{"name":"snapshotId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"success","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"deleteSnapshots","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"deployCode","inputs":[{"name":"artifactPath","type":"string","internalType":"string"},{"name":"constructorArgs","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"deployedAddress","type":"address","internalType":"address"}],"stateMutability":"nonpayable"},{"type":"function","name":"deployCode","inputs":[{"name":"artifactPath","type":"string","internalType":"string"}],"outputs":[{"name":"deployedAddress","type":"address","internalType":"address"}],"stateMutability":"nonpayable"},{"type":"function","name":"deriveKey","inputs":[{"name":"mnemonic","type":"string","internalType":"string"},{"name":"derivationPath","type":"string","internalType":"string"},{"name":"index","type":"uint32","internalType":"uint32"},{"name":"language","type":"string","internalType":"string"}],"outputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"deriveKey","inputs":[{"name":"mnemonic","type":"string","internalType":"string"},{"name":"index","type":"uint32","internalType":"uint32"},{"name":"language","type":"string","internalType":"string"}],"outputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"deriveKey","inputs":[{"name":"mnemonic","type":"string","internalType":"string"},{"name":"index","type":"uint32","internalType":"uint32"}],"outputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"deriveKey","inputs":[{"name":"mnemonic","type":"string","internalType":"string"},{"name":"derivationPath","type":"string","internalType":"string"},{"name":"index","type":"uint32","internalType":"uint32"}],"outputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"difficulty","inputs":[{"name":"newDifficulty","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"dumpState","inputs":[{"name":"pathToStateJson","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"ensNamehash","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"envAddress","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"envAddress","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"address[]","internalType":"address[]"}],"stateMutability":"view"},{"type":"function","name":"envBool","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"envBool","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"bool[]","internalType":"bool[]"}],"stateMutability":"view"},{"type":"function","name":"envBytes","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"bytes","internalType":"bytes"}],"stateMutability":"view"},{"type":"function","name":"envBytes","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"bytes[]","internalType":"bytes[]"}],"stateMutability":"view"},{"type":"function","name":"envBytes32","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"bytes32[]","internalType":"bytes32[]"}],"stateMutability":"view"},{"type":"function","name":"envBytes32","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"envExists","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"result","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"envInt","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"int256[]","internalType":"int256[]"}],"stateMutability":"view"},{"type":"function","name":"envInt","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"int256","internalType":"int256"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"},{"name":"defaultValue","type":"bytes32[]","internalType":"bytes32[]"}],"outputs":[{"name":"value","type":"bytes32[]","internalType":"bytes32[]"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"},{"name":"defaultValue","type":"int256[]","internalType":"int256[]"}],"outputs":[{"name":"value","type":"int256[]","internalType":"int256[]"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"defaultValue","type":"bool","internalType":"bool"}],"outputs":[{"name":"value","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"defaultValue","type":"address","internalType":"address"}],"outputs":[{"name":"value","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"defaultValue","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"value","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"},{"name":"defaultValue","type":"bytes[]","internalType":"bytes[]"}],"outputs":[{"name":"value","type":"bytes[]","internalType":"bytes[]"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"},{"name":"defaultValue","type":"uint256[]","internalType":"uint256[]"}],"outputs":[{"name":"value","type":"uint256[]","internalType":"uint256[]"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"},{"name":"defaultValue","type":"string[]","internalType":"string[]"}],"outputs":[{"name":"value","type":"string[]","internalType":"string[]"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"defaultValue","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"value","type":"bytes","internalType":"bytes"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"defaultValue","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"value","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"defaultValue","type":"int256","internalType":"int256"}],"outputs":[{"name":"value","type":"int256","internalType":"int256"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"},{"name":"defaultValue","type":"address[]","internalType":"address[]"}],"outputs":[{"name":"value","type":"address[]","internalType":"address[]"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"defaultValue","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"},{"name":"defaultValue","type":"bool[]","internalType":"bool[]"}],"outputs":[{"name":"value","type":"bool[]","internalType":"bool[]"}],"stateMutability":"view"},{"type":"function","name":"envString","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"string[]","internalType":"string[]"}],"stateMutability":"view"},{"type":"function","name":"envString","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"envUint","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"envUint","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"uint256[]","internalType":"uint256[]"}],"stateMutability":"view"},{"type":"function","name":"etch","inputs":[{"name":"target","type":"address","internalType":"address"},{"name":"newRuntimeBytecode","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"eth_getLogs","inputs":[{"name":"fromBlock","type":"uint256","internalType":"uint256"},{"name":"toBlock","type":"uint256","internalType":"uint256"},{"name":"target","type":"address","internalType":"address"},{"name":"topics","type":"bytes32[]","internalType":"bytes32[]"}],"outputs":[{"name":"logs","type":"tuple[]","internalType":"struct VmSafe.EthGetLogs[]","components":[{"name":"emitter","type":"address","internalType":"address"},{"name":"topics","type":"bytes32[]","internalType":"bytes32[]"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"blockHash","type":"bytes32","internalType":"bytes32"},{"name":"blockNumber","type":"uint64","internalType":"uint64"},{"name":"transactionHash","type":"bytes32","internalType":"bytes32"},{"name":"transactionIndex","type":"uint64","internalType":"uint64"},{"name":"logIndex","type":"uint256","internalType":"uint256"},{"name":"removed","type":"bool","internalType":"bool"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"exists","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[{"name":"result","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"expectCall","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"msgValue","type":"uint256","internalType":"uint256"},{"name":"gas","type":"uint64","internalType":"uint64"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectCall","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"msgValue","type":"uint256","internalType":"uint256"},{"name":"gas","type":"uint64","internalType":"uint64"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"count","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectCall","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"msgValue","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"count","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectCall","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectCall","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"count","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectCall","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"msgValue","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectCallMinGas","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"msgValue","type":"uint256","internalType":"uint256"},{"name":"minGas","type":"uint64","internalType":"uint64"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectCallMinGas","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"msgValue","type":"uint256","internalType":"uint256"},{"name":"minGas","type":"uint64","internalType":"uint64"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"count","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectEmit","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectEmit","inputs":[{"name":"checkTopic1","type":"bool","internalType":"bool"},{"name":"checkTopic2","type":"bool","internalType":"bool"},{"name":"checkTopic3","type":"bool","internalType":"bool"},{"name":"checkData","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectEmit","inputs":[{"name":"checkTopic1","type":"bool","internalType":"bool"},{"name":"checkTopic2","type":"bool","internalType":"bool"},{"name":"checkTopic3","type":"bool","internalType":"bool"},{"name":"checkData","type":"bool","internalType":"bool"},{"name":"emitter","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectEmit","inputs":[{"name":"emitter","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectEmitAnonymous","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectEmitAnonymous","inputs":[{"name":"emitter","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectEmitAnonymous","inputs":[{"name":"checkTopic0","type":"bool","internalType":"bool"},{"name":"checkTopic1","type":"bool","internalType":"bool"},{"name":"checkTopic2","type":"bool","internalType":"bool"},{"name":"checkTopic3","type":"bool","internalType":"bool"},{"name":"checkData","type":"bool","internalType":"bool"},{"name":"emitter","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectEmitAnonymous","inputs":[{"name":"checkTopic0","type":"bool","internalType":"bool"},{"name":"checkTopic1","type":"bool","internalType":"bool"},{"name":"checkTopic2","type":"bool","internalType":"bool"},{"name":"checkTopic3","type":"bool","internalType":"bool"},{"name":"checkData","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectRevert","inputs":[{"name":"revertData","type":"bytes4","internalType":"bytes4"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectRevert","inputs":[{"name":"revertData","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectRevert","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectSafeMemory","inputs":[{"name":"min","type":"uint64","internalType":"uint64"},{"name":"max","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectSafeMemoryCall","inputs":[{"name":"min","type":"uint64","internalType":"uint64"},{"name":"max","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"fee","inputs":[{"name":"newBasefee","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"ffi","inputs":[{"name":"commandInput","type":"string[]","internalType":"string[]"}],"outputs":[{"name":"result","type":"bytes","internalType":"bytes"}],"stateMutability":"nonpayable"},{"type":"function","name":"fsMetadata","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[{"name":"metadata","type":"tuple","internalType":"struct VmSafe.FsMetadata","components":[{"name":"isDir","type":"bool","internalType":"bool"},{"name":"isSymlink","type":"bool","internalType":"bool"},{"name":"length","type":"uint256","internalType":"uint256"},{"name":"readOnly","type":"bool","internalType":"bool"},{"name":"modified","type":"uint256","internalType":"uint256"},{"name":"accessed","type":"uint256","internalType":"uint256"},{"name":"created","type":"uint256","internalType":"uint256"}]}],"stateMutability":"view"},{"type":"function","name":"getBlobBaseFee","inputs":[],"outputs":[{"name":"blobBaseFee","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getBlobhashes","inputs":[],"outputs":[{"name":"hashes","type":"bytes32[]","internalType":"bytes32[]"}],"stateMutability":"view"},{"type":"function","name":"getBlockNumber","inputs":[],"outputs":[{"name":"height","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getBlockTimestamp","inputs":[],"outputs":[{"name":"timestamp","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getCode","inputs":[{"name":"artifactPath","type":"string","internalType":"string"}],"outputs":[{"name":"creationBytecode","type":"bytes","internalType":"bytes"}],"stateMutability":"view"},{"type":"function","name":"getDeployedCode","inputs":[{"name":"artifactPath","type":"string","internalType":"string"}],"outputs":[{"name":"runtimeBytecode","type":"bytes","internalType":"bytes"}],"stateMutability":"view"},{"type":"function","name":"getFoundryVersion","inputs":[],"outputs":[{"name":"version","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"getLabel","inputs":[{"name":"account","type":"address","internalType":"address"}],"outputs":[{"name":"currentLabel","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"getMappingKeyAndParentOf","inputs":[{"name":"target","type":"address","internalType":"address"},{"name":"elementSlot","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"found","type":"bool","internalType":"bool"},{"name":"key","type":"bytes32","internalType":"bytes32"},{"name":"parent","type":"bytes32","internalType":"bytes32"}],"stateMutability":"nonpayable"},{"type":"function","name":"getMappingLength","inputs":[{"name":"target","type":"address","internalType":"address"},{"name":"mappingSlot","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"length","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"getMappingSlotAt","inputs":[{"name":"target","type":"address","internalType":"address"},{"name":"mappingSlot","type":"bytes32","internalType":"bytes32"},{"name":"idx","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"value","type":"bytes32","internalType":"bytes32"}],"stateMutability":"nonpayable"},{"type":"function","name":"getNonce","inputs":[{"name":"account","type":"address","internalType":"address"}],"outputs":[{"name":"nonce","type":"uint64","internalType":"uint64"}],"stateMutability":"view"},{"type":"function","name":"getNonce","inputs":[{"name":"wallet","type":"tuple","internalType":"struct VmSafe.Wallet","components":[{"name":"addr","type":"address","internalType":"address"},{"name":"publicKeyX","type":"uint256","internalType":"uint256"},{"name":"publicKeyY","type":"uint256","internalType":"uint256"},{"name":"privateKey","type":"uint256","internalType":"uint256"}]}],"outputs":[{"name":"nonce","type":"uint64","internalType":"uint64"}],"stateMutability":"nonpayable"},{"type":"function","name":"getRecordedLogs","inputs":[],"outputs":[{"name":"logs","type":"tuple[]","internalType":"struct VmSafe.Log[]","components":[{"name":"topics","type":"bytes32[]","internalType":"bytes32[]"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"emitter","type":"address","internalType":"address"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"indexOf","inputs":[{"name":"input","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"isContext","inputs":[{"name":"context","type":"uint8","internalType":"enum VmSafe.ForgeContext"}],"outputs":[{"name":"result","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"isDir","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[{"name":"result","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"isFile","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[{"name":"result","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"isPersistent","inputs":[{"name":"account","type":"address","internalType":"address"}],"outputs":[{"name":"persistent","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"keyExists","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"keyExistsJson","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"keyExistsToml","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"label","inputs":[{"name":"account","type":"address","internalType":"address"},{"name":"newLabel","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"lastCallGas","inputs":[],"outputs":[{"name":"gas","type":"tuple","internalType":"struct VmSafe.Gas","components":[{"name":"gasLimit","type":"uint64","internalType":"uint64"},{"name":"gasTotalUsed","type":"uint64","internalType":"uint64"},{"name":"gasMemoryUsed","type":"uint64","internalType":"uint64"},{"name":"gasRefunded","type":"int64","internalType":"int64"},{"name":"gasRemaining","type":"uint64","internalType":"uint64"}]}],"stateMutability":"view"},{"type":"function","name":"load","inputs":[{"name":"target","type":"address","internalType":"address"},{"name":"slot","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"data","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"loadAllocs","inputs":[{"name":"pathToAllocsJson","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"makePersistent","inputs":[{"name":"accounts","type":"address[]","internalType":"address[]"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"makePersistent","inputs":[{"name":"account0","type":"address","internalType":"address"},{"name":"account1","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"makePersistent","inputs":[{"name":"account","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"makePersistent","inputs":[{"name":"account0","type":"address","internalType":"address"},{"name":"account1","type":"address","internalType":"address"},{"name":"account2","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"mockCall","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"msgValue","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"returnData","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"mockCall","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"returnData","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"mockCallRevert","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"msgValue","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"revertData","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"mockCallRevert","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"revertData","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"parseAddress","inputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"outputs":[{"name":"parsedValue","type":"address","internalType":"address"}],"stateMutability":"pure"},{"type":"function","name":"parseBool","inputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"outputs":[{"name":"parsedValue","type":"bool","internalType":"bool"}],"stateMutability":"pure"},{"type":"function","name":"parseBytes","inputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"outputs":[{"name":"parsedValue","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseBytes32","inputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"outputs":[{"name":"parsedValue","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"parseInt","inputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"outputs":[{"name":"parsedValue","type":"int256","internalType":"int256"}],"stateMutability":"pure"},{"type":"function","name":"parseJson","inputs":[{"name":"json","type":"string","internalType":"string"}],"outputs":[{"name":"abiEncodedData","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseJson","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"abiEncodedData","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonAddress","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonAddressArray","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"address[]","internalType":"address[]"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonBool","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonBoolArray","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bool[]","internalType":"bool[]"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonBytes","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonBytes32","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonBytes32Array","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes32[]","internalType":"bytes32[]"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonBytesArray","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes[]","internalType":"bytes[]"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonInt","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"int256","internalType":"int256"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonIntArray","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"int256[]","internalType":"int256[]"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonKeys","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"keys","type":"string[]","internalType":"string[]"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonString","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonStringArray","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"string[]","internalType":"string[]"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonType","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"typeDescription","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonType","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"},{"name":"typeDescription","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonTypeArray","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"},{"name":"typeDescription","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonUint","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonUintArray","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"uint256[]","internalType":"uint256[]"}],"stateMutability":"pure"},{"type":"function","name":"parseToml","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"abiEncodedData","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseToml","inputs":[{"name":"toml","type":"string","internalType":"string"}],"outputs":[{"name":"abiEncodedData","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlAddress","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlAddressArray","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"address[]","internalType":"address[]"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlBool","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlBoolArray","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bool[]","internalType":"bool[]"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlBytes","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlBytes32","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlBytes32Array","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes32[]","internalType":"bytes32[]"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlBytesArray","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes[]","internalType":"bytes[]"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlInt","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"int256","internalType":"int256"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlIntArray","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"int256[]","internalType":"int256[]"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlKeys","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"keys","type":"string[]","internalType":"string[]"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlString","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlStringArray","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"string[]","internalType":"string[]"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlUint","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlUintArray","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"uint256[]","internalType":"uint256[]"}],"stateMutability":"pure"},{"type":"function","name":"parseUint","inputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"outputs":[{"name":"parsedValue","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"pauseGasMetering","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"prank","inputs":[{"name":"msgSender","type":"address","internalType":"address"},{"name":"txOrigin","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"prank","inputs":[{"name":"msgSender","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"prevrandao","inputs":[{"name":"newPrevrandao","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"prevrandao","inputs":[{"name":"newPrevrandao","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"projectRoot","inputs":[],"outputs":[{"name":"path","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"prompt","inputs":[{"name":"promptText","type":"string","internalType":"string"}],"outputs":[{"name":"input","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"promptAddress","inputs":[{"name":"promptText","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"nonpayable"},{"type":"function","name":"promptSecret","inputs":[{"name":"promptText","type":"string","internalType":"string"}],"outputs":[{"name":"input","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"promptSecretUint","inputs":[{"name":"promptText","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"promptUint","inputs":[{"name":"promptText","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"randomAddress","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"nonpayable"},{"type":"function","name":"randomUint","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"randomUint","inputs":[{"name":"min","type":"uint256","internalType":"uint256"},{"name":"max","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"readCallers","inputs":[],"outputs":[{"name":"callerMode","type":"uint8","internalType":"enum VmSafe.CallerMode"},{"name":"msgSender","type":"address","internalType":"address"},{"name":"txOrigin","type":"address","internalType":"address"}],"stateMutability":"nonpayable"},{"type":"function","name":"readDir","inputs":[{"name":"path","type":"string","internalType":"string"},{"name":"maxDepth","type":"uint64","internalType":"uint64"}],"outputs":[{"name":"entries","type":"tuple[]","internalType":"struct VmSafe.DirEntry[]","components":[{"name":"errorMessage","type":"string","internalType":"string"},{"name":"path","type":"string","internalType":"string"},{"name":"depth","type":"uint64","internalType":"uint64"},{"name":"isDir","type":"bool","internalType":"bool"},{"name":"isSymlink","type":"bool","internalType":"bool"}]}],"stateMutability":"view"},{"type":"function","name":"readDir","inputs":[{"name":"path","type":"string","internalType":"string"},{"name":"maxDepth","type":"uint64","internalType":"uint64"},{"name":"followLinks","type":"bool","internalType":"bool"}],"outputs":[{"name":"entries","type":"tuple[]","internalType":"struct VmSafe.DirEntry[]","components":[{"name":"errorMessage","type":"string","internalType":"string"},{"name":"path","type":"string","internalType":"string"},{"name":"depth","type":"uint64","internalType":"uint64"},{"name":"isDir","type":"bool","internalType":"bool"},{"name":"isSymlink","type":"bool","internalType":"bool"}]}],"stateMutability":"view"},{"type":"function","name":"readDir","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[{"name":"entries","type":"tuple[]","internalType":"struct VmSafe.DirEntry[]","components":[{"name":"errorMessage","type":"string","internalType":"string"},{"name":"path","type":"string","internalType":"string"},{"name":"depth","type":"uint64","internalType":"uint64"},{"name":"isDir","type":"bool","internalType":"bool"},{"name":"isSymlink","type":"bool","internalType":"bool"}]}],"stateMutability":"view"},{"type":"function","name":"readFile","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[{"name":"data","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"readFileBinary","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[{"name":"data","type":"bytes","internalType":"bytes"}],"stateMutability":"view"},{"type":"function","name":"readLine","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[{"name":"line","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"readLink","inputs":[{"name":"linkPath","type":"string","internalType":"string"}],"outputs":[{"name":"targetPath","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"record","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"recordLogs","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"rememberKey","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"keyAddr","type":"address","internalType":"address"}],"stateMutability":"nonpayable"},{"type":"function","name":"removeDir","inputs":[{"name":"path","type":"string","internalType":"string"},{"name":"recursive","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"removeFile","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"replace","inputs":[{"name":"input","type":"string","internalType":"string"},{"name":"from","type":"string","internalType":"string"},{"name":"to","type":"string","internalType":"string"}],"outputs":[{"name":"output","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"resetNonce","inputs":[{"name":"account","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"resumeGasMetering","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"revertTo","inputs":[{"name":"snapshotId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"success","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"revertToAndDelete","inputs":[{"name":"snapshotId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"success","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"revokePersistent","inputs":[{"name":"accounts","type":"address[]","internalType":"address[]"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"revokePersistent","inputs":[{"name":"account","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"roll","inputs":[{"name":"newHeight","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"rollFork","inputs":[{"name":"txHash","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"rollFork","inputs":[{"name":"forkId","type":"uint256","internalType":"uint256"},{"name":"blockNumber","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"rollFork","inputs":[{"name":"blockNumber","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"rollFork","inputs":[{"name":"forkId","type":"uint256","internalType":"uint256"},{"name":"txHash","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"rpc","inputs":[{"name":"urlOrAlias","type":"string","internalType":"string"},{"name":"method","type":"string","internalType":"string"},{"name":"params","type":"string","internalType":"string"}],"outputs":[{"name":"data","type":"bytes","internalType":"bytes"}],"stateMutability":"nonpayable"},{"type":"function","name":"rpc","inputs":[{"name":"method","type":"string","internalType":"string"},{"name":"params","type":"string","internalType":"string"}],"outputs":[{"name":"data","type":"bytes","internalType":"bytes"}],"stateMutability":"nonpayable"},{"type":"function","name":"rpcUrl","inputs":[{"name":"rpcAlias","type":"string","internalType":"string"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"rpcUrlStructs","inputs":[],"outputs":[{"name":"urls","type":"tuple[]","internalType":"struct VmSafe.Rpc[]","components":[{"name":"key","type":"string","internalType":"string"},{"name":"url","type":"string","internalType":"string"}]}],"stateMutability":"view"},{"type":"function","name":"rpcUrls","inputs":[],"outputs":[{"name":"urls","type":"string[2][]","internalType":"string[2][]"}],"stateMutability":"view"},{"type":"function","name":"selectFork","inputs":[{"name":"forkId","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"serializeAddress","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"values","type":"address[]","internalType":"address[]"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeAddress","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"value","type":"address","internalType":"address"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeBool","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"values","type":"bool[]","internalType":"bool[]"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeBool","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"value","type":"bool","internalType":"bool"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeBytes","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"values","type":"bytes[]","internalType":"bytes[]"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeBytes","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"value","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeBytes32","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"values","type":"bytes32[]","internalType":"bytes32[]"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeBytes32","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"value","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeInt","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"value","type":"int256","internalType":"int256"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeInt","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"values","type":"int256[]","internalType":"int256[]"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeJson","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"value","type":"string","internalType":"string"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeJsonType","inputs":[{"name":"typeDescription","type":"string","internalType":"string"},{"name":"value","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"serializeJsonType","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"typeDescription","type":"string","internalType":"string"},{"name":"value","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeString","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"values","type":"string[]","internalType":"string[]"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeString","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"value","type":"string","internalType":"string"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeUint","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"value","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeUint","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"values","type":"uint256[]","internalType":"uint256[]"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeUintToHex","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"value","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"setBlockhash","inputs":[{"name":"blockNumber","type":"uint256","internalType":"uint256"},{"name":"blockHash","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setEnv","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"value","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setNonce","inputs":[{"name":"account","type":"address","internalType":"address"},{"name":"newNonce","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setNonceUnsafe","inputs":[{"name":"account","type":"address","internalType":"address"},{"name":"newNonce","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"sign","inputs":[{"name":"digest","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"v","type":"uint8","internalType":"uint8"},{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"s","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"sign","inputs":[{"name":"signer","type":"address","internalType":"address"},{"name":"digest","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"v","type":"uint8","internalType":"uint8"},{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"s","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"sign","inputs":[{"name":"wallet","type":"tuple","internalType":"struct VmSafe.Wallet","components":[{"name":"addr","type":"address","internalType":"address"},{"name":"publicKeyX","type":"uint256","internalType":"uint256"},{"name":"publicKeyY","type":"uint256","internalType":"uint256"},{"name":"privateKey","type":"uint256","internalType":"uint256"}]},{"name":"digest","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"v","type":"uint8","internalType":"uint8"},{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"s","type":"bytes32","internalType":"bytes32"}],"stateMutability":"nonpayable"},{"type":"function","name":"sign","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"},{"name":"digest","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"v","type":"uint8","internalType":"uint8"},{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"s","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"signCompact","inputs":[{"name":"wallet","type":"tuple","internalType":"struct VmSafe.Wallet","components":[{"name":"addr","type":"address","internalType":"address"},{"name":"publicKeyX","type":"uint256","internalType":"uint256"},{"name":"publicKeyY","type":"uint256","internalType":"uint256"},{"name":"privateKey","type":"uint256","internalType":"uint256"}]},{"name":"digest","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"vs","type":"bytes32","internalType":"bytes32"}],"stateMutability":"nonpayable"},{"type":"function","name":"signCompact","inputs":[{"name":"signer","type":"address","internalType":"address"},{"name":"digest","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"vs","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"signCompact","inputs":[{"name":"digest","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"vs","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"signCompact","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"},{"name":"digest","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"vs","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"signP256","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"},{"name":"digest","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"s","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"skip","inputs":[{"name":"skipTest","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"sleep","inputs":[{"name":"duration","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"snapshot","inputs":[],"outputs":[{"name":"snapshotId","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"split","inputs":[{"name":"input","type":"string","internalType":"string"},{"name":"delimiter","type":"string","internalType":"string"}],"outputs":[{"name":"outputs","type":"string[]","internalType":"string[]"}],"stateMutability":"pure"},{"type":"function","name":"startBroadcast","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"startBroadcast","inputs":[{"name":"signer","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"startBroadcast","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"startMappingRecording","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"startPrank","inputs":[{"name":"msgSender","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"startPrank","inputs":[{"name":"msgSender","type":"address","internalType":"address"},{"name":"txOrigin","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"startStateDiffRecording","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"stopAndReturnStateDiff","inputs":[],"outputs":[{"name":"accountAccesses","type":"tuple[]","internalType":"struct VmSafe.AccountAccess[]","components":[{"name":"chainInfo","type":"tuple","internalType":"struct VmSafe.ChainInfo","components":[{"name":"forkId","type":"uint256","internalType":"uint256"},{"name":"chainId","type":"uint256","internalType":"uint256"}]},{"name":"kind","type":"uint8","internalType":"enum VmSafe.AccountAccessKind"},{"name":"account","type":"address","internalType":"address"},{"name":"accessor","type":"address","internalType":"address"},{"name":"initialized","type":"bool","internalType":"bool"},{"name":"oldBalance","type":"uint256","internalType":"uint256"},{"name":"newBalance","type":"uint256","internalType":"uint256"},{"name":"deployedCode","type":"bytes","internalType":"bytes"},{"name":"value","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"reverted","type":"bool","internalType":"bool"},{"name":"storageAccesses","type":"tuple[]","internalType":"struct VmSafe.StorageAccess[]","components":[{"name":"account","type":"address","internalType":"address"},{"name":"slot","type":"bytes32","internalType":"bytes32"},{"name":"isWrite","type":"bool","internalType":"bool"},{"name":"previousValue","type":"bytes32","internalType":"bytes32"},{"name":"newValue","type":"bytes32","internalType":"bytes32"},{"name":"reverted","type":"bool","internalType":"bool"}]},{"name":"depth","type":"uint64","internalType":"uint64"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"stopBroadcast","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"stopExpectSafeMemory","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"stopMappingRecording","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"stopPrank","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"store","inputs":[{"name":"target","type":"address","internalType":"address"},{"name":"slot","type":"bytes32","internalType":"bytes32"},{"name":"value","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"toBase64","inputs":[{"name":"data","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toBase64","inputs":[{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toBase64URL","inputs":[{"name":"data","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toBase64URL","inputs":[{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toLowercase","inputs":[{"name":"input","type":"string","internalType":"string"}],"outputs":[{"name":"output","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toString","inputs":[{"name":"value","type":"address","internalType":"address"}],"outputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toString","inputs":[{"name":"value","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toString","inputs":[{"name":"value","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toString","inputs":[{"name":"value","type":"bool","internalType":"bool"}],"outputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toString","inputs":[{"name":"value","type":"int256","internalType":"int256"}],"outputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toString","inputs":[{"name":"value","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toUppercase","inputs":[{"name":"input","type":"string","internalType":"string"}],"outputs":[{"name":"output","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"transact","inputs":[{"name":"forkId","type":"uint256","internalType":"uint256"},{"name":"txHash","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"transact","inputs":[{"name":"txHash","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"trim","inputs":[{"name":"input","type":"string","internalType":"string"}],"outputs":[{"name":"output","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"tryFfi","inputs":[{"name":"commandInput","type":"string[]","internalType":"string[]"}],"outputs":[{"name":"result","type":"tuple","internalType":"struct VmSafe.FfiResult","components":[{"name":"exitCode","type":"int32","internalType":"int32"},{"name":"stdout","type":"bytes","internalType":"bytes"},{"name":"stderr","type":"bytes","internalType":"bytes"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"txGasPrice","inputs":[{"name":"newGasPrice","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"unixTime","inputs":[],"outputs":[{"name":"milliseconds","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"warp","inputs":[{"name":"newTimestamp","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"writeFile","inputs":[{"name":"path","type":"string","internalType":"string"},{"name":"data","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"writeFileBinary","inputs":[{"name":"path","type":"string","internalType":"string"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"writeJson","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"path","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"writeJson","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"path","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"writeLine","inputs":[{"name":"path","type":"string","internalType":"string"},{"name":"data","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"writeToml","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"path","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"writeToml","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"path","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"accesses(address)":"65bc9481","activeFork()":"2f103f22","addr(uint256)":"ffa18649","allowCheatcodes(address)":"ea060291","assertApproxEqAbs(int256,int256,uint256)":"240f839d","assertApproxEqAbs(int256,int256,uint256,string)":"8289e621","assertApproxEqAbs(uint256,uint256,uint256)":"16d207c6","assertApproxEqAbs(uint256,uint256,uint256,string)":"f710b062","assertApproxEqAbsDecimal(int256,int256,uint256,uint256)":"3d5bc8bc","assertApproxEqAbsDecimal(int256,int256,uint256,uint256,string)":"6a5066d4","assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256)":"045c55ce","assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256,string)":"60429eb2","assertApproxEqRel(int256,int256,uint256)":"fea2d14f","assertApproxEqRel(int256,int256,uint256,string)":"ef277d72","assertApproxEqRel(uint256,uint256,uint256)":"8cf25ef4","assertApproxEqRel(uint256,uint256,uint256,string)":"1ecb7d33","assertApproxEqRelDecimal(int256,int256,uint256,uint256)":"abbf21cc","assertApproxEqRelDecimal(int256,int256,uint256,uint256,string)":"fccc11c4","assertApproxEqRelDecimal(uint256,uint256,uint256,uint256)":"21ed2977","assertApproxEqRelDecimal(uint256,uint256,uint256,uint256,string)":"82d6c8fd","assertEq(address,address)":"515361f6","assertEq(address,address,string)":"2f2769d1","assertEq(address[],address[])":"3868ac34","assertEq(address[],address[],string)":"3e9173c5","assertEq(bool,bool)":"f7fe3477","assertEq(bool,bool,string)":"4db19e7e","assertEq(bool[],bool[])":"707df785","assertEq(bool[],bool[],string)":"e48a8f8d","assertEq(bytes,bytes)":"97624631","assertEq(bytes,bytes,string)":"e24fed00","assertEq(bytes32,bytes32)":"7c84c69b","assertEq(bytes32,bytes32,string)":"c1fa1ed0","assertEq(bytes32[],bytes32[])":"0cc9ee84","assertEq(bytes32[],bytes32[],string)":"e03e9177","assertEq(bytes[],bytes[])":"e5fb9b4a","assertEq(bytes[],bytes[],string)":"f413f0b6","assertEq(int256,int256)":"fe74f05b","assertEq(int256,int256,string)":"714a2f13","assertEq(int256[],int256[])":"711043ac","assertEq(int256[],int256[],string)":"191f1b30","assertEq(string,string)":"f320d963","assertEq(string,string,string)":"36f656d8","assertEq(string[],string[])":"cf1c049c","assertEq(string[],string[],string)":"eff6b27d","assertEq(uint256,uint256)":"98296c54","assertEq(uint256,uint256,string)":"88b44c85","assertEq(uint256[],uint256[])":"975d5a12","assertEq(uint256[],uint256[],string)":"5d18c73a","assertEqDecimal(int256,int256,uint256)":"48016c04","assertEqDecimal(int256,int256,uint256,string)":"7e77b0c5","assertEqDecimal(uint256,uint256,uint256)":"27af7d9c","assertEqDecimal(uint256,uint256,uint256,string)":"d0cbbdef","assertFalse(bool)":"a5982885","assertFalse(bool,string)":"7ba04809","assertGe(int256,int256)":"0a30b771","assertGe(int256,int256,string)":"a84328dd","assertGe(uint256,uint256)":"a8d4d1d9","assertGe(uint256,uint256,string)":"e25242c0","assertGeDecimal(int256,int256,uint256)":"dc28c0f1","assertGeDecimal(int256,int256,uint256,string)":"5df93c9b","assertGeDecimal(uint256,uint256,uint256)":"3d1fe08a","assertGeDecimal(uint256,uint256,uint256,string)":"8bff9133","assertGt(int256,int256)":"5a362d45","assertGt(int256,int256,string)":"f8d33b9b","assertGt(uint256,uint256)":"db07fcd2","assertGt(uint256,uint256,string)":"d9a3c4d2","assertGtDecimal(int256,int256,uint256)":"78611f0e","assertGtDecimal(int256,int256,uint256,string)":"04a5c7ab","assertGtDecimal(uint256,uint256,uint256)":"eccd2437","assertGtDecimal(uint256,uint256,uint256,string)":"64949a8d","assertLe(int256,int256)":"95fd154e","assertLe(int256,int256,string)":"4dfe692c","assertLe(uint256,uint256)":"8466f415","assertLe(uint256,uint256,string)":"d17d4b0d","assertLeDecimal(int256,int256,uint256)":"11d1364a","assertLeDecimal(int256,int256,uint256,string)":"aa5cf788","assertLeDecimal(uint256,uint256,uint256)":"c304aab7","assertLeDecimal(uint256,uint256,uint256,string)":"7fefbbe0","assertLt(int256,int256)":"3e914080","assertLt(int256,int256,string)":"9ff531e3","assertLt(uint256,uint256)":"b12fc005","assertLt(uint256,uint256,string)":"65d5c135","assertLtDecimal(int256,int256,uint256)":"dbe8d88b","assertLtDecimal(int256,int256,uint256,string)":"40f0b4e0","assertLtDecimal(uint256,uint256,uint256)":"2077337e","assertLtDecimal(uint256,uint256,uint256,string)":"a972d037","assertNotEq(address,address)":"b12e1694","assertNotEq(address,address,string)":"8775a591","assertNotEq(address[],address[])":"46d0b252","assertNotEq(address[],address[],string)":"72c7e0b5","assertNotEq(bool,bool)":"236e4d66","assertNotEq(bool,bool,string)":"1091a261","assertNotEq(bool[],bool[])":"286fafea","assertNotEq(bool[],bool[],string)":"62c6f9fb","assertNotEq(bytes,bytes)":"3cf78e28","assertNotEq(bytes,bytes,string)":"9507540e","assertNotEq(bytes32,bytes32)":"898e83fc","assertNotEq(bytes32,bytes32,string)":"b2332f51","assertNotEq(bytes32[],bytes32[])":"0603ea68","assertNotEq(bytes32[],bytes32[],string)":"b873634c","assertNotEq(bytes[],bytes[])":"edecd035","assertNotEq(bytes[],bytes[],string)":"1dcd1f68","assertNotEq(int256,int256)":"f4c004e3","assertNotEq(int256,int256,string)":"4724c5b9","assertNotEq(int256[],int256[])":"0b72f4ef","assertNotEq(int256[],int256[],string)":"d3977322","assertNotEq(string,string)":"6a8237b3","assertNotEq(string,string,string)":"78bdcea7","assertNotEq(string[],string[])":"bdfacbe8","assertNotEq(string[],string[],string)":"b67187f3","assertNotEq(uint256,uint256)":"b7909320","assertNotEq(uint256,uint256,string)":"98f9bdbd","assertNotEq(uint256[],uint256[])":"56f29cba","assertNotEq(uint256[],uint256[],string)":"9a7fbd8f","assertNotEqDecimal(int256,int256,uint256)":"14e75680","assertNotEqDecimal(int256,int256,uint256,string)":"33949f0b","assertNotEqDecimal(uint256,uint256,uint256)":"669efca7","assertNotEqDecimal(uint256,uint256,uint256,string)":"f5a55558","assertTrue(bool)":"0c9fd581","assertTrue(bool,string)":"a34edc03","assume(bool)":"4c63e562","blobBaseFee(uint256)":"6d315d7e","blobhashes(bytes32[])":"129de7eb","breakpoint(string)":"f0259e92","breakpoint(string,bool)":"f7d39a8d","broadcast()":"afc98040","broadcast(address)":"e6962cdb","broadcast(uint256)":"f67a965b","broadcastRawTransaction(bytes)":"8c0c72e0","chainId(uint256)":"4049ddd2","clearMockedCalls()":"3fdf4e15","closeFile(string)":"48c3241f","coinbase(address)":"ff483c54","computeCreate2Address(bytes32,bytes32)":"890c283b","computeCreate2Address(bytes32,bytes32,address)":"d323826a","computeCreateAddress(address,uint256)":"74637a7a","copyFile(string,string)":"a54a87d8","createDir(string,bool)":"168b64d3","createFork(string)":"31ba3498","createFork(string,bytes32)":"7ca29682","createFork(string,uint256)":"6ba3ba2b","createSelectFork(string)":"98680034","createSelectFork(string,bytes32)":"84d52b7a","createSelectFork(string,uint256)":"71ee464d","createWallet(string)":"7404f1d2","createWallet(uint256)":"7a675bb6","createWallet(uint256,string)":"ed7c5462","deal(address,uint256)":"c88a5e6d","deleteSnapshot(uint256)":"a6368557","deleteSnapshots()":"421ae469","deployCode(string)":"9a8325a0","deployCode(string,bytes)":"29ce9dde","deriveKey(string,string,uint32)":"6bcb2c1b","deriveKey(string,string,uint32,string)":"29233b1f","deriveKey(string,uint32)":"6229498b","deriveKey(string,uint32,string)":"32c8176d","difficulty(uint256)":"46cc92d9","dumpState(string)":"709ecd3f","ensNamehash(string)":"8c374c65","envAddress(string)":"350d56bf","envAddress(string,string)":"ad31b9fa","envBool(string)":"7ed1ec7d","envBool(string,string)":"aaaddeaf","envBytes(string)":"4d7baf06","envBytes(string,string)":"ddc2651b","envBytes32(string)":"97949042","envBytes32(string,string)":"5af231c1","envExists(string)":"ce8365f9","envInt(string)":"892a0c61","envInt(string,string)":"42181150","envOr(string,address)":"561fe540","envOr(string,bool)":"4777f3cf","envOr(string,bytes)":"b3e47705","envOr(string,bytes32)":"b4a85892","envOr(string,int256)":"bbcb713e","envOr(string,string)":"d145736c","envOr(string,string,address[])":"c74e9deb","envOr(string,string,bool[])":"eb85e83b","envOr(string,string,bytes32[])":"2281f367","envOr(string,string,bytes[])":"64bc3e64","envOr(string,string,int256[])":"4700d74b","envOr(string,string,string[])":"859216bc","envOr(string,string,uint256[])":"74318528","envOr(string,uint256)":"5e97348f","envString(string)":"f877cb19","envString(string,string)":"14b02bc9","envUint(string)":"c1978d1f","envUint(string,string)":"f3dec099","etch(address,bytes)":"b4d6c782","eth_getLogs(uint256,uint256,address,bytes32[])":"35e1349b","exists(string)":"261a323e","expectCall(address,bytes)":"bd6af434","expectCall(address,bytes,uint64)":"c1adbbff","expectCall(address,uint256,bytes)":"f30c7ba3","expectCall(address,uint256,bytes,uint64)":"a2b1a1ae","expectCall(address,uint256,uint64,bytes)":"23361207","expectCall(address,uint256,uint64,bytes,uint64)":"65b7b7cc","expectCallMinGas(address,uint256,uint64,bytes)":"08e4e116","expectCallMinGas(address,uint256,uint64,bytes,uint64)":"e13a1834","expectEmit()":"440ed10d","expectEmit(address)":"86b9620d","expectEmit(bool,bool,bool,bool)":"491cc7c2","expectEmit(bool,bool,bool,bool,address)":"81bad6f3","expectEmitAnonymous()":"2e5f270c","expectEmitAnonymous(address)":"6fc68705","expectEmitAnonymous(bool,bool,bool,bool,bool)":"c948db5e","expectEmitAnonymous(bool,bool,bool,bool,bool,address)":"71c95899","expectRevert()":"f4844814","expectRevert(bytes)":"f28dceb3","expectRevert(bytes4)":"c31eb0e0","expectSafeMemory(uint64,uint64)":"6d016688","expectSafeMemoryCall(uint64,uint64)":"05838bf4","fee(uint256)":"39b37ab0","ffi(string[])":"89160467","fsMetadata(string)":"af368a08","getBlobBaseFee()":"1f6d6ef7","getBlobhashes()":"f56ff18b","getBlockNumber()":"42cbb15c","getBlockTimestamp()":"796b89b9","getCode(string)":"8d1cc925","getDeployedCode(string)":"3ebf73b4","getFoundryVersion()":"ea991bb5","getLabel(address)":"28a249b0","getMappingKeyAndParentOf(address,bytes32)":"876e24e6","getMappingLength(address,bytes32)":"2f2fd63f","getMappingSlotAt(address,bytes32,uint256)":"ebc73ab4","getNonce((address,uint256,uint256,uint256))":"a5748aad","getNonce(address)":"2d0335ab","getRecordedLogs()":"191553a4","indexOf(string,string)":"8a0807b7","isContext(uint8)":"64af255d","isDir(string)":"7d15d019","isFile(string)":"e0eb04d4","isPersistent(address)":"d92d8efd","keyExists(string,string)":"528a683c","keyExistsJson(string,string)":"db4235f6","keyExistsToml(string,string)":"600903ad","label(address,string)":"c657c718","lastCallGas()":"2b589b28","load(address,bytes32)":"667f9d70","loadAllocs(string)":"b3a056d7","makePersistent(address)":"57e22dde","makePersistent(address,address)":"4074e0a8","makePersistent(address,address,address)":"efb77a75","makePersistent(address[])":"1d9e269e","mockCall(address,bytes,bytes)":"b96213e4","mockCall(address,uint256,bytes,bytes)":"81409b91","mockCallRevert(address,bytes,bytes)":"dbaad147","mockCallRevert(address,uint256,bytes,bytes)":"d23cd037","parseAddress(string)":"c6ce059d","parseBool(string)":"974ef924","parseBytes(string)":"8f5d232d","parseBytes32(string)":"087e6e81","parseInt(string)":"42346c5e","parseJson(string)":"6a82600a","parseJson(string,string)":"85940ef1","parseJsonAddress(string,string)":"1e19e657","parseJsonAddressArray(string,string)":"2fce7883","parseJsonBool(string,string)":"9f86dc91","parseJsonBoolArray(string,string)":"91f3b94f","parseJsonBytes(string,string)":"fd921be8","parseJsonBytes32(string,string)":"1777e59d","parseJsonBytes32Array(string,string)":"91c75bc3","parseJsonBytesArray(string,string)":"6631aa99","parseJsonInt(string,string)":"7b048ccd","parseJsonIntArray(string,string)":"9983c28a","parseJsonKeys(string,string)":"213e4198","parseJsonString(string,string)":"49c4fac8","parseJsonStringArray(string,string)":"498fdcf4","parseJsonType(string,string)":"a9da313b","parseJsonType(string,string,string)":"e3f5ae33","parseJsonTypeArray(string,string,string)":"0175d535","parseJsonUint(string,string)":"addde2b6","parseJsonUintArray(string,string)":"522074ab","parseToml(string)":"592151f0","parseToml(string,string)":"37736e08","parseTomlAddress(string,string)":"65e7c844","parseTomlAddressArray(string,string)":"65c428e7","parseTomlBool(string,string)":"d30dced6","parseTomlBoolArray(string,string)":"127cfe9a","parseTomlBytes(string,string)":"d77bfdb9","parseTomlBytes32(string,string)":"8e214810","parseTomlBytes32Array(string,string)":"3e716f81","parseTomlBytesArray(string,string)":"b197c247","parseTomlInt(string,string)":"c1350739","parseTomlIntArray(string,string)":"d3522ae6","parseTomlKeys(string,string)":"812a44b2","parseTomlString(string,string)":"8bb8dd43","parseTomlStringArray(string,string)":"9f629281","parseTomlUint(string,string)":"cc7b0487","parseTomlUintArray(string,string)":"b5df27c8","parseUint(string)":"fa91454d","pauseGasMetering()":"d1a5b36f","prank(address)":"ca669fa7","prank(address,address)":"47e50cce","prevrandao(bytes32)":"3b925549","prevrandao(uint256)":"9cb1c0d4","projectRoot()":"d930a0e6","prompt(string)":"47eaf474","promptAddress(string)":"62ee05f4","promptSecret(string)":"1e279d41","promptSecretUint(string)":"69ca02b7","promptUint(string)":"652fd489","randomAddress()":"d5bee9f5","randomUint()":"25124730","randomUint(uint256,uint256)":"d61b051b","readCallers()":"4ad0bac9","readDir(string)":"c4bc59e0","readDir(string,uint64)":"1497876c","readDir(string,uint64,bool)":"8102d70d","readFile(string)":"60f9bb11","readFileBinary(string)":"16ed7bc4","readLine(string)":"70f55728","readLink(string)":"9f5684a2","record()":"266cf109","recordLogs()":"41af2f52","rememberKey(uint256)":"22100064","removeDir(string,bool)":"45c62011","removeFile(string)":"f1afe04d","replace(string,string,string)":"e00ad03e","resetNonce(address)":"1c72346d","resumeGasMetering()":"2bcd50e0","revertTo(uint256)":"44d7f0a4","revertToAndDelete(uint256)":"03e0aca9","revokePersistent(address)":"997a0222","revokePersistent(address[])":"3ce969e6","roll(uint256)":"1f7b4f30","rollFork(bytes32)":"0f29772b","rollFork(uint256)":"d9bbf3a1","rollFork(uint256,bytes32)":"f2830f7b","rollFork(uint256,uint256)":"d74c83a4","rpc(string,string)":"1206c8a8","rpc(string,string,string)":"0199a220","rpcUrl(string)":"975a6ce9","rpcUrlStructs()":"9d2ad72a","rpcUrls()":"a85a8418","selectFork(uint256)":"9ebf6827","serializeAddress(string,string,address)":"972c6062","serializeAddress(string,string,address[])":"1e356e1a","serializeBool(string,string,bool)":"ac22e971","serializeBool(string,string,bool[])":"92925aa1","serializeBytes(string,string,bytes)":"f21d52c7","serializeBytes(string,string,bytes[])":"9884b232","serializeBytes32(string,string,bytes32)":"2d812b44","serializeBytes32(string,string,bytes32[])":"201e43e2","serializeInt(string,string,int256)":"3f33db60","serializeInt(string,string,int256[])":"7676e127","serializeJson(string,string)":"9b3358b0","serializeJsonType(string,bytes)":"6d4f96a6","serializeJsonType(string,string,string,bytes)":"6f93bccb","serializeString(string,string,string)":"88da6d35","serializeString(string,string,string[])":"561cd6f3","serializeUint(string,string,uint256)":"129e9002","serializeUint(string,string,uint256[])":"fee9a469","serializeUintToHex(string,string,uint256)":"ae5a2ae8","setBlockhash(uint256,bytes32)":"5314b54a","setEnv(string,string)":"3d5923ee","setNonce(address,uint64)":"f8e18b57","setNonceUnsafe(address,uint64)":"9b67b21c","sign((address,uint256,uint256,uint256),bytes32)":"b25c5a25","sign(address,bytes32)":"8c1aa205","sign(bytes32)":"799cd333","sign(uint256,bytes32)":"e341eaa4","signCompact((address,uint256,uint256,uint256),bytes32)":"3d0e292f","signCompact(address,bytes32)":"8e2f97bf","signCompact(bytes32)":"a282dc4b","signCompact(uint256,bytes32)":"cc2a781f","signP256(uint256,bytes32)":"83211b40","skip(bool)":"dd82d13e","sleep(uint256)":"fa9d8713","snapshot()":"9711715a","split(string,string)":"8bb75533","startBroadcast()":"7fb5297f","startBroadcast(address)":"7fec2a8d","startBroadcast(uint256)":"ce817d47","startMappingRecording()":"3e9705c0","startPrank(address)":"06447d56","startPrank(address,address)":"45b56078","startStateDiffRecording()":"cf22e3c9","stopAndReturnStateDiff()":"aa5cf90e","stopBroadcast()":"76eadd36","stopExpectSafeMemory()":"0956441b","stopMappingRecording()":"0d4aae9b","stopPrank()":"90c5013b","store(address,bytes32,bytes32)":"70ca10bb","toBase64(bytes)":"a5cbfe65","toBase64(string)":"3f8be2c8","toBase64URL(bytes)":"c8bd0e4a","toBase64URL(string)":"ae3165b3","toLowercase(string)":"50bb0884","toString(address)":"56ca623e","toString(bool)":"71dce7da","toString(bytes)":"71aad10d","toString(bytes32)":"b11a19e8","toString(int256)":"a322c40e","toString(uint256)":"6900a3ae","toUppercase(string)":"074ae3d7","transact(bytes32)":"be646da1","transact(uint256,bytes32)":"4d8abc4b","trim(string)":"b2dad155","tryFfi(string[])":"f45c1ce7","txGasPrice(uint256)":"48f50c0f","unixTime()":"625387dc","warp(uint256)":"e5d6bf02","writeFile(string,string)":"897e0a97","writeFileBinary(string,bytes)":"1f21fc80","writeJson(string,string)":"e23cd19f","writeJson(string,string,string)":"35d6ad46","writeLine(string,string)":"619d897f","writeToml(string,string)":"c0865ba7","writeToml(string,string,string)":"51ac6a33"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"accesses\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"readSlots\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"writeSlots\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"activeFork\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"name\":\"addr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"keyAddr\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"allowCheatcodes\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqAbs\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqAbs\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqAbs\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqAbs\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqAbsDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqAbsDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqAbsDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqAbsDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqRel\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqRel\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqRel\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqRel\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqRelDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqRelDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqRelDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqRelDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"left\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"right\",\"type\":\"bytes32[]\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256[]\",\"name\":\"left\",\"type\":\"int256[]\"},{\"internalType\":\"int256[]\",\"name\":\"right\",\"type\":\"int256[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"left\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"right\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"left\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"right\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"left\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"right\",\"type\":\"address[]\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"left\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"right\",\"type\":\"address[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"left\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"right\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"left\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"right\",\"type\":\"address\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"left\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"right\",\"type\":\"uint256[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool[]\",\"name\":\"left\",\"type\":\"bool[]\"},{\"internalType\":\"bool[]\",\"name\":\"right\",\"type\":\"bool[]\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256[]\",\"name\":\"left\",\"type\":\"int256[]\"},{\"internalType\":\"int256[]\",\"name\":\"right\",\"type\":\"int256[]\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"left\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"right\",\"type\":\"bytes32\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"left\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"right\",\"type\":\"uint256[]\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"left\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"right\",\"type\":\"bytes\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"left\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"right\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"left\",\"type\":\"string[]\"},{\"internalType\":\"string[]\",\"name\":\"right\",\"type\":\"string[]\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"left\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"right\",\"type\":\"bytes32[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"left\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"right\",\"type\":\"bytes\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool[]\",\"name\":\"left\",\"type\":\"bool[]\"},{\"internalType\":\"bool[]\",\"name\":\"right\",\"type\":\"bool[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"left\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes[]\",\"name\":\"right\",\"type\":\"bytes[]\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"left\",\"type\":\"string[]\"},{\"internalType\":\"string[]\",\"name\":\"right\",\"type\":\"string[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"left\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"right\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"left\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes[]\",\"name\":\"right\",\"type\":\"bytes[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"left\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"right\",\"type\":\"bool\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"condition\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertFalse\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"condition\",\"type\":\"bool\"}],\"name\":\"assertFalse\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"}],\"name\":\"assertGe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"}],\"name\":\"assertGe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertGeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertGeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"}],\"name\":\"assertGt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"}],\"name\":\"assertGt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertGtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertGtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"}],\"name\":\"assertLe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"}],\"name\":\"assertLe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertLeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertLeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"}],\"name\":\"assertLt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"}],\"name\":\"assertLt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertLtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertLtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"left\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"right\",\"type\":\"bytes32[]\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256[]\",\"name\":\"left\",\"type\":\"int256[]\"},{\"internalType\":\"int256[]\",\"name\":\"right\",\"type\":\"int256[]\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"left\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"right\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"left\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes[]\",\"name\":\"right\",\"type\":\"bytes[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"left\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"right\",\"type\":\"bool\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool[]\",\"name\":\"left\",\"type\":\"bool[]\"},{\"internalType\":\"bool[]\",\"name\":\"right\",\"type\":\"bool[]\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"left\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"right\",\"type\":\"bytes\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"left\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"right\",\"type\":\"address[]\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"left\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"right\",\"type\":\"uint256[]\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool[]\",\"name\":\"left\",\"type\":\"bool[]\"},{\"internalType\":\"bool[]\",\"name\":\"right\",\"type\":\"bool[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"left\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"right\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"left\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"right\",\"type\":\"address[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"left\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"right\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"left\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"right\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"left\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"right\",\"type\":\"bytes32\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"left\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"right\",\"type\":\"bytes\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"left\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"right\",\"type\":\"uint256[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"left\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"right\",\"type\":\"address\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"left\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"right\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"left\",\"type\":\"string[]\"},{\"internalType\":\"string[]\",\"name\":\"right\",\"type\":\"string[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"left\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"right\",\"type\":\"bytes32[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"left\",\"type\":\"string[]\"},{\"internalType\":\"string[]\",\"name\":\"right\",\"type\":\"string[]\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256[]\",\"name\":\"left\",\"type\":\"int256[]\"},{\"internalType\":\"int256[]\",\"name\":\"right\",\"type\":\"int256[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"left\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes[]\",\"name\":\"right\",\"type\":\"bytes[]\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertNotEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertNotEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"condition\",\"type\":\"bool\"}],\"name\":\"assertTrue\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"condition\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertTrue\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"condition\",\"type\":\"bool\"}],\"name\":\"assume\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newBlobBaseFee\",\"type\":\"uint256\"}],\"name\":\"blobBaseFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"hashes\",\"type\":\"bytes32[]\"}],\"name\":\"blobhashes\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"char\",\"type\":\"string\"}],\"name\":\"breakpoint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"char\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"breakpoint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"broadcast\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"}],\"name\":\"broadcast\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"name\":\"broadcast\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"broadcastRawTransaction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newChainId\",\"type\":\"uint256\"}],\"name\":\"chainId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"clearMockedCalls\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"closeFile\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newCoinbase\",\"type\":\"address\"}],\"name\":\"coinbase\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"initCodeHash\",\"type\":\"bytes32\"}],\"name\":\"computeCreate2Address\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"initCodeHash\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"deployer\",\"type\":\"address\"}],\"name\":\"computeCreate2Address\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"deployer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"name\":\"computeCreateAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"from\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"to\",\"type\":\"string\"}],\"name\":\"copyFile\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"copied\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"recursive\",\"type\":\"bool\"}],\"name\":\"createDir\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"urlOrAlias\",\"type\":\"string\"}],\"name\":\"createFork\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"urlOrAlias\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"createFork\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"urlOrAlias\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"txHash\",\"type\":\"bytes32\"}],\"name\":\"createFork\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"urlOrAlias\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"createSelectFork\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"urlOrAlias\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"txHash\",\"type\":\"bytes32\"}],\"name\":\"createSelectFork\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"urlOrAlias\",\"type\":\"string\"}],\"name\":\"createSelectFork\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"walletLabel\",\"type\":\"string\"}],\"name\":\"createWallet\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyX\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.Wallet\",\"name\":\"wallet\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"name\":\"createWallet\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyX\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.Wallet\",\"name\":\"wallet\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"walletLabel\",\"type\":\"string\"}],\"name\":\"createWallet\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyX\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.Wallet\",\"name\":\"wallet\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"newBalance\",\"type\":\"uint256\"}],\"name\":\"deal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"snapshotId\",\"type\":\"uint256\"}],\"name\":\"deleteSnapshot\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deleteSnapshots\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"artifactPath\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"constructorArgs\",\"type\":\"bytes\"}],\"name\":\"deployCode\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"deployedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"artifactPath\",\"type\":\"string\"}],\"name\":\"deployCode\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"deployedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"mnemonic\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"derivationPath\",\"type\":\"string\"},{\"internalType\":\"uint32\",\"name\":\"index\",\"type\":\"uint32\"},{\"internalType\":\"string\",\"name\":\"language\",\"type\":\"string\"}],\"name\":\"deriveKey\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"mnemonic\",\"type\":\"string\"},{\"internalType\":\"uint32\",\"name\":\"index\",\"type\":\"uint32\"},{\"internalType\":\"string\",\"name\":\"language\",\"type\":\"string\"}],\"name\":\"deriveKey\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"mnemonic\",\"type\":\"string\"},{\"internalType\":\"uint32\",\"name\":\"index\",\"type\":\"uint32\"}],\"name\":\"deriveKey\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"mnemonic\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"derivationPath\",\"type\":\"string\"},{\"internalType\":\"uint32\",\"name\":\"index\",\"type\":\"uint32\"}],\"name\":\"deriveKey\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newDifficulty\",\"type\":\"uint256\"}],\"name\":\"difficulty\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"pathToStateJson\",\"type\":\"string\"}],\"name\":\"dumpState\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"ensNamehash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"value\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"}],\"name\":\"envAddress\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"value\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envBool\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"}],\"name\":\"envBool\",\"outputs\":[{\"internalType\":\"bool[]\",\"name\":\"value\",\"type\":\"bool[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envBytes\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"}],\"name\":\"envBytes\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"value\",\"type\":\"bytes[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"}],\"name\":\"envBytes32\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"value\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envBytes32\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"}],\"name\":\"envInt\",\"outputs\":[{\"internalType\":\"int256[]\",\"name\":\"value\",\"type\":\"int256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envInt\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"},{\"internalType\":\"bytes32[]\",\"name\":\"defaultValue\",\"type\":\"bytes32[]\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"value\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"},{\"internalType\":\"int256[]\",\"name\":\"defaultValue\",\"type\":\"int256[]\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"int256[]\",\"name\":\"value\",\"type\":\"int256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"defaultValue\",\"type\":\"bool\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"defaultValue\",\"type\":\"address\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"value\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"defaultValue\",\"type\":\"uint256\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"},{\"internalType\":\"bytes[]\",\"name\":\"defaultValue\",\"type\":\"bytes[]\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"value\",\"type\":\"bytes[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"},{\"internalType\":\"uint256[]\",\"name\":\"defaultValue\",\"type\":\"uint256[]\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"value\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"},{\"internalType\":\"string[]\",\"name\":\"defaultValue\",\"type\":\"string[]\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"value\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"defaultValue\",\"type\":\"bytes\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"defaultValue\",\"type\":\"bytes32\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"int256\",\"name\":\"defaultValue\",\"type\":\"int256\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"},{\"internalType\":\"address[]\",\"name\":\"defaultValue\",\"type\":\"address[]\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"value\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"defaultValue\",\"type\":\"string\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"},{\"internalType\":\"bool[]\",\"name\":\"defaultValue\",\"type\":\"bool[]\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"bool[]\",\"name\":\"value\",\"type\":\"bool[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"}],\"name\":\"envString\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"value\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"}],\"name\":\"envUint\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"value\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"newRuntimeBytecode\",\"type\":\"bytes\"}],\"name\":\"etch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fromBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"toBlock\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes32[]\",\"name\":\"topics\",\"type\":\"bytes32[]\"}],\"name\":\"eth_getLogs\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"emitter\",\"type\":\"address\"},{\"internalType\":\"bytes32[]\",\"name\":\"topics\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"blockHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"blockNumber\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"transactionHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"transactionIndex\",\"type\":\"uint64\"},{\"internalType\":\"uint256\",\"name\":\"logIndex\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"removed\",\"type\":\"bool\"}],\"internalType\":\"struct VmSafe.EthGetLogs[]\",\"name\":\"logs\",\"type\":\"tuple[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"exists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"gas\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"expectCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"gas\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"count\",\"type\":\"uint64\"}],\"name\":\"expectCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"count\",\"type\":\"uint64\"}],\"name\":\"expectCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"expectCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"count\",\"type\":\"uint64\"}],\"name\":\"expectCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"expectCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"minGas\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"expectCallMinGas\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"minGas\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"count\",\"type\":\"uint64\"}],\"name\":\"expectCallMinGas\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"expectEmit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"checkTopic1\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkTopic2\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkTopic3\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkData\",\"type\":\"bool\"}],\"name\":\"expectEmit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"checkTopic1\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkTopic2\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkTopic3\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkData\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"emitter\",\"type\":\"address\"}],\"name\":\"expectEmit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"emitter\",\"type\":\"address\"}],\"name\":\"expectEmit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"expectEmitAnonymous\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"emitter\",\"type\":\"address\"}],\"name\":\"expectEmitAnonymous\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"checkTopic0\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkTopic1\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkTopic2\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkTopic3\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkData\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"emitter\",\"type\":\"address\"}],\"name\":\"expectEmitAnonymous\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"checkTopic0\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkTopic1\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkTopic2\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkTopic3\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkData\",\"type\":\"bool\"}],\"name\":\"expectEmitAnonymous\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"revertData\",\"type\":\"bytes4\"}],\"name\":\"expectRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"revertData\",\"type\":\"bytes\"}],\"name\":\"expectRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"expectRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"min\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"max\",\"type\":\"uint64\"}],\"name\":\"expectSafeMemory\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"min\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"max\",\"type\":\"uint64\"}],\"name\":\"expectSafeMemoryCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newBasefee\",\"type\":\"uint256\"}],\"name\":\"fee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"commandInput\",\"type\":\"string[]\"}],\"name\":\"ffi\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"result\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"fsMetadata\",\"outputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"isDir\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isSymlink\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"readOnly\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"modified\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"accessed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"created\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.FsMetadata\",\"name\":\"metadata\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBlobBaseFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"blobBaseFee\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBlobhashes\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"hashes\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBlockNumber\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"height\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBlockTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"artifactPath\",\"type\":\"string\"}],\"name\":\"getCode\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"creationBytecode\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"artifactPath\",\"type\":\"string\"}],\"name\":\"getDeployedCode\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"runtimeBytecode\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getFoundryVersion\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getLabel\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"currentLabel\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"elementSlot\",\"type\":\"bytes32\"}],\"name\":\"getMappingKeyAndParentOf\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"found\",\"type\":\"bool\"},{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"parent\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"mappingSlot\",\"type\":\"bytes32\"}],\"name\":\"getMappingLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"mappingSlot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"idx\",\"type\":\"uint256\"}],\"name\":\"getMappingSlotAt\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getNonce\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyX\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.Wallet\",\"name\":\"wallet\",\"type\":\"tuple\"}],\"name\":\"getNonce\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRecordedLogs\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32[]\",\"name\":\"topics\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"emitter\",\"type\":\"address\"}],\"internalType\":\"struct VmSafe.Log[]\",\"name\":\"logs\",\"type\":\"tuple[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"indexOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum VmSafe.ForgeContext\",\"name\":\"context\",\"type\":\"uint8\"}],\"name\":\"isContext\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"isDir\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"isFile\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isPersistent\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"persistent\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"keyExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"keyExistsJson\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"keyExistsToml\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"newLabel\",\"type\":\"string\"}],\"name\":\"label\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastCallGas\",\"outputs\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"gasLimit\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"gasTotalUsed\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"gasMemoryUsed\",\"type\":\"uint64\"},{\"internalType\":\"int64\",\"name\":\"gasRefunded\",\"type\":\"int64\"},{\"internalType\":\"uint64\",\"name\":\"gasRemaining\",\"type\":\"uint64\"}],\"internalType\":\"struct VmSafe.Gas\",\"name\":\"gas\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"load\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"data\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"pathToAllocsJson\",\"type\":\"string\"}],\"name\":\"loadAllocs\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"}],\"name\":\"makePersistent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"account1\",\"type\":\"address\"}],\"name\":\"makePersistent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"makePersistent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"account1\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"account2\",\"type\":\"address\"}],\"name\":\"makePersistent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"returnData\",\"type\":\"bytes\"}],\"name\":\"mockCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"returnData\",\"type\":\"bytes\"}],\"name\":\"mockCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"revertData\",\"type\":\"bytes\"}],\"name\":\"mockCallRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"revertData\",\"type\":\"bytes\"}],\"name\":\"mockCallRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"name\":\"parseAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"parsedValue\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"name\":\"parseBool\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"parsedValue\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"name\":\"parseBytes\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"parsedValue\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"name\":\"parseBytes32\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"parsedValue\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"name\":\"parseInt\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"parsedValue\",\"type\":\"int256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"name\":\"parseJson\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"abiEncodedData\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJson\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"abiEncodedData\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonAddressArray\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonBool\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonBoolArray\",\"outputs\":[{\"internalType\":\"bool[]\",\"name\":\"\",\"type\":\"bool[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonBytes\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonBytes32\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonBytes32Array\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonBytesArray\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"\",\"type\":\"bytes[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonInt\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonIntArray\",\"outputs\":[{\"internalType\":\"int256[]\",\"name\":\"\",\"type\":\"int256[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonKeys\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"keys\",\"type\":\"string[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonStringArray\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"typeDescription\",\"type\":\"string\"}],\"name\":\"parseJsonType\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"typeDescription\",\"type\":\"string\"}],\"name\":\"parseJsonType\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"typeDescription\",\"type\":\"string\"}],\"name\":\"parseJsonTypeArray\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonUintArray\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseToml\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"abiEncodedData\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"}],\"name\":\"parseToml\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"abiEncodedData\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlAddressArray\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlBool\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlBoolArray\",\"outputs\":[{\"internalType\":\"bool[]\",\"name\":\"\",\"type\":\"bool[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlBytes\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlBytes32\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlBytes32Array\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlBytesArray\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"\",\"type\":\"bytes[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlInt\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlIntArray\",\"outputs\":[{\"internalType\":\"int256[]\",\"name\":\"\",\"type\":\"int256[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlKeys\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"keys\",\"type\":\"string[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlStringArray\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlUintArray\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"name\":\"parseUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"parsedValue\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pauseGasMetering\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"msgSender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"txOrigin\",\"type\":\"address\"}],\"name\":\"prank\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"msgSender\",\"type\":\"address\"}],\"name\":\"prank\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"newPrevrandao\",\"type\":\"bytes32\"}],\"name\":\"prevrandao\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newPrevrandao\",\"type\":\"uint256\"}],\"name\":\"prevrandao\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"projectRoot\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"promptText\",\"type\":\"string\"}],\"name\":\"prompt\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"promptText\",\"type\":\"string\"}],\"name\":\"promptAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"promptText\",\"type\":\"string\"}],\"name\":\"promptSecret\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"promptText\",\"type\":\"string\"}],\"name\":\"promptSecretUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"promptText\",\"type\":\"string\"}],\"name\":\"promptUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"randomAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"randomUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"min\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"max\",\"type\":\"uint256\"}],\"name\":\"randomUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"readCallers\",\"outputs\":[{\"internalType\":\"enum VmSafe.CallerMode\",\"name\":\"callerMode\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"msgSender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"txOrigin\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"maxDepth\",\"type\":\"uint64\"}],\"name\":\"readDir\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"errorMessage\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"depth\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"isDir\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isSymlink\",\"type\":\"bool\"}],\"internalType\":\"struct VmSafe.DirEntry[]\",\"name\":\"entries\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"maxDepth\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"followLinks\",\"type\":\"bool\"}],\"name\":\"readDir\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"errorMessage\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"depth\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"isDir\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isSymlink\",\"type\":\"bool\"}],\"internalType\":\"struct VmSafe.DirEntry[]\",\"name\":\"entries\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"readDir\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"errorMessage\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"depth\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"isDir\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isSymlink\",\"type\":\"bool\"}],\"internalType\":\"struct VmSafe.DirEntry[]\",\"name\":\"entries\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"readFile\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"data\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"readFileBinary\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"readLine\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"line\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"linkPath\",\"type\":\"string\"}],\"name\":\"readLink\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"targetPath\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"record\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"recordLogs\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"name\":\"rememberKey\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"keyAddr\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"recursive\",\"type\":\"bool\"}],\"name\":\"removeDir\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"removeFile\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"from\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"to\",\"type\":\"string\"}],\"name\":\"replace\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"output\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"resetNonce\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"resumeGasMetering\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"snapshotId\",\"type\":\"uint256\"}],\"name\":\"revertTo\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"snapshotId\",\"type\":\"uint256\"}],\"name\":\"revertToAndDelete\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"}],\"name\":\"revokePersistent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokePersistent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newHeight\",\"type\":\"uint256\"}],\"name\":\"roll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"txHash\",\"type\":\"bytes32\"}],\"name\":\"rollFork\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"rollFork\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"rollFork\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"txHash\",\"type\":\"bytes32\"}],\"name\":\"rollFork\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"urlOrAlias\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"method\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"params\",\"type\":\"string\"}],\"name\":\"rpc\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"method\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"params\",\"type\":\"string\"}],\"name\":\"rpc\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"rpcAlias\",\"type\":\"string\"}],\"name\":\"rpcUrl\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rpcUrlStructs\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"url\",\"type\":\"string\"}],\"internalType\":\"struct VmSafe.Rpc[]\",\"name\":\"urls\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rpcUrls\",\"outputs\":[{\"internalType\":\"string[2][]\",\"name\":\"urls\",\"type\":\"string[2][]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"}],\"name\":\"selectFork\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"address[]\",\"name\":\"values\",\"type\":\"address[]\"}],\"name\":\"serializeAddress\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"value\",\"type\":\"address\"}],\"name\":\"serializeAddress\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"bool[]\",\"name\":\"values\",\"type\":\"bool[]\"}],\"name\":\"serializeBool\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"serializeBool\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"bytes[]\",\"name\":\"values\",\"type\":\"bytes[]\"}],\"name\":\"serializeBytes\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"name\":\"serializeBytes\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"bytes32[]\",\"name\":\"values\",\"type\":\"bytes32[]\"}],\"name\":\"serializeBytes32\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"name\":\"serializeBytes32\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"serializeInt\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"int256[]\",\"name\":\"values\",\"type\":\"int256[]\"}],\"name\":\"serializeInt\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"}],\"name\":\"serializeJson\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"typeDescription\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"name\":\"serializeJsonType\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"typeDescription\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"name\":\"serializeJsonType\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"string[]\",\"name\":\"values\",\"type\":\"string[]\"}],\"name\":\"serializeString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"}],\"name\":\"serializeString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"serializeUint\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"serializeUint\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"serializeUintToHex\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"blockHash\",\"type\":\"bytes32\"}],\"name\":\"setBlockhash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"}],\"name\":\"setEnv\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"newNonce\",\"type\":\"uint64\"}],\"name\":\"setNonce\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"newNonce\",\"type\":\"uint64\"}],\"name\":\"setNonceUnsafe\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"name\":\"sign\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"name\":\"sign\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyX\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.Wallet\",\"name\":\"wallet\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"name\":\"sign\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"name\":\"sign\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyX\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.Wallet\",\"name\":\"wallet\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"name\":\"signCompact\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"vs\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"name\":\"signCompact\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"vs\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"name\":\"signCompact\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"vs\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"name\":\"signCompact\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"vs\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"name\":\"signP256\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"skipTest\",\"type\":\"bool\"}],\"name\":\"skip\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"}],\"name\":\"sleep\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"snapshot\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"snapshotId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delimiter\",\"type\":\"string\"}],\"name\":\"split\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"outputs\",\"type\":\"string[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startBroadcast\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"}],\"name\":\"startBroadcast\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"name\":\"startBroadcast\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startMappingRecording\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"msgSender\",\"type\":\"address\"}],\"name\":\"startPrank\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"msgSender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"txOrigin\",\"type\":\"address\"}],\"name\":\"startPrank\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startStateDiffRecording\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stopAndReturnStateDiff\",\"outputs\":[{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.ChainInfo\",\"name\":\"chainInfo\",\"type\":\"tuple\"},{\"internalType\":\"enum VmSafe.AccountAccessKind\",\"name\":\"kind\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"accessor\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"oldBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"newBalance\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"deployedCode\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bool\",\"name\":\"reverted\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"isWrite\",\"type\":\"bool\"},{\"internalType\":\"bytes32\",\"name\":\"previousValue\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"newValue\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"reverted\",\"type\":\"bool\"}],\"internalType\":\"struct VmSafe.StorageAccess[]\",\"name\":\"storageAccesses\",\"type\":\"tuple[]\"},{\"internalType\":\"uint64\",\"name\":\"depth\",\"type\":\"uint64\"}],\"internalType\":\"struct VmSafe.AccountAccess[]\",\"name\":\"accountAccesses\",\"type\":\"tuple[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stopBroadcast\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stopExpectSafeMemory\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stopMappingRecording\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stopPrank\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"name\":\"store\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"data\",\"type\":\"string\"}],\"name\":\"toBase64\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"toBase64\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"data\",\"type\":\"string\"}],\"name\":\"toBase64URL\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"toBase64URL\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"}],\"name\":\"toLowercase\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"output\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"value\",\"type\":\"address\"}],\"name\":\"toString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"toString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"name\":\"toString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"toString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"toString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"name\":\"toString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"}],\"name\":\"toUppercase\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"output\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"txHash\",\"type\":\"bytes32\"}],\"name\":\"transact\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"txHash\",\"type\":\"bytes32\"}],\"name\":\"transact\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"}],\"name\":\"trim\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"output\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"commandInput\",\"type\":\"string[]\"}],\"name\":\"tryFfi\",\"outputs\":[{\"components\":[{\"internalType\":\"int32\",\"name\":\"exitCode\",\"type\":\"int32\"},{\"internalType\":\"bytes\",\"name\":\"stdout\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"stderr\",\"type\":\"bytes\"}],\"internalType\":\"struct VmSafe.FfiResult\",\"name\":\"result\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newGasPrice\",\"type\":\"uint256\"}],\"name\":\"txGasPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unixTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"milliseconds\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newTimestamp\",\"type\":\"uint256\"}],\"name\":\"warp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"data\",\"type\":\"string\"}],\"name\":\"writeFile\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"writeFileBinary\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"}],\"name\":\"writeJson\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"writeJson\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"data\",\"type\":\"string\"}],\"name\":\"writeLine\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"}],\"name\":\"writeToml\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"writeToml\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"accesses(address)\":{\"notice\":\"Gets all accessed reads and write slot from a `vm.record` session, for a given address.\"},\"activeFork()\":{\"notice\":\"Returns the identifier of the currently active fork. Reverts if no fork is currently active.\"},\"addr(uint256)\":{\"notice\":\"Gets the address for a given private key.\"},\"allowCheatcodes(address)\":{\"notice\":\"In forking mode, explicitly grant the given address cheatcode access.\"},\"assertApproxEqAbs(int256,int256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`.\"},\"assertApproxEqAbs(int256,int256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`. Includes error message into revert string on failure.\"},\"assertApproxEqAbs(uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`.\"},\"assertApproxEqAbs(uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`. Includes error message into revert string on failure.\"},\"assertApproxEqAbsDecimal(int256,int256,uint256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message.\"},\"assertApproxEqAbsDecimal(int256,int256,uint256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message.\"},\"assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertApproxEqRel(int256,int256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%\"},\"assertApproxEqRel(int256,int256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Includes error message into revert string on failure.\"},\"assertApproxEqRel(uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%\"},\"assertApproxEqRel(uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Includes error message into revert string on failure.\"},\"assertApproxEqRelDecimal(int256,int256,uint256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message.\"},\"assertApproxEqRelDecimal(int256,int256,uint256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertApproxEqRelDecimal(uint256,uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message.\"},\"assertApproxEqRelDecimal(uint256,uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertEq(address,address)\":{\"notice\":\"Asserts that two `address` values are equal.\"},\"assertEq(address,address,string)\":{\"notice\":\"Asserts that two `address` values are equal and includes error message into revert string on failure.\"},\"assertEq(address[],address[])\":{\"notice\":\"Asserts that two arrays of `address` values are equal.\"},\"assertEq(address[],address[],string)\":{\"notice\":\"Asserts that two arrays of `address` values are equal and includes error message into revert string on failure.\"},\"assertEq(bool,bool)\":{\"notice\":\"Asserts that two `bool` values are equal.\"},\"assertEq(bool,bool,string)\":{\"notice\":\"Asserts that two `bool` values are equal and includes error message into revert string on failure.\"},\"assertEq(bool[],bool[])\":{\"notice\":\"Asserts that two arrays of `bool` values are equal.\"},\"assertEq(bool[],bool[],string)\":{\"notice\":\"Asserts that two arrays of `bool` values are equal and includes error message into revert string on failure.\"},\"assertEq(bytes,bytes)\":{\"notice\":\"Asserts that two `bytes` values are equal.\"},\"assertEq(bytes,bytes,string)\":{\"notice\":\"Asserts that two `bytes` values are equal and includes error message into revert string on failure.\"},\"assertEq(bytes32,bytes32)\":{\"notice\":\"Asserts that two `bytes32` values are equal.\"},\"assertEq(bytes32,bytes32,string)\":{\"notice\":\"Asserts that two `bytes32` values are equal and includes error message into revert string on failure.\"},\"assertEq(bytes32[],bytes32[])\":{\"notice\":\"Asserts that two arrays of `bytes32` values are equal.\"},\"assertEq(bytes32[],bytes32[],string)\":{\"notice\":\"Asserts that two arrays of `bytes32` values are equal and includes error message into revert string on failure.\"},\"assertEq(bytes[],bytes[])\":{\"notice\":\"Asserts that two arrays of `bytes` values are equal.\"},\"assertEq(bytes[],bytes[],string)\":{\"notice\":\"Asserts that two arrays of `bytes` values are equal and includes error message into revert string on failure.\"},\"assertEq(int256,int256)\":{\"notice\":\"Asserts that two `int256` values are equal.\"},\"assertEq(int256,int256,string)\":{\"notice\":\"Asserts that two `int256` values are equal and includes error message into revert string on failure.\"},\"assertEq(int256[],int256[])\":{\"notice\":\"Asserts that two arrays of `int256` values are equal.\"},\"assertEq(int256[],int256[],string)\":{\"notice\":\"Asserts that two arrays of `int256` values are equal and includes error message into revert string on failure.\"},\"assertEq(string,string)\":{\"notice\":\"Asserts that two `string` values are equal.\"},\"assertEq(string,string,string)\":{\"notice\":\"Asserts that two `string` values are equal and includes error message into revert string on failure.\"},\"assertEq(string[],string[])\":{\"notice\":\"Asserts that two arrays of `string` values are equal.\"},\"assertEq(string[],string[],string)\":{\"notice\":\"Asserts that two arrays of `string` values are equal and includes error message into revert string on failure.\"},\"assertEq(uint256,uint256)\":{\"notice\":\"Asserts that two `uint256` values are equal.\"},\"assertEq(uint256,uint256,string)\":{\"notice\":\"Asserts that two `uint256` values are equal and includes error message into revert string on failure.\"},\"assertEq(uint256[],uint256[])\":{\"notice\":\"Asserts that two arrays of `uint256 values are equal.\"},\"assertEq(uint256[],uint256[],string)\":{\"notice\":\"Asserts that two arrays of `uint256` values are equal and includes error message into revert string on failure.\"},\"assertEqDecimal(int256,int256,uint256)\":{\"notice\":\"Asserts that two `int256` values are equal, formatting them with decimals in failure message.\"},\"assertEqDecimal(int256,int256,uint256,string)\":{\"notice\":\"Asserts that two `int256` values are equal, formatting them with decimals in failure message. Includes error message into revert string on failure.\"},\"assertEqDecimal(uint256,uint256,uint256)\":{\"notice\":\"Asserts that two `uint256` values are equal, formatting them with decimals in failure message.\"},\"assertEqDecimal(uint256,uint256,uint256,string)\":{\"notice\":\"Asserts that two `uint256` values are equal, formatting them with decimals in failure message. Includes error message into revert string on failure.\"},\"assertFalse(bool)\":{\"notice\":\"Asserts that the given condition is false.\"},\"assertFalse(bool,string)\":{\"notice\":\"Asserts that the given condition is false and includes error message into revert string on failure.\"},\"assertGe(int256,int256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than or equal to second.\"},\"assertGe(int256,int256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than or equal to second. Includes error message into revert string on failure.\"},\"assertGe(uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than or equal to second.\"},\"assertGe(uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than or equal to second. Includes error message into revert string on failure.\"},\"assertGeDecimal(int256,int256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message.\"},\"assertGeDecimal(int256,int256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertGeDecimal(uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message.\"},\"assertGeDecimal(uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertGt(int256,int256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than second.\"},\"assertGt(int256,int256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than second. Includes error message into revert string on failure.\"},\"assertGt(uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than second.\"},\"assertGt(uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than second. Includes error message into revert string on failure.\"},\"assertGtDecimal(int256,int256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than second. Formats values with decimals in failure message.\"},\"assertGtDecimal(int256,int256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertGtDecimal(uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than second. Formats values with decimals in failure message.\"},\"assertGtDecimal(uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertLe(int256,int256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than or equal to second.\"},\"assertLe(int256,int256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than or equal to second. Includes error message into revert string on failure.\"},\"assertLe(uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than or equal to second.\"},\"assertLe(uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than or equal to second. Includes error message into revert string on failure.\"},\"assertLeDecimal(int256,int256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message.\"},\"assertLeDecimal(int256,int256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertLeDecimal(uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message.\"},\"assertLeDecimal(uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertLt(int256,int256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than second.\"},\"assertLt(int256,int256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than second. Includes error message into revert string on failure.\"},\"assertLt(uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than second.\"},\"assertLt(uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than second. Includes error message into revert string on failure.\"},\"assertLtDecimal(int256,int256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than second. Formats values with decimals in failure message.\"},\"assertLtDecimal(int256,int256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertLtDecimal(uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than second. Formats values with decimals in failure message.\"},\"assertLtDecimal(uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertNotEq(address,address)\":{\"notice\":\"Asserts that two `address` values are not equal.\"},\"assertNotEq(address,address,string)\":{\"notice\":\"Asserts that two `address` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(address[],address[])\":{\"notice\":\"Asserts that two arrays of `address` values are not equal.\"},\"assertNotEq(address[],address[],string)\":{\"notice\":\"Asserts that two arrays of `address` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(bool,bool)\":{\"notice\":\"Asserts that two `bool` values are not equal.\"},\"assertNotEq(bool,bool,string)\":{\"notice\":\"Asserts that two `bool` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(bool[],bool[])\":{\"notice\":\"Asserts that two arrays of `bool` values are not equal.\"},\"assertNotEq(bool[],bool[],string)\":{\"notice\":\"Asserts that two arrays of `bool` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(bytes,bytes)\":{\"notice\":\"Asserts that two `bytes` values are not equal.\"},\"assertNotEq(bytes,bytes,string)\":{\"notice\":\"Asserts that two `bytes` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(bytes32,bytes32)\":{\"notice\":\"Asserts that two `bytes32` values are not equal.\"},\"assertNotEq(bytes32,bytes32,string)\":{\"notice\":\"Asserts that two `bytes32` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(bytes32[],bytes32[])\":{\"notice\":\"Asserts that two arrays of `bytes32` values are not equal.\"},\"assertNotEq(bytes32[],bytes32[],string)\":{\"notice\":\"Asserts that two arrays of `bytes32` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(bytes[],bytes[])\":{\"notice\":\"Asserts that two arrays of `bytes` values are not equal.\"},\"assertNotEq(bytes[],bytes[],string)\":{\"notice\":\"Asserts that two arrays of `bytes` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(int256,int256)\":{\"notice\":\"Asserts that two `int256` values are not equal.\"},\"assertNotEq(int256,int256,string)\":{\"notice\":\"Asserts that two `int256` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(int256[],int256[])\":{\"notice\":\"Asserts that two arrays of `int256` values are not equal.\"},\"assertNotEq(int256[],int256[],string)\":{\"notice\":\"Asserts that two arrays of `int256` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(string,string)\":{\"notice\":\"Asserts that two `string` values are not equal.\"},\"assertNotEq(string,string,string)\":{\"notice\":\"Asserts that two `string` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(string[],string[])\":{\"notice\":\"Asserts that two arrays of `string` values are not equal.\"},\"assertNotEq(string[],string[],string)\":{\"notice\":\"Asserts that two arrays of `string` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(uint256,uint256)\":{\"notice\":\"Asserts that two `uint256` values are not equal.\"},\"assertNotEq(uint256,uint256,string)\":{\"notice\":\"Asserts that two `uint256` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(uint256[],uint256[])\":{\"notice\":\"Asserts that two arrays of `uint256` values are not equal.\"},\"assertNotEq(uint256[],uint256[],string)\":{\"notice\":\"Asserts that two arrays of `uint256` values are not equal and includes error message into revert string on failure.\"},\"assertNotEqDecimal(int256,int256,uint256)\":{\"notice\":\"Asserts that two `int256` values are not equal, formatting them with decimals in failure message.\"},\"assertNotEqDecimal(int256,int256,uint256,string)\":{\"notice\":\"Asserts that two `int256` values are not equal, formatting them with decimals in failure message. Includes error message into revert string on failure.\"},\"assertNotEqDecimal(uint256,uint256,uint256)\":{\"notice\":\"Asserts that two `uint256` values are not equal, formatting them with decimals in failure message.\"},\"assertNotEqDecimal(uint256,uint256,uint256,string)\":{\"notice\":\"Asserts that two `uint256` values are not equal, formatting them with decimals in failure message. Includes error message into revert string on failure.\"},\"assertTrue(bool)\":{\"notice\":\"Asserts that the given condition is true.\"},\"assertTrue(bool,string)\":{\"notice\":\"Asserts that the given condition is true and includes error message into revert string on failure.\"},\"assume(bool)\":{\"notice\":\"If the condition is false, discard this run's fuzz inputs and generate new ones.\"},\"blobBaseFee(uint256)\":{\"notice\":\"Sets `block.blobbasefee`\"},\"blobhashes(bytes32[])\":{\"notice\":\"Sets the blobhashes in the transaction. Not available on EVM versions before Cancun. If used on unsupported EVM versions it will revert.\"},\"breakpoint(string)\":{\"notice\":\"Writes a breakpoint to jump to in the debugger.\"},\"breakpoint(string,bool)\":{\"notice\":\"Writes a conditional breakpoint to jump to in the debugger.\"},\"broadcast()\":{\"notice\":\"Has the next call (at this call depth only) create transactions that can later be signed and sent onchain. Broadcasting address is determined by checking the following in order: 1. If `--sender` argument was provided, that address is used. 2. If exactly one signer (e.g. private key, hw wallet, keystore) is set when `forge broadcast` is invoked, that signer is used. 3. Otherwise, default foundry sender (1804c8AB1F12E6bbf3894d4083f33e07309d1f38) is used.\"},\"broadcast(address)\":{\"notice\":\"Has the next call (at this call depth only) create a transaction with the address provided as the sender that can later be signed and sent onchain.\"},\"broadcast(uint256)\":{\"notice\":\"Has the next call (at this call depth only) create a transaction with the private key provided as the sender that can later be signed and sent onchain.\"},\"broadcastRawTransaction(bytes)\":{\"notice\":\"Takes a signed transaction and broadcasts it to the network.\"},\"chainId(uint256)\":{\"notice\":\"Sets `block.chainid`.\"},\"clearMockedCalls()\":{\"notice\":\"Clears all mocked calls.\"},\"closeFile(string)\":{\"notice\":\"Closes file for reading, resetting the offset and allowing to read it from beginning with readLine. `path` is relative to the project root.\"},\"coinbase(address)\":{\"notice\":\"Sets `block.coinbase`.\"},\"computeCreate2Address(bytes32,bytes32)\":{\"notice\":\"Compute the address of a contract created with CREATE2 using the default CREATE2 deployer.\"},\"computeCreate2Address(bytes32,bytes32,address)\":{\"notice\":\"Compute the address of a contract created with CREATE2 using the given CREATE2 deployer.\"},\"computeCreateAddress(address,uint256)\":{\"notice\":\"Compute the address a contract will be deployed at for a given deployer address and nonce.\"},\"copyFile(string,string)\":{\"notice\":\"Copies the contents of one file to another. This function will **overwrite** the contents of `to`. On success, the total number of bytes copied is returned and it is equal to the length of the `to` file as reported by `metadata`. Both `from` and `to` are relative to the project root.\"},\"createDir(string,bool)\":{\"notice\":\"Creates a new, empty directory at the provided path. This cheatcode will revert in the following situations, but is not limited to just these cases: - User lacks permissions to modify `path`. - A parent of the given path doesn't exist and `recursive` is false. - `path` already exists and `recursive` is false. `path` is relative to the project root.\"},\"createFork(string)\":{\"notice\":\"Creates a new fork with the given endpoint and the _latest_ block and returns the identifier of the fork.\"},\"createFork(string,bytes32)\":{\"notice\":\"Creates a new fork with the given endpoint and at the block the given transaction was mined in, replays all transaction mined in the block before the transaction, and returns the identifier of the fork.\"},\"createFork(string,uint256)\":{\"notice\":\"Creates a new fork with the given endpoint and block and returns the identifier of the fork.\"},\"createSelectFork(string)\":{\"notice\":\"Creates and also selects a new fork with the given endpoint and the latest block and returns the identifier of the fork.\"},\"createSelectFork(string,bytes32)\":{\"notice\":\"Creates and also selects new fork with the given endpoint and at the block the given transaction was mined in, replays all transaction mined in the block before the transaction, returns the identifier of the fork.\"},\"createSelectFork(string,uint256)\":{\"notice\":\"Creates and also selects a new fork with the given endpoint and block and returns the identifier of the fork.\"},\"createWallet(string)\":{\"notice\":\"Derives a private key from the name, labels the account with that name, and returns the wallet.\"},\"createWallet(uint256)\":{\"notice\":\"Generates a wallet from the private key and returns the wallet.\"},\"createWallet(uint256,string)\":{\"notice\":\"Generates a wallet from the private key, labels the account with that name, and returns the wallet.\"},\"deal(address,uint256)\":{\"notice\":\"Sets an address' balance.\"},\"deleteSnapshot(uint256)\":{\"notice\":\"Removes the snapshot with the given ID created by `snapshot`. Takes the snapshot ID to delete. Returns `true` if the snapshot was successfully deleted. Returns `false` if the snapshot does not exist.\"},\"deleteSnapshots()\":{\"notice\":\"Removes _all_ snapshots previously created by `snapshot`.\"},\"deployCode(string)\":{\"notice\":\"Deploys a contract from an artifact file. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional.\"},\"deployCode(string,bytes)\":{\"notice\":\"Deploys a contract from an artifact file. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional. Additionaly accepts abi-encoded constructor arguments.\"},\"deriveKey(string,string,uint32)\":{\"notice\":\"Derive a private key from a provided mnenomic string (or mnenomic file path) at `{derivationPath}{index}`.\"},\"deriveKey(string,string,uint32,string)\":{\"notice\":\"Derive a private key from a provided mnenomic string (or mnenomic file path) in the specified language at `{derivationPath}{index}`.\"},\"deriveKey(string,uint32)\":{\"notice\":\"Derive a private key from a provided mnenomic string (or mnenomic file path) at the derivation path `m/44'/60'/0'/0/{index}`.\"},\"deriveKey(string,uint32,string)\":{\"notice\":\"Derive a private key from a provided mnenomic string (or mnenomic file path) in the specified language at the derivation path `m/44'/60'/0'/0/{index}`.\"},\"difficulty(uint256)\":{\"notice\":\"Sets `block.difficulty`. Not available on EVM versions from Paris onwards. Use `prevrandao` instead. Reverts if used on unsupported EVM versions.\"},\"dumpState(string)\":{\"notice\":\"Dump a genesis JSON file's `allocs` to disk.\"},\"ensNamehash(string)\":{\"notice\":\"Returns ENS namehash for provided string.\"},\"envAddress(string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `address`. Reverts if the variable was not found or could not be parsed.\"},\"envAddress(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `address`, delimited by `delim`. Reverts if the variable was not found or could not be parsed.\"},\"envBool(string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `bool`. Reverts if the variable was not found or could not be parsed.\"},\"envBool(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `bool`, delimited by `delim`. Reverts if the variable was not found or could not be parsed.\"},\"envBytes(string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `bytes`. Reverts if the variable was not found or could not be parsed.\"},\"envBytes(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `bytes`, delimited by `delim`. Reverts if the variable was not found or could not be parsed.\"},\"envBytes32(string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `bytes32`. Reverts if the variable was not found or could not be parsed.\"},\"envBytes32(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `bytes32`, delimited by `delim`. Reverts if the variable was not found or could not be parsed.\"},\"envExists(string)\":{\"notice\":\"Gets the environment variable `name` and returns true if it exists, else returns false.\"},\"envInt(string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `int256`. Reverts if the variable was not found or could not be parsed.\"},\"envInt(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `int256`, delimited by `delim`. Reverts if the variable was not found or could not be parsed.\"},\"envOr(string,address)\":{\"notice\":\"Gets the environment variable `name` and parses it as `address`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,bool)\":{\"notice\":\"Gets the environment variable `name` and parses it as `bool`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,bytes)\":{\"notice\":\"Gets the environment variable `name` and parses it as `bytes`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,bytes32)\":{\"notice\":\"Gets the environment variable `name` and parses it as `bytes32`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,int256)\":{\"notice\":\"Gets the environment variable `name` and parses it as `int256`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `string`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string,address[])\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `address`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string,bool[])\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `bool`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string,bytes32[])\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `bytes32`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string,bytes[])\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `bytes`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string,int256[])\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `int256`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string,string[])\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `string`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string,uint256[])\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `uint256`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,uint256)\":{\"notice\":\"Gets the environment variable `name` and parses it as `uint256`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envString(string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `string`. Reverts if the variable was not found or could not be parsed.\"},\"envString(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `string`, delimited by `delim`. Reverts if the variable was not found or could not be parsed.\"},\"envUint(string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `uint256`. Reverts if the variable was not found or could not be parsed.\"},\"envUint(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `uint256`, delimited by `delim`. Reverts if the variable was not found or could not be parsed.\"},\"etch(address,bytes)\":{\"notice\":\"Sets an address' code.\"},\"eth_getLogs(uint256,uint256,address,bytes32[])\":{\"notice\":\"Gets all the logs according to specified filter.\"},\"exists(string)\":{\"notice\":\"Returns true if the given path points to an existing entity, else returns false.\"},\"expectCall(address,bytes)\":{\"notice\":\"Expects a call to an address with the specified calldata. Calldata can either be a strict or a partial match.\"},\"expectCall(address,bytes,uint64)\":{\"notice\":\"Expects given number of calls to an address with the specified calldata.\"},\"expectCall(address,uint256,bytes)\":{\"notice\":\"Expects a call to an address with the specified `msg.value` and calldata.\"},\"expectCall(address,uint256,bytes,uint64)\":{\"notice\":\"Expects given number of calls to an address with the specified `msg.value` and calldata.\"},\"expectCall(address,uint256,uint64,bytes)\":{\"notice\":\"Expect a call to an address with the specified `msg.value`, gas, and calldata.\"},\"expectCall(address,uint256,uint64,bytes,uint64)\":{\"notice\":\"Expects given number of calls to an address with the specified `msg.value`, gas, and calldata.\"},\"expectCallMinGas(address,uint256,uint64,bytes)\":{\"notice\":\"Expect a call to an address with the specified `msg.value` and calldata, and a *minimum* amount of gas.\"},\"expectCallMinGas(address,uint256,uint64,bytes,uint64)\":{\"notice\":\"Expect given number of calls to an address with the specified `msg.value` and calldata, and a *minimum* amount of gas.\"},\"expectEmit()\":{\"notice\":\"Prepare an expected log with all topic and data checks enabled. Call this function, then emit an event, then call a function. Internally after the call, we check if logs were emitted in the expected order with the expected topics and data.\"},\"expectEmit(address)\":{\"notice\":\"Same as the previous method, but also checks supplied address against emitting contract.\"},\"expectEmit(bool,bool,bool,bool)\":{\"notice\":\"Prepare an expected log with (bool checkTopic1, bool checkTopic2, bool checkTopic3, bool checkData.). Call this function, then emit an event, then call a function. Internally after the call, we check if logs were emitted in the expected order with the expected topics and data (as specified by the booleans).\"},\"expectEmit(bool,bool,bool,bool,address)\":{\"notice\":\"Same as the previous method, but also checks supplied address against emitting contract.\"},\"expectEmitAnonymous()\":{\"notice\":\"Prepare an expected anonymous log with all topic and data checks enabled. Call this function, then emit an anonymous event, then call a function. Internally after the call, we check if logs were emitted in the expected order with the expected topics and data.\"},\"expectEmitAnonymous(address)\":{\"notice\":\"Same as the previous method, but also checks supplied address against emitting contract.\"},\"expectEmitAnonymous(bool,bool,bool,bool,bool)\":{\"notice\":\"Prepare an expected anonymous log with (bool checkTopic1, bool checkTopic2, bool checkTopic3, bool checkData.). Call this function, then emit an anonymous event, then call a function. Internally after the call, we check if logs were emitted in the expected order with the expected topics and data (as specified by the booleans).\"},\"expectEmitAnonymous(bool,bool,bool,bool,bool,address)\":{\"notice\":\"Same as the previous method, but also checks supplied address against emitting contract.\"},\"expectRevert()\":{\"notice\":\"Expects an error on next call with any revert data.\"},\"expectRevert(bytes)\":{\"notice\":\"Expects an error on next call that exactly matches the revert data.\"},\"expectRevert(bytes4)\":{\"notice\":\"Expects an error on next call that starts with the revert data.\"},\"expectSafeMemory(uint64,uint64)\":{\"notice\":\"Only allows memory writes to offsets [0x00, 0x60) \\u222a [min, max) in the current subcontext. If any other memory is written to, the test will fail. Can be called multiple times to add more ranges to the set.\"},\"expectSafeMemoryCall(uint64,uint64)\":{\"notice\":\"Only allows memory writes to offsets [0x00, 0x60) \\u222a [min, max) in the next created subcontext. If any other memory is written to, the test will fail. Can be called multiple times to add more ranges to the set.\"},\"fee(uint256)\":{\"notice\":\"Sets `block.basefee`.\"},\"ffi(string[])\":{\"notice\":\"Performs a foreign function call via the terminal.\"},\"fsMetadata(string)\":{\"notice\":\"Given a path, query the file system to get information about a file, directory, etc.\"},\"getBlobBaseFee()\":{\"notice\":\"Gets the current `block.blobbasefee`. You should use this instead of `block.blobbasefee` if you use `vm.blobBaseFee`, as `block.blobbasefee` is assumed to be constant across a transaction, and as a result will get optimized out by the compiler. See https://github.com/foundry-rs/foundry/issues/6180\"},\"getBlobhashes()\":{\"notice\":\"Gets the blockhashes from the current transaction. Not available on EVM versions before Cancun. If used on unsupported EVM versions it will revert.\"},\"getBlockNumber()\":{\"notice\":\"Gets the current `block.number`. You should use this instead of `block.number` if you use `vm.roll`, as `block.number` is assumed to be constant across a transaction, and as a result will get optimized out by the compiler. See https://github.com/foundry-rs/foundry/issues/6180\"},\"getBlockTimestamp()\":{\"notice\":\"Gets the current `block.timestamp`. You should use this instead of `block.timestamp` if you use `vm.warp`, as `block.timestamp` is assumed to be constant across a transaction, and as a result will get optimized out by the compiler. See https://github.com/foundry-rs/foundry/issues/6180\"},\"getCode(string)\":{\"notice\":\"Gets the creation bytecode from an artifact file. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional.\"},\"getDeployedCode(string)\":{\"notice\":\"Gets the deployed bytecode from an artifact file. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional.\"},\"getFoundryVersion()\":{\"notice\":\"Returns the Foundry version. Format: <cargo_version>+<git_sha>+<build_timestamp> Sample output: 0.2.0+faa94c384+202407110019 Note: Build timestamps may vary slightly across platforms due to separate CI jobs. For reliable version comparisons, use YYYYMMDD0000 format (e.g., >= 202407110000) to compare timestamps while ignoring minor time differences.\"},\"getLabel(address)\":{\"notice\":\"Gets the label for the specified address.\"},\"getMappingKeyAndParentOf(address,bytes32)\":{\"notice\":\"Gets the map key and parent of a mapping at a given slot, for a given address.\"},\"getMappingLength(address,bytes32)\":{\"notice\":\"Gets the number of elements in the mapping at the given slot, for a given address.\"},\"getMappingSlotAt(address,bytes32,uint256)\":{\"notice\":\"Gets the elements at index idx of the mapping at the given slot, for a given address. The index must be less than the length of the mapping (i.e. the number of keys in the mapping).\"},\"getNonce((address,uint256,uint256,uint256))\":{\"notice\":\"Get the nonce of a `Wallet`.\"},\"getNonce(address)\":{\"notice\":\"Gets the nonce of an account.\"},\"getRecordedLogs()\":{\"notice\":\"Gets all the recorded logs.\"},\"indexOf(string,string)\":{\"notice\":\"Returns the index of the first occurrence of a `key` in an `input` string. Returns `NOT_FOUND` (i.e. `type(uint256).max`) if the `key` is not found. Returns 0 in case of an empty `key`.\"},\"isContext(uint8)\":{\"notice\":\"Returns true if `forge` command was executed in given context.\"},\"isDir(string)\":{\"notice\":\"Returns true if the path exists on disk and is pointing at a directory, else returns false.\"},\"isFile(string)\":{\"notice\":\"Returns true if the path exists on disk and is pointing at a regular file, else returns false.\"},\"isPersistent(address)\":{\"notice\":\"Returns true if the account is marked as persistent.\"},\"keyExists(string,string)\":{\"notice\":\"Checks if `key` exists in a JSON object `keyExists` is being deprecated in favor of `keyExistsJson`. It will be removed in future versions.\"},\"keyExistsJson(string,string)\":{\"notice\":\"Checks if `key` exists in a JSON object.\"},\"keyExistsToml(string,string)\":{\"notice\":\"Checks if `key` exists in a TOML table.\"},\"label(address,string)\":{\"notice\":\"Labels an address in call traces.\"},\"lastCallGas()\":{\"notice\":\"Gets the gas used in the last call.\"},\"load(address,bytes32)\":{\"notice\":\"Loads a storage slot from an address.\"},\"loadAllocs(string)\":{\"notice\":\"Load a genesis JSON file's `allocs` into the in-memory revm state.\"},\"makePersistent(address)\":{\"notice\":\"Marks that the account(s) should use persistent storage across fork swaps in a multifork setup Meaning, changes made to the state of this account will be kept when switching forks.\"},\"makePersistent(address,address)\":{\"notice\":\"See `makePersistent(address)`.\"},\"makePersistent(address,address,address)\":{\"notice\":\"See `makePersistent(address)`.\"},\"makePersistent(address[])\":{\"notice\":\"See `makePersistent(address)`.\"},\"mockCall(address,bytes,bytes)\":{\"notice\":\"Mocks a call to an address, returning specified data. Calldata can either be strict or a partial match, e.g. if you only pass a Solidity selector to the expected calldata, then the entire Solidity function will be mocked.\"},\"mockCall(address,uint256,bytes,bytes)\":{\"notice\":\"Mocks a call to an address with a specific `msg.value`, returning specified data. Calldata match takes precedence over `msg.value` in case of ambiguity.\"},\"mockCallRevert(address,bytes,bytes)\":{\"notice\":\"Reverts a call to an address with specified revert data.\"},\"mockCallRevert(address,uint256,bytes,bytes)\":{\"notice\":\"Reverts a call to an address with a specific `msg.value`, with specified revert data.\"},\"parseAddress(string)\":{\"notice\":\"Parses the given `string` into an `address`.\"},\"parseBool(string)\":{\"notice\":\"Parses the given `string` into a `bool`.\"},\"parseBytes(string)\":{\"notice\":\"Parses the given `string` into `bytes`.\"},\"parseBytes32(string)\":{\"notice\":\"Parses the given `string` into a `bytes32`.\"},\"parseInt(string)\":{\"notice\":\"Parses the given `string` into a `int256`.\"},\"parseJson(string)\":{\"notice\":\"ABI-encodes a JSON object.\"},\"parseJson(string,string)\":{\"notice\":\"ABI-encodes a JSON object at `key`.\"},\"parseJsonAddress(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `address`.\"},\"parseJsonAddressArray(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `address[]`.\"},\"parseJsonBool(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `bool`.\"},\"parseJsonBoolArray(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `bool[]`.\"},\"parseJsonBytes(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `bytes`.\"},\"parseJsonBytes32(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `bytes32`.\"},\"parseJsonBytes32Array(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `bytes32[]`.\"},\"parseJsonBytesArray(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `bytes[]`.\"},\"parseJsonInt(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `int256`.\"},\"parseJsonIntArray(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `int256[]`.\"},\"parseJsonKeys(string,string)\":{\"notice\":\"Returns an array of all the keys in a JSON object.\"},\"parseJsonString(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `string`.\"},\"parseJsonStringArray(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `string[]`.\"},\"parseJsonType(string,string)\":{\"notice\":\"Parses a string of JSON data and coerces it to type corresponding to `typeDescription`.\"},\"parseJsonType(string,string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to type corresponding to `typeDescription`.\"},\"parseJsonTypeArray(string,string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to type array corresponding to `typeDescription`.\"},\"parseJsonUint(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `uint256`.\"},\"parseJsonUintArray(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `uint256[]`.\"},\"parseToml(string)\":{\"notice\":\"ABI-encodes a TOML table.\"},\"parseToml(string,string)\":{\"notice\":\"ABI-encodes a TOML table at `key`.\"},\"parseTomlAddress(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `address`.\"},\"parseTomlAddressArray(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `address[]`.\"},\"parseTomlBool(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `bool`.\"},\"parseTomlBoolArray(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `bool[]`.\"},\"parseTomlBytes(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `bytes`.\"},\"parseTomlBytes32(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `bytes32`.\"},\"parseTomlBytes32Array(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `bytes32[]`.\"},\"parseTomlBytesArray(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `bytes[]`.\"},\"parseTomlInt(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `int256`.\"},\"parseTomlIntArray(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `int256[]`.\"},\"parseTomlKeys(string,string)\":{\"notice\":\"Returns an array of all the keys in a TOML table.\"},\"parseTomlString(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `string`.\"},\"parseTomlStringArray(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `string[]`.\"},\"parseTomlUint(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `uint256`.\"},\"parseTomlUintArray(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `uint256[]`.\"},\"parseUint(string)\":{\"notice\":\"Parses the given `string` into a `uint256`.\"},\"pauseGasMetering()\":{\"notice\":\"Pauses gas metering (i.e. gas usage is not counted). Noop if already paused.\"},\"prank(address)\":{\"notice\":\"Sets the *next* call's `msg.sender` to be the input address.\"},\"prank(address,address)\":{\"notice\":\"Sets the *next* call's `msg.sender` to be the input address, and the `tx.origin` to be the second input.\"},\"prevrandao(bytes32)\":{\"notice\":\"Sets `block.prevrandao`. Not available on EVM versions before Paris. Use `difficulty` instead. If used on unsupported EVM versions it will revert.\"},\"prevrandao(uint256)\":{\"notice\":\"Sets `block.prevrandao`. Not available on EVM versions before Paris. Use `difficulty` instead. If used on unsupported EVM versions it will revert.\"},\"projectRoot()\":{\"notice\":\"Get the path of the current project root.\"},\"prompt(string)\":{\"notice\":\"Prompts the user for a string value in the terminal.\"},\"promptAddress(string)\":{\"notice\":\"Prompts the user for an address in the terminal.\"},\"promptSecret(string)\":{\"notice\":\"Prompts the user for a hidden string value in the terminal.\"},\"promptSecretUint(string)\":{\"notice\":\"Prompts the user for hidden uint256 in the terminal (usually pk).\"},\"promptUint(string)\":{\"notice\":\"Prompts the user for uint256 in the terminal.\"},\"randomAddress()\":{\"notice\":\"Returns a random `address`.\"},\"randomUint()\":{\"notice\":\"Returns a random uint256 value.\"},\"randomUint(uint256,uint256)\":{\"notice\":\"Returns random uin256 value between the provided range (=min..=max).\"},\"readCallers()\":{\"notice\":\"Reads the current `msg.sender` and `tx.origin` from state and reports if there is any active caller modification.\"},\"readDir(string)\":{\"notice\":\"Reads the directory at the given path recursively, up to `maxDepth`. `maxDepth` defaults to 1, meaning only the direct children of the given directory will be returned. Follows symbolic links if `followLinks` is true.\"},\"readDir(string,uint64)\":{\"notice\":\"See `readDir(string)`.\"},\"readDir(string,uint64,bool)\":{\"notice\":\"See `readDir(string)`.\"},\"readFile(string)\":{\"notice\":\"Reads the entire content of file to string. `path` is relative to the project root.\"},\"readFileBinary(string)\":{\"notice\":\"Reads the entire content of file as binary. `path` is relative to the project root.\"},\"readLine(string)\":{\"notice\":\"Reads next line of file to string.\"},\"readLink(string)\":{\"notice\":\"Reads a symbolic link, returning the path that the link points to. This cheatcode will revert in the following situations, but is not limited to just these cases: - `path` is not a symbolic link. - `path` does not exist.\"},\"record()\":{\"notice\":\"Records all storage reads and writes.\"},\"recordLogs()\":{\"notice\":\"Record all the transaction logs.\"},\"rememberKey(uint256)\":{\"notice\":\"Adds a private key to the local forge wallet and returns the address.\"},\"removeDir(string,bool)\":{\"notice\":\"Removes a directory at the provided path. This cheatcode will revert in the following situations, but is not limited to just these cases: - `path` doesn't exist. - `path` isn't a directory. - User lacks permissions to modify `path`. - The directory is not empty and `recursive` is false. `path` is relative to the project root.\"},\"removeFile(string)\":{\"notice\":\"Removes a file from the filesystem. This cheatcode will revert in the following situations, but is not limited to just these cases: - `path` points to a directory. - The file doesn't exist. - The user lacks permissions to remove the file. `path` is relative to the project root.\"},\"replace(string,string,string)\":{\"notice\":\"Replaces occurrences of `from` in the given `string` with `to`.\"},\"resetNonce(address)\":{\"notice\":\"Resets the nonce of an account to 0 for EOAs and 1 for contract accounts.\"},\"resumeGasMetering()\":{\"notice\":\"Resumes gas metering (i.e. gas usage is counted again). Noop if already on.\"},\"revertTo(uint256)\":{\"notice\":\"Revert the state of the EVM to a previous snapshot Takes the snapshot ID to revert to. Returns `true` if the snapshot was successfully reverted. Returns `false` if the snapshot does not exist. **Note:** This does not automatically delete the snapshot. To delete the snapshot use `deleteSnapshot`.\"},\"revertToAndDelete(uint256)\":{\"notice\":\"Revert the state of the EVM to a previous snapshot and automatically deletes the snapshots Takes the snapshot ID to revert to. Returns `true` if the snapshot was successfully reverted and deleted. Returns `false` if the snapshot does not exist.\"},\"revokePersistent(address)\":{\"notice\":\"Revokes persistent status from the address, previously added via `makePersistent`.\"},\"revokePersistent(address[])\":{\"notice\":\"See `revokePersistent(address)`.\"},\"roll(uint256)\":{\"notice\":\"Sets `block.height`.\"},\"rollFork(bytes32)\":{\"notice\":\"Updates the currently active fork to given transaction. This will `rollFork` with the number of the block the transaction was mined in and replays all transaction mined before it in the block.\"},\"rollFork(uint256)\":{\"notice\":\"Updates the currently active fork to given block number This is similar to `roll` but for the currently active fork.\"},\"rollFork(uint256,bytes32)\":{\"notice\":\"Updates the given fork to block number of the given transaction and replays all transaction mined before it in the block.\"},\"rollFork(uint256,uint256)\":{\"notice\":\"Updates the given fork to given block number.\"},\"rpc(string,string)\":{\"notice\":\"Performs an Ethereum JSON-RPC request to the current fork URL.\"},\"rpc(string,string,string)\":{\"notice\":\"Performs an Ethereum JSON-RPC request to the given endpoint.\"},\"rpcUrl(string)\":{\"notice\":\"Returns the RPC url for the given alias.\"},\"rpcUrlStructs()\":{\"notice\":\"Returns all rpc urls and their aliases as structs.\"},\"rpcUrls()\":{\"notice\":\"Returns all rpc urls and their aliases `[alias, url][]`.\"},\"selectFork(uint256)\":{\"notice\":\"Takes a fork identifier created by `createFork` and sets the corresponding forked state as active.\"},\"serializeAddress(string,string,address)\":{\"notice\":\"See `serializeJson`.\"},\"serializeAddress(string,string,address[])\":{\"notice\":\"See `serializeJson`.\"},\"serializeBool(string,string,bool)\":{\"notice\":\"See `serializeJson`.\"},\"serializeBool(string,string,bool[])\":{\"notice\":\"See `serializeJson`.\"},\"serializeBytes(string,string,bytes)\":{\"notice\":\"See `serializeJson`.\"},\"serializeBytes(string,string,bytes[])\":{\"notice\":\"See `serializeJson`.\"},\"serializeBytes32(string,string,bytes32)\":{\"notice\":\"See `serializeJson`.\"},\"serializeBytes32(string,string,bytes32[])\":{\"notice\":\"See `serializeJson`.\"},\"serializeInt(string,string,int256)\":{\"notice\":\"See `serializeJson`.\"},\"serializeInt(string,string,int256[])\":{\"notice\":\"See `serializeJson`.\"},\"serializeJson(string,string)\":{\"notice\":\"Serializes a key and value to a JSON object stored in-memory that can be later written to a file. Returns the stringified version of the specific JSON file up to that moment.\"},\"serializeJsonType(string,bytes)\":{\"notice\":\"See `serializeJson`.\"},\"serializeJsonType(string,string,string,bytes)\":{\"notice\":\"See `serializeJson`.\"},\"serializeString(string,string,string)\":{\"notice\":\"See `serializeJson`.\"},\"serializeString(string,string,string[])\":{\"notice\":\"See `serializeJson`.\"},\"serializeUint(string,string,uint256)\":{\"notice\":\"See `serializeJson`.\"},\"serializeUint(string,string,uint256[])\":{\"notice\":\"See `serializeJson`.\"},\"serializeUintToHex(string,string,uint256)\":{\"notice\":\"See `serializeJson`.\"},\"setBlockhash(uint256,bytes32)\":{\"notice\":\"Set blockhash for the current block. It only sets the blockhash for blocks where `block.number - 256 <= number < block.number`.\"},\"setEnv(string,string)\":{\"notice\":\"Sets environment variables.\"},\"setNonce(address,uint64)\":{\"notice\":\"Sets the nonce of an account. Must be higher than the current nonce of the account.\"},\"setNonceUnsafe(address,uint64)\":{\"notice\":\"Sets the nonce of an account to an arbitrary value.\"},\"sign((address,uint256,uint256,uint256),bytes32)\":{\"notice\":\"Signs data with a `Wallet`.\"},\"sign(address,bytes32)\":{\"notice\":\"Signs `digest` with signer provided to script using the secp256k1 curve. Raises error if none of the signers passed into the script have provided address.\"},\"sign(bytes32)\":{\"notice\":\"Signs `digest` with signer provided to script using the secp256k1 curve. If `--sender` is provided, the signer with provided address is used, otherwise, if exactly one signer is provided to the script, that signer is used. Raises error if signer passed through `--sender` does not match any unlocked signers or if `--sender` is not provided and not exactly one signer is passed to the script.\"},\"sign(uint256,bytes32)\":{\"notice\":\"Signs `digest` with `privateKey` using the secp256k1 curve.\"},\"signCompact((address,uint256,uint256,uint256),bytes32)\":{\"notice\":\"Signs data with a `Wallet`. Returns a compact signature (`r`, `vs`) as per EIP-2098, where `vs` encodes both the signature's `s` value, and the recovery id `v` in a single bytes32. This format reduces the signature size from 65 to 64 bytes.\"},\"signCompact(address,bytes32)\":{\"notice\":\"Signs `digest` with signer provided to script using the secp256k1 curve. Returns a compact signature (`r`, `vs`) as per EIP-2098, where `vs` encodes both the signature's `s` value, and the recovery id `v` in a single bytes32. This format reduces the signature size from 65 to 64 bytes. Raises error if none of the signers passed into the script have provided address.\"},\"signCompact(bytes32)\":{\"notice\":\"Signs `digest` with signer provided to script using the secp256k1 curve. Returns a compact signature (`r`, `vs`) as per EIP-2098, where `vs` encodes both the signature's `s` value, and the recovery id `v` in a single bytes32. This format reduces the signature size from 65 to 64 bytes. If `--sender` is provided, the signer with provided address is used, otherwise, if exactly one signer is provided to the script, that signer is used. Raises error if signer passed through `--sender` does not match any unlocked signers or if `--sender` is not provided and not exactly one signer is passed to the script.\"},\"signCompact(uint256,bytes32)\":{\"notice\":\"Signs `digest` with `privateKey` using the secp256k1 curve. Returns a compact signature (`r`, `vs`) as per EIP-2098, where `vs` encodes both the signature's `s` value, and the recovery id `v` in a single bytes32. This format reduces the signature size from 65 to 64 bytes.\"},\"signP256(uint256,bytes32)\":{\"notice\":\"Signs `digest` with `privateKey` using the secp256r1 curve.\"},\"skip(bool)\":{\"notice\":\"Marks a test as skipped. Must be called at the top of the test.\"},\"sleep(uint256)\":{\"notice\":\"Suspends execution of the main thread for `duration` milliseconds.\"},\"snapshot()\":{\"notice\":\"Snapshot the current state of the evm. Returns the ID of the snapshot that was created. To revert a snapshot use `revertTo`.\"},\"split(string,string)\":{\"notice\":\"Splits the given `string` into an array of strings divided by the `delimiter`.\"},\"startBroadcast()\":{\"notice\":\"Has all subsequent calls (at this call depth only) create transactions that can later be signed and sent onchain. Broadcasting address is determined by checking the following in order: 1. If `--sender` argument was provided, that address is used. 2. If exactly one signer (e.g. private key, hw wallet, keystore) is set when `forge broadcast` is invoked, that signer is used. 3. Otherwise, default foundry sender (1804c8AB1F12E6bbf3894d4083f33e07309d1f38) is used.\"},\"startBroadcast(address)\":{\"notice\":\"Has all subsequent calls (at this call depth only) create transactions with the address provided that can later be signed and sent onchain.\"},\"startBroadcast(uint256)\":{\"notice\":\"Has all subsequent calls (at this call depth only) create transactions with the private key provided that can later be signed and sent onchain.\"},\"startMappingRecording()\":{\"notice\":\"Starts recording all map SSTOREs for later retrieval.\"},\"startPrank(address)\":{\"notice\":\"Sets all subsequent calls' `msg.sender` to be the input address until `stopPrank` is called.\"},\"startPrank(address,address)\":{\"notice\":\"Sets all subsequent calls' `msg.sender` to be the input address until `stopPrank` is called, and the `tx.origin` to be the second input.\"},\"startStateDiffRecording()\":{\"notice\":\"Record all account accesses as part of CREATE, CALL or SELFDESTRUCT opcodes in order, along with the context of the calls\"},\"stopAndReturnStateDiff()\":{\"notice\":\"Returns an ordered array of all account accesses from a `vm.startStateDiffRecording` session.\"},\"stopBroadcast()\":{\"notice\":\"Stops collecting onchain transactions.\"},\"stopExpectSafeMemory()\":{\"notice\":\"Stops all safe memory expectation in the current subcontext.\"},\"stopMappingRecording()\":{\"notice\":\"Stops recording all map SSTOREs for later retrieval and clears the recorded data.\"},\"stopPrank()\":{\"notice\":\"Resets subsequent calls' `msg.sender` to be `address(this)`.\"},\"store(address,bytes32,bytes32)\":{\"notice\":\"Stores a value to an address' storage slot.\"},\"toBase64(bytes)\":{\"notice\":\"Encodes a `bytes` value to a base64 string.\"},\"toBase64(string)\":{\"notice\":\"Encodes a `string` value to a base64 string.\"},\"toBase64URL(bytes)\":{\"notice\":\"Encodes a `bytes` value to a base64url string.\"},\"toBase64URL(string)\":{\"notice\":\"Encodes a `string` value to a base64url string.\"},\"toLowercase(string)\":{\"notice\":\"Converts the given `string` value to Lowercase.\"},\"toString(address)\":{\"notice\":\"Converts the given value to a `string`.\"},\"toString(bool)\":{\"notice\":\"Converts the given value to a `string`.\"},\"toString(bytes)\":{\"notice\":\"Converts the given value to a `string`.\"},\"toString(bytes32)\":{\"notice\":\"Converts the given value to a `string`.\"},\"toString(int256)\":{\"notice\":\"Converts the given value to a `string`.\"},\"toString(uint256)\":{\"notice\":\"Converts the given value to a `string`.\"},\"toUppercase(string)\":{\"notice\":\"Converts the given `string` value to Uppercase.\"},\"transact(bytes32)\":{\"notice\":\"Fetches the given transaction from the active fork and executes it on the current state.\"},\"transact(uint256,bytes32)\":{\"notice\":\"Fetches the given transaction from the given fork and executes it on the current state.\"},\"trim(string)\":{\"notice\":\"Trims leading and trailing whitespace from the given `string` value.\"},\"tryFfi(string[])\":{\"notice\":\"Performs a foreign function call via terminal and returns the exit code, stdout, and stderr.\"},\"txGasPrice(uint256)\":{\"notice\":\"Sets `tx.gasprice`.\"},\"unixTime()\":{\"notice\":\"Returns the time since unix epoch in milliseconds.\"},\"warp(uint256)\":{\"notice\":\"Sets `block.timestamp`.\"},\"writeFile(string,string)\":{\"notice\":\"Writes data to file, creating a file if it does not exist, and entirely replacing its contents if it does. `path` is relative to the project root.\"},\"writeFileBinary(string,bytes)\":{\"notice\":\"Writes binary data to a file, creating a file if it does not exist, and entirely replacing its contents if it does. `path` is relative to the project root.\"},\"writeJson(string,string)\":{\"notice\":\"Write a serialized JSON object to a file. If the file exists, it will be overwritten.\"},\"writeJson(string,string,string)\":{\"notice\":\"Write a serialized JSON object to an **existing** JSON file, replacing a value with key = <value_key.> This is useful to replace a specific value of a JSON file, without having to parse the entire thing.\"},\"writeLine(string,string)\":{\"notice\":\"Writes line to file, creating a file if it does not exist. `path` is relative to the project root.\"},\"writeToml(string,string)\":{\"notice\":\"Takes serialized JSON, converts to TOML and write a serialized TOML to a file.\"},\"writeToml(string,string,string)\":{\"notice\":\"Takes serialized JSON, converts to TOML and write a serialized TOML table to an **existing** TOML file, replacing a value with key = <value_key.> This is useful to replace a specific value of a TOML file, without having to parse the entire thing.\"}},\"notice\":\"The `Vm` interface does allow manipulation of the EVM state. These are all intended to be used in tests, but it is not recommended to use these cheats in scripts.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/forge-std/src/Vm.sol\":\"Vm\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\"]},\"sources\":{\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0x7121b5b99c4baefb34fdc1f3cc7235aac7138bbc2265344571709417623f5029\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://3866315b5f89f81746192969834b5932b30c62d7e86ad646e99b6055bdc0ca74\",\"dweb:/ipfs/QmRLhuB96iRxeF5pX4FdsizAaqgDaH2eCWFqfEXbdz9v7n\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.26+commit.8a97fa7a"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"target","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"accesses","outputs":[{"internalType":"bytes32[]","name":"readSlots","type":"bytes32[]"},{"internalType":"bytes32[]","name":"writeSlots","type":"bytes32[]"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"activeFork","outputs":[{"internalType":"uint256","name":"forkId","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}],"stateMutability":"pure","type":"function","name":"addr","outputs":[{"internalType":"address","name":"keyAddr","type":"address"}]},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"allowCheatcodes"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"maxDelta","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertApproxEqAbs"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"maxDelta","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertApproxEqAbs"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"maxDelta","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertApproxEqAbs"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"maxDelta","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertApproxEqAbs"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"maxDelta","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertApproxEqAbsDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"maxDelta","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertApproxEqAbsDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"maxDelta","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertApproxEqAbsDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"maxDelta","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertApproxEqAbsDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"maxPercentDelta","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertApproxEqRel"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"maxPercentDelta","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertApproxEqRel"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"maxPercentDelta","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertApproxEqRel"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"maxPercentDelta","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertApproxEqRel"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"maxPercentDelta","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertApproxEqRelDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"maxPercentDelta","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertApproxEqRelDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"maxPercentDelta","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertApproxEqRelDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"maxPercentDelta","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertApproxEqRelDecimal"},{"inputs":[{"internalType":"bytes32[]","name":"left","type":"bytes32[]"},{"internalType":"bytes32[]","name":"right","type":"bytes32[]"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"int256[]","name":"left","type":"int256[]"},{"internalType":"int256[]","name":"right","type":"int256[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"address","name":"left","type":"address"},{"internalType":"address","name":"right","type":"address"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"string","name":"left","type":"string"},{"internalType":"string","name":"right","type":"string"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"address[]","name":"left","type":"address[]"},{"internalType":"address[]","name":"right","type":"address[]"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"address[]","name":"left","type":"address[]"},{"internalType":"address[]","name":"right","type":"address[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bool","name":"left","type":"bool"},{"internalType":"bool","name":"right","type":"bool"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"address","name":"left","type":"address"},{"internalType":"address","name":"right","type":"address"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"uint256[]","name":"left","type":"uint256[]"},{"internalType":"uint256[]","name":"right","type":"uint256[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bool[]","name":"left","type":"bool[]"},{"internalType":"bool[]","name":"right","type":"bool[]"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"int256[]","name":"left","type":"int256[]"},{"internalType":"int256[]","name":"right","type":"int256[]"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bytes32","name":"left","type":"bytes32"},{"internalType":"bytes32","name":"right","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"uint256[]","name":"left","type":"uint256[]"},{"internalType":"uint256[]","name":"right","type":"uint256[]"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bytes","name":"left","type":"bytes"},{"internalType":"bytes","name":"right","type":"bytes"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bytes32","name":"left","type":"bytes32"},{"internalType":"bytes32","name":"right","type":"bytes32"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"string[]","name":"left","type":"string[]"},{"internalType":"string[]","name":"right","type":"string[]"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bytes32[]","name":"left","type":"bytes32[]"},{"internalType":"bytes32[]","name":"right","type":"bytes32[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bytes","name":"left","type":"bytes"},{"internalType":"bytes","name":"right","type":"bytes"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bool[]","name":"left","type":"bool[]"},{"internalType":"bool[]","name":"right","type":"bool[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bytes[]","name":"left","type":"bytes[]"},{"internalType":"bytes[]","name":"right","type":"bytes[]"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"string[]","name":"left","type":"string[]"},{"internalType":"string[]","name":"right","type":"string[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"string","name":"left","type":"string"},{"internalType":"string","name":"right","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bytes[]","name":"left","type":"bytes[]"},{"internalType":"bytes[]","name":"right","type":"bytes[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bool","name":"left","type":"bool"},{"internalType":"bool","name":"right","type":"bool"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertEqDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertEqDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEqDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEqDecimal"},{"inputs":[{"internalType":"bool","name":"condition","type":"bool"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertFalse"},{"inputs":[{"internalType":"bool","name":"condition","type":"bool"}],"stateMutability":"pure","type":"function","name":"assertFalse"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"}],"stateMutability":"pure","type":"function","name":"assertGe"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertGe"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertGe"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertGe"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertGeDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertGeDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertGeDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertGeDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"}],"stateMutability":"pure","type":"function","name":"assertGt"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertGt"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertGt"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertGt"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertGtDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertGtDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertGtDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertGtDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertLe"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertLe"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"}],"stateMutability":"pure","type":"function","name":"assertLe"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertLe"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertLeDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertLeDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertLeDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertLeDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"}],"stateMutability":"pure","type":"function","name":"assertLt"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertLt"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertLt"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertLt"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertLtDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertLtDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertLtDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertLtDecimal"},{"inputs":[{"internalType":"bytes32[]","name":"left","type":"bytes32[]"},{"internalType":"bytes32[]","name":"right","type":"bytes32[]"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"int256[]","name":"left","type":"int256[]"},{"internalType":"int256[]","name":"right","type":"int256[]"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bool","name":"left","type":"bool"},{"internalType":"bool","name":"right","type":"bool"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bytes[]","name":"left","type":"bytes[]"},{"internalType":"bytes[]","name":"right","type":"bytes[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bool","name":"left","type":"bool"},{"internalType":"bool","name":"right","type":"bool"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bool[]","name":"left","type":"bool[]"},{"internalType":"bool[]","name":"right","type":"bool[]"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bytes","name":"left","type":"bytes"},{"internalType":"bytes","name":"right","type":"bytes"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"address[]","name":"left","type":"address[]"},{"internalType":"address[]","name":"right","type":"address[]"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"uint256[]","name":"left","type":"uint256[]"},{"internalType":"uint256[]","name":"right","type":"uint256[]"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bool[]","name":"left","type":"bool[]"},{"internalType":"bool[]","name":"right","type":"bool[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"string","name":"left","type":"string"},{"internalType":"string","name":"right","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"address[]","name":"left","type":"address[]"},{"internalType":"address[]","name":"right","type":"address[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"string","name":"left","type":"string"},{"internalType":"string","name":"right","type":"string"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"address","name":"left","type":"address"},{"internalType":"address","name":"right","type":"address"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bytes32","name":"left","type":"bytes32"},{"internalType":"bytes32","name":"right","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bytes","name":"left","type":"bytes"},{"internalType":"bytes","name":"right","type":"bytes"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"uint256[]","name":"left","type":"uint256[]"},{"internalType":"uint256[]","name":"right","type":"uint256[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"address","name":"left","type":"address"},{"internalType":"address","name":"right","type":"address"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bytes32","name":"left","type":"bytes32"},{"internalType":"bytes32","name":"right","type":"bytes32"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"string[]","name":"left","type":"string[]"},{"internalType":"string[]","name":"right","type":"string[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bytes32[]","name":"left","type":"bytes32[]"},{"internalType":"bytes32[]","name":"right","type":"bytes32[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"string[]","name":"left","type":"string[]"},{"internalType":"string[]","name":"right","type":"string[]"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"int256[]","name":"left","type":"int256[]"},{"internalType":"int256[]","name":"right","type":"int256[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bytes[]","name":"left","type":"bytes[]"},{"internalType":"bytes[]","name":"right","type":"bytes[]"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertNotEqDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEqDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertNotEqDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEqDecimal"},{"inputs":[{"internalType":"bool","name":"condition","type":"bool"}],"stateMutability":"pure","type":"function","name":"assertTrue"},{"inputs":[{"internalType":"bool","name":"condition","type":"bool"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertTrue"},{"inputs":[{"internalType":"bool","name":"condition","type":"bool"}],"stateMutability":"pure","type":"function","name":"assume"},{"inputs":[{"internalType":"uint256","name":"newBlobBaseFee","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"blobBaseFee"},{"inputs":[{"internalType":"bytes32[]","name":"hashes","type":"bytes32[]"}],"stateMutability":"nonpayable","type":"function","name":"blobhashes"},{"inputs":[{"internalType":"string","name":"char","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"breakpoint"},{"inputs":[{"internalType":"string","name":"char","type":"string"},{"internalType":"bool","name":"value","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"breakpoint"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"broadcast"},{"inputs":[{"internalType":"address","name":"signer","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"broadcast"},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"broadcast"},{"inputs":[{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"broadcastRawTransaction"},{"inputs":[{"internalType":"uint256","name":"newChainId","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"chainId"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"clearMockedCalls"},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"closeFile"},{"inputs":[{"internalType":"address","name":"newCoinbase","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"coinbase"},{"inputs":[{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"bytes32","name":"initCodeHash","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"computeCreate2Address","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"bytes32","name":"initCodeHash","type":"bytes32"},{"internalType":"address","name":"deployer","type":"address"}],"stateMutability":"pure","type":"function","name":"computeCreate2Address","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"address","name":"deployer","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"}],"stateMutability":"pure","type":"function","name":"computeCreateAddress","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"string","name":"from","type":"string"},{"internalType":"string","name":"to","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"copyFile","outputs":[{"internalType":"uint64","name":"copied","type":"uint64"}]},{"inputs":[{"internalType":"string","name":"path","type":"string"},{"internalType":"bool","name":"recursive","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"createDir"},{"inputs":[{"internalType":"string","name":"urlOrAlias","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"createFork","outputs":[{"internalType":"uint256","name":"forkId","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"urlOrAlias","type":"string"},{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"createFork","outputs":[{"internalType":"uint256","name":"forkId","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"urlOrAlias","type":"string"},{"internalType":"bytes32","name":"txHash","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"createFork","outputs":[{"internalType":"uint256","name":"forkId","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"urlOrAlias","type":"string"},{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"createSelectFork","outputs":[{"internalType":"uint256","name":"forkId","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"urlOrAlias","type":"string"},{"internalType":"bytes32","name":"txHash","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"createSelectFork","outputs":[{"internalType":"uint256","name":"forkId","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"urlOrAlias","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"createSelectFork","outputs":[{"internalType":"uint256","name":"forkId","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"walletLabel","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"createWallet","outputs":[{"internalType":"struct VmSafe.Wallet","name":"wallet","type":"tuple","components":[{"internalType":"address","name":"addr","type":"address"},{"internalType":"uint256","name":"publicKeyX","type":"uint256"},{"internalType":"uint256","name":"publicKeyY","type":"uint256"},{"internalType":"uint256","name":"privateKey","type":"uint256"}]}]},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"createWallet","outputs":[{"internalType":"struct VmSafe.Wallet","name":"wallet","type":"tuple","components":[{"internalType":"address","name":"addr","type":"address"},{"internalType":"uint256","name":"publicKeyX","type":"uint256"},{"internalType":"uint256","name":"publicKeyY","type":"uint256"},{"internalType":"uint256","name":"privateKey","type":"uint256"}]}]},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"},{"internalType":"string","name":"walletLabel","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"createWallet","outputs":[{"internalType":"struct VmSafe.Wallet","name":"wallet","type":"tuple","components":[{"internalType":"address","name":"addr","type":"address"},{"internalType":"uint256","name":"publicKeyX","type":"uint256"},{"internalType":"uint256","name":"publicKeyY","type":"uint256"},{"internalType":"uint256","name":"privateKey","type":"uint256"}]}]},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"newBalance","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"deal"},{"inputs":[{"internalType":"uint256","name":"snapshotId","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"deleteSnapshot","outputs":[{"internalType":"bool","name":"success","type":"bool"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"deleteSnapshots"},{"inputs":[{"internalType":"string","name":"artifactPath","type":"string"},{"internalType":"bytes","name":"constructorArgs","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"deployCode","outputs":[{"internalType":"address","name":"deployedAddress","type":"address"}]},{"inputs":[{"internalType":"string","name":"artifactPath","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"deployCode","outputs":[{"internalType":"address","name":"deployedAddress","type":"address"}]},{"inputs":[{"internalType":"string","name":"mnemonic","type":"string"},{"internalType":"string","name":"derivationPath","type":"string"},{"internalType":"uint32","name":"index","type":"uint32"},{"internalType":"string","name":"language","type":"string"}],"stateMutability":"pure","type":"function","name":"deriveKey","outputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"mnemonic","type":"string"},{"internalType":"uint32","name":"index","type":"uint32"},{"internalType":"string","name":"language","type":"string"}],"stateMutability":"pure","type":"function","name":"deriveKey","outputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"mnemonic","type":"string"},{"internalType":"uint32","name":"index","type":"uint32"}],"stateMutability":"pure","type":"function","name":"deriveKey","outputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"mnemonic","type":"string"},{"internalType":"string","name":"derivationPath","type":"string"},{"internalType":"uint32","name":"index","type":"uint32"}],"stateMutability":"pure","type":"function","name":"deriveKey","outputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"newDifficulty","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"difficulty"},{"inputs":[{"internalType":"string","name":"pathToStateJson","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"dumpState"},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"pure","type":"function","name":"ensNamehash","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"view","type":"function","name":"envAddress","outputs":[{"internalType":"address","name":"value","type":"address"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"}],"stateMutability":"view","type":"function","name":"envAddress","outputs":[{"internalType":"address[]","name":"value","type":"address[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"view","type":"function","name":"envBool","outputs":[{"internalType":"bool","name":"value","type":"bool"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"}],"stateMutability":"view","type":"function","name":"envBool","outputs":[{"internalType":"bool[]","name":"value","type":"bool[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"view","type":"function","name":"envBytes","outputs":[{"internalType":"bytes","name":"value","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"}],"stateMutability":"view","type":"function","name":"envBytes","outputs":[{"internalType":"bytes[]","name":"value","type":"bytes[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"}],"stateMutability":"view","type":"function","name":"envBytes32","outputs":[{"internalType":"bytes32[]","name":"value","type":"bytes32[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"view","type":"function","name":"envBytes32","outputs":[{"internalType":"bytes32","name":"value","type":"bytes32"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"view","type":"function","name":"envExists","outputs":[{"internalType":"bool","name":"result","type":"bool"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"}],"stateMutability":"view","type":"function","name":"envInt","outputs":[{"internalType":"int256[]","name":"value","type":"int256[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"view","type":"function","name":"envInt","outputs":[{"internalType":"int256","name":"value","type":"int256"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"},{"internalType":"bytes32[]","name":"defaultValue","type":"bytes32[]"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"bytes32[]","name":"value","type":"bytes32[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"},{"internalType":"int256[]","name":"defaultValue","type":"int256[]"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"int256[]","name":"value","type":"int256[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"bool","name":"defaultValue","type":"bool"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"bool","name":"value","type":"bool"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"address","name":"defaultValue","type":"address"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"address","name":"value","type":"address"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"uint256","name":"defaultValue","type":"uint256"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"uint256","name":"value","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"},{"internalType":"bytes[]","name":"defaultValue","type":"bytes[]"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"bytes[]","name":"value","type":"bytes[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"},{"internalType":"uint256[]","name":"defaultValue","type":"uint256[]"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"uint256[]","name":"value","type":"uint256[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"},{"internalType":"string[]","name":"defaultValue","type":"string[]"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"string[]","name":"value","type":"string[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"bytes","name":"defaultValue","type":"bytes"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"bytes","name":"value","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"bytes32","name":"defaultValue","type":"bytes32"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"bytes32","name":"value","type":"bytes32"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"int256","name":"defaultValue","type":"int256"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"int256","name":"value","type":"int256"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"},{"internalType":"address[]","name":"defaultValue","type":"address[]"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"address[]","name":"value","type":"address[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"defaultValue","type":"string"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"string","name":"value","type":"string"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"},{"internalType":"bool[]","name":"defaultValue","type":"bool[]"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"bool[]","name":"value","type":"bool[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"}],"stateMutability":"view","type":"function","name":"envString","outputs":[{"internalType":"string[]","name":"value","type":"string[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"view","type":"function","name":"envString","outputs":[{"internalType":"string","name":"value","type":"string"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"view","type":"function","name":"envUint","outputs":[{"internalType":"uint256","name":"value","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"}],"stateMutability":"view","type":"function","name":"envUint","outputs":[{"internalType":"uint256[]","name":"value","type":"uint256[]"}]},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes","name":"newRuntimeBytecode","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"etch"},{"inputs":[{"internalType":"uint256","name":"fromBlock","type":"uint256"},{"internalType":"uint256","name":"toBlock","type":"uint256"},{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes32[]","name":"topics","type":"bytes32[]"}],"stateMutability":"nonpayable","type":"function","name":"eth_getLogs","outputs":[{"internalType":"struct VmSafe.EthGetLogs[]","name":"logs","type":"tuple[]","components":[{"internalType":"address","name":"emitter","type":"address"},{"internalType":"bytes32[]","name":"topics","type":"bytes32[]"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"bytes32","name":"blockHash","type":"bytes32"},{"internalType":"uint64","name":"blockNumber","type":"uint64"},{"internalType":"bytes32","name":"transactionHash","type":"bytes32"},{"internalType":"uint64","name":"transactionIndex","type":"uint64"},{"internalType":"uint256","name":"logIndex","type":"uint256"},{"internalType":"bool","name":"removed","type":"bool"}]}]},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"exists","outputs":[{"internalType":"bool","name":"result","type":"bool"}]},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"uint256","name":"msgValue","type":"uint256"},{"internalType":"uint64","name":"gas","type":"uint64"},{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"expectCall"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"uint256","name":"msgValue","type":"uint256"},{"internalType":"uint64","name":"gas","type":"uint64"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"uint64","name":"count","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"expectCall"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"uint256","name":"msgValue","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"uint64","name":"count","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"expectCall"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"expectCall"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"uint64","name":"count","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"expectCall"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"uint256","name":"msgValue","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"expectCall"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"uint256","name":"msgValue","type":"uint256"},{"internalType":"uint64","name":"minGas","type":"uint64"},{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"expectCallMinGas"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"uint256","name":"msgValue","type":"uint256"},{"internalType":"uint64","name":"minGas","type":"uint64"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"uint64","name":"count","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"expectCallMinGas"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"expectEmit"},{"inputs":[{"internalType":"bool","name":"checkTopic1","type":"bool"},{"internalType":"bool","name":"checkTopic2","type":"bool"},{"internalType":"bool","name":"checkTopic3","type":"bool"},{"internalType":"bool","name":"checkData","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"expectEmit"},{"inputs":[{"internalType":"bool","name":"checkTopic1","type":"bool"},{"internalType":"bool","name":"checkTopic2","type":"bool"},{"internalType":"bool","name":"checkTopic3","type":"bool"},{"internalType":"bool","name":"checkData","type":"bool"},{"internalType":"address","name":"emitter","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"expectEmit"},{"inputs":[{"internalType":"address","name":"emitter","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"expectEmit"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"expectEmitAnonymous"},{"inputs":[{"internalType":"address","name":"emitter","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"expectEmitAnonymous"},{"inputs":[{"internalType":"bool","name":"checkTopic0","type":"bool"},{"internalType":"bool","name":"checkTopic1","type":"bool"},{"internalType":"bool","name":"checkTopic2","type":"bool"},{"internalType":"bool","name":"checkTopic3","type":"bool"},{"internalType":"bool","name":"checkData","type":"bool"},{"internalType":"address","name":"emitter","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"expectEmitAnonymous"},{"inputs":[{"internalType":"bool","name":"checkTopic0","type":"bool"},{"internalType":"bool","name":"checkTopic1","type":"bool"},{"internalType":"bool","name":"checkTopic2","type":"bool"},{"internalType":"bool","name":"checkTopic3","type":"bool"},{"internalType":"bool","name":"checkData","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"expectEmitAnonymous"},{"inputs":[{"internalType":"bytes4","name":"revertData","type":"bytes4"}],"stateMutability":"nonpayable","type":"function","name":"expectRevert"},{"inputs":[{"internalType":"bytes","name":"revertData","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"expectRevert"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"expectRevert"},{"inputs":[{"internalType":"uint64","name":"min","type":"uint64"},{"internalType":"uint64","name":"max","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"expectSafeMemory"},{"inputs":[{"internalType":"uint64","name":"min","type":"uint64"},{"internalType":"uint64","name":"max","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"expectSafeMemoryCall"},{"inputs":[{"internalType":"uint256","name":"newBasefee","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"fee"},{"inputs":[{"internalType":"string[]","name":"commandInput","type":"string[]"}],"stateMutability":"nonpayable","type":"function","name":"ffi","outputs":[{"internalType":"bytes","name":"result","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"view","type":"function","name":"fsMetadata","outputs":[{"internalType":"struct VmSafe.FsMetadata","name":"metadata","type":"tuple","components":[{"internalType":"bool","name":"isDir","type":"bool"},{"internalType":"bool","name":"isSymlink","type":"bool"},{"internalType":"uint256","name":"length","type":"uint256"},{"internalType":"bool","name":"readOnly","type":"bool"},{"internalType":"uint256","name":"modified","type":"uint256"},{"internalType":"uint256","name":"accessed","type":"uint256"},{"internalType":"uint256","name":"created","type":"uint256"}]}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getBlobBaseFee","outputs":[{"internalType":"uint256","name":"blobBaseFee","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getBlobhashes","outputs":[{"internalType":"bytes32[]","name":"hashes","type":"bytes32[]"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getBlockNumber","outputs":[{"internalType":"uint256","name":"height","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getBlockTimestamp","outputs":[{"internalType":"uint256","name":"timestamp","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"artifactPath","type":"string"}],"stateMutability":"view","type":"function","name":"getCode","outputs":[{"internalType":"bytes","name":"creationBytecode","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"artifactPath","type":"string"}],"stateMutability":"view","type":"function","name":"getDeployedCode","outputs":[{"internalType":"bytes","name":"runtimeBytecode","type":"bytes"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getFoundryVersion","outputs":[{"internalType":"string","name":"version","type":"string"}]},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"stateMutability":"view","type":"function","name":"getLabel","outputs":[{"internalType":"string","name":"currentLabel","type":"string"}]},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes32","name":"elementSlot","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"getMappingKeyAndParentOf","outputs":[{"internalType":"bool","name":"found","type":"bool"},{"internalType":"bytes32","name":"key","type":"bytes32"},{"internalType":"bytes32","name":"parent","type":"bytes32"}]},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes32","name":"mappingSlot","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"getMappingLength","outputs":[{"internalType":"uint256","name":"length","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes32","name":"mappingSlot","type":"bytes32"},{"internalType":"uint256","name":"idx","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"getMappingSlotAt","outputs":[{"internalType":"bytes32","name":"value","type":"bytes32"}]},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"stateMutability":"view","type":"function","name":"getNonce","outputs":[{"internalType":"uint64","name":"nonce","type":"uint64"}]},{"inputs":[{"internalType":"struct VmSafe.Wallet","name":"wallet","type":"tuple","components":[{"internalType":"address","name":"addr","type":"address"},{"internalType":"uint256","name":"publicKeyX","type":"uint256"},{"internalType":"uint256","name":"publicKeyY","type":"uint256"},{"internalType":"uint256","name":"privateKey","type":"uint256"}]}],"stateMutability":"nonpayable","type":"function","name":"getNonce","outputs":[{"internalType":"uint64","name":"nonce","type":"uint64"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"getRecordedLogs","outputs":[{"internalType":"struct VmSafe.Log[]","name":"logs","type":"tuple[]","components":[{"internalType":"bytes32[]","name":"topics","type":"bytes32[]"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"address","name":"emitter","type":"address"}]}]},{"inputs":[{"internalType":"string","name":"input","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"indexOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"enum VmSafe.ForgeContext","name":"context","type":"uint8"}],"stateMutability":"view","type":"function","name":"isContext","outputs":[{"internalType":"bool","name":"result","type":"bool"}]},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"isDir","outputs":[{"internalType":"bool","name":"result","type":"bool"}]},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"isFile","outputs":[{"internalType":"bool","name":"result","type":"bool"}]},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"stateMutability":"view","type":"function","name":"isPersistent","outputs":[{"internalType":"bool","name":"persistent","type":"bool"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"view","type":"function","name":"keyExists","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"view","type":"function","name":"keyExistsJson","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"view","type":"function","name":"keyExistsToml","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"string","name":"newLabel","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"label"},{"inputs":[],"stateMutability":"view","type":"function","name":"lastCallGas","outputs":[{"internalType":"struct VmSafe.Gas","name":"gas","type":"tuple","components":[{"internalType":"uint64","name":"gasLimit","type":"uint64"},{"internalType":"uint64","name":"gasTotalUsed","type":"uint64"},{"internalType":"uint64","name":"gasMemoryUsed","type":"uint64"},{"internalType":"int64","name":"gasRefunded","type":"int64"},{"internalType":"uint64","name":"gasRemaining","type":"uint64"}]}]},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes32","name":"slot","type":"bytes32"}],"stateMutability":"view","type":"function","name":"load","outputs":[{"internalType":"bytes32","name":"data","type":"bytes32"}]},{"inputs":[{"internalType":"string","name":"pathToAllocsJson","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"loadAllocs"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"}],"stateMutability":"nonpayable","type":"function","name":"makePersistent"},{"inputs":[{"internalType":"address","name":"account0","type":"address"},{"internalType":"address","name":"account1","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"makePersistent"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"makePersistent"},{"inputs":[{"internalType":"address","name":"account0","type":"address"},{"internalType":"address","name":"account1","type":"address"},{"internalType":"address","name":"account2","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"makePersistent"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"uint256","name":"msgValue","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"bytes","name":"returnData","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"mockCall"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"bytes","name":"returnData","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"mockCall"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"uint256","name":"msgValue","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"bytes","name":"revertData","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"mockCallRevert"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"bytes","name":"revertData","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"mockCallRevert"},{"inputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}],"stateMutability":"pure","type":"function","name":"parseAddress","outputs":[{"internalType":"address","name":"parsedValue","type":"address"}]},{"inputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}],"stateMutability":"pure","type":"function","name":"parseBool","outputs":[{"internalType":"bool","name":"parsedValue","type":"bool"}]},{"inputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}],"stateMutability":"pure","type":"function","name":"parseBytes","outputs":[{"internalType":"bytes","name":"parsedValue","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}],"stateMutability":"pure","type":"function","name":"parseBytes32","outputs":[{"internalType":"bytes32","name":"parsedValue","type":"bytes32"}]},{"inputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}],"stateMutability":"pure","type":"function","name":"parseInt","outputs":[{"internalType":"int256","name":"parsedValue","type":"int256"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJson","outputs":[{"internalType":"bytes","name":"abiEncodedData","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJson","outputs":[{"internalType":"bytes","name":"abiEncodedData","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonAddress","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonAddressArray","outputs":[{"internalType":"address[]","name":"","type":"address[]"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonBool","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonBoolArray","outputs":[{"internalType":"bool[]","name":"","type":"bool[]"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonBytes","outputs":[{"internalType":"bytes","name":"","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonBytes32","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonBytes32Array","outputs":[{"internalType":"bytes32[]","name":"","type":"bytes32[]"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonBytesArray","outputs":[{"internalType":"bytes[]","name":"","type":"bytes[]"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonInt","outputs":[{"internalType":"int256","name":"","type":"int256"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonIntArray","outputs":[{"internalType":"int256[]","name":"","type":"int256[]"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonKeys","outputs":[{"internalType":"string[]","name":"keys","type":"string[]"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonString","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonStringArray","outputs":[{"internalType":"string[]","name":"","type":"string[]"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"typeDescription","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonType","outputs":[{"internalType":"bytes","name":"","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"},{"internalType":"string","name":"typeDescription","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonType","outputs":[{"internalType":"bytes","name":"","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"},{"internalType":"string","name":"typeDescription","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonTypeArray","outputs":[{"internalType":"bytes","name":"","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonUint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonUintArray","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseToml","outputs":[{"internalType":"bytes","name":"abiEncodedData","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"}],"stateMutability":"pure","type":"function","name":"parseToml","outputs":[{"internalType":"bytes","name":"abiEncodedData","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlAddress","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlAddressArray","outputs":[{"internalType":"address[]","name":"","type":"address[]"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlBool","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlBoolArray","outputs":[{"internalType":"bool[]","name":"","type":"bool[]"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlBytes","outputs":[{"internalType":"bytes","name":"","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlBytes32","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlBytes32Array","outputs":[{"internalType":"bytes32[]","name":"","type":"bytes32[]"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlBytesArray","outputs":[{"internalType":"bytes[]","name":"","type":"bytes[]"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlInt","outputs":[{"internalType":"int256","name":"","type":"int256"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlIntArray","outputs":[{"internalType":"int256[]","name":"","type":"int256[]"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlKeys","outputs":[{"internalType":"string[]","name":"keys","type":"string[]"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlString","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlStringArray","outputs":[{"internalType":"string[]","name":"","type":"string[]"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlUint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlUintArray","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}]},{"inputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}],"stateMutability":"pure","type":"function","name":"parseUint","outputs":[{"internalType":"uint256","name":"parsedValue","type":"uint256"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"pauseGasMetering"},{"inputs":[{"internalType":"address","name":"msgSender","type":"address"},{"internalType":"address","name":"txOrigin","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"prank"},{"inputs":[{"internalType":"address","name":"msgSender","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"prank"},{"inputs":[{"internalType":"bytes32","name":"newPrevrandao","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"prevrandao"},{"inputs":[{"internalType":"uint256","name":"newPrevrandao","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"prevrandao"},{"inputs":[],"stateMutability":"view","type":"function","name":"projectRoot","outputs":[{"internalType":"string","name":"path","type":"string"}]},{"inputs":[{"internalType":"string","name":"promptText","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"prompt","outputs":[{"internalType":"string","name":"input","type":"string"}]},{"inputs":[{"internalType":"string","name":"promptText","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"promptAddress","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"string","name":"promptText","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"promptSecret","outputs":[{"internalType":"string","name":"input","type":"string"}]},{"inputs":[{"internalType":"string","name":"promptText","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"promptSecretUint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"promptText","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"promptUint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"randomAddress","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"randomUint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"min","type":"uint256"},{"internalType":"uint256","name":"max","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"randomUint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"readCallers","outputs":[{"internalType":"enum VmSafe.CallerMode","name":"callerMode","type":"uint8"},{"internalType":"address","name":"msgSender","type":"address"},{"internalType":"address","name":"txOrigin","type":"address"}]},{"inputs":[{"internalType":"string","name":"path","type":"string"},{"internalType":"uint64","name":"maxDepth","type":"uint64"}],"stateMutability":"view","type":"function","name":"readDir","outputs":[{"internalType":"struct VmSafe.DirEntry[]","name":"entries","type":"tuple[]","components":[{"internalType":"string","name":"errorMessage","type":"string"},{"internalType":"string","name":"path","type":"string"},{"internalType":"uint64","name":"depth","type":"uint64"},{"internalType":"bool","name":"isDir","type":"bool"},{"internalType":"bool","name":"isSymlink","type":"bool"}]}]},{"inputs":[{"internalType":"string","name":"path","type":"string"},{"internalType":"uint64","name":"maxDepth","type":"uint64"},{"internalType":"bool","name":"followLinks","type":"bool"}],"stateMutability":"view","type":"function","name":"readDir","outputs":[{"internalType":"struct VmSafe.DirEntry[]","name":"entries","type":"tuple[]","components":[{"internalType":"string","name":"errorMessage","type":"string"},{"internalType":"string","name":"path","type":"string"},{"internalType":"uint64","name":"depth","type":"uint64"},{"internalType":"bool","name":"isDir","type":"bool"},{"internalType":"bool","name":"isSymlink","type":"bool"}]}]},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"view","type":"function","name":"readDir","outputs":[{"internalType":"struct VmSafe.DirEntry[]","name":"entries","type":"tuple[]","components":[{"internalType":"string","name":"errorMessage","type":"string"},{"internalType":"string","name":"path","type":"string"},{"internalType":"uint64","name":"depth","type":"uint64"},{"internalType":"bool","name":"isDir","type":"bool"},{"internalType":"bool","name":"isSymlink","type":"bool"}]}]},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"view","type":"function","name":"readFile","outputs":[{"internalType":"string","name":"data","type":"string"}]},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"view","type":"function","name":"readFileBinary","outputs":[{"internalType":"bytes","name":"data","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"view","type":"function","name":"readLine","outputs":[{"internalType":"string","name":"line","type":"string"}]},{"inputs":[{"internalType":"string","name":"linkPath","type":"string"}],"stateMutability":"view","type":"function","name":"readLink","outputs":[{"internalType":"string","name":"targetPath","type":"string"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"record"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"recordLogs"},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"rememberKey","outputs":[{"internalType":"address","name":"keyAddr","type":"address"}]},{"inputs":[{"internalType":"string","name":"path","type":"string"},{"internalType":"bool","name":"recursive","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"removeDir"},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"removeFile"},{"inputs":[{"internalType":"string","name":"input","type":"string"},{"internalType":"string","name":"from","type":"string"},{"internalType":"string","name":"to","type":"string"}],"stateMutability":"pure","type":"function","name":"replace","outputs":[{"internalType":"string","name":"output","type":"string"}]},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"resetNonce"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"resumeGasMetering"},{"inputs":[{"internalType":"uint256","name":"snapshotId","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"revertTo","outputs":[{"internalType":"bool","name":"success","type":"bool"}]},{"inputs":[{"internalType":"uint256","name":"snapshotId","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"revertToAndDelete","outputs":[{"internalType":"bool","name":"success","type":"bool"}]},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"}],"stateMutability":"nonpayable","type":"function","name":"revokePersistent"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"revokePersistent"},{"inputs":[{"internalType":"uint256","name":"newHeight","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"roll"},{"inputs":[{"internalType":"bytes32","name":"txHash","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"rollFork"},{"inputs":[{"internalType":"uint256","name":"forkId","type":"uint256"},{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"rollFork"},{"inputs":[{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"rollFork"},{"inputs":[{"internalType":"uint256","name":"forkId","type":"uint256"},{"internalType":"bytes32","name":"txHash","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"rollFork"},{"inputs":[{"internalType":"string","name":"urlOrAlias","type":"string"},{"internalType":"string","name":"method","type":"string"},{"internalType":"string","name":"params","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"rpc","outputs":[{"internalType":"bytes","name":"data","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"method","type":"string"},{"internalType":"string","name":"params","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"rpc","outputs":[{"internalType":"bytes","name":"data","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"rpcAlias","type":"string"}],"stateMutability":"view","type":"function","name":"rpcUrl","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"rpcUrlStructs","outputs":[{"internalType":"struct VmSafe.Rpc[]","name":"urls","type":"tuple[]","components":[{"internalType":"string","name":"key","type":"string"},{"internalType":"string","name":"url","type":"string"}]}]},{"inputs":[],"stateMutability":"view","type":"function","name":"rpcUrls","outputs":[{"internalType":"string[2][]","name":"urls","type":"string[2][]"}]},{"inputs":[{"internalType":"uint256","name":"forkId","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"selectFork"},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"address[]","name":"values","type":"address[]"}],"stateMutability":"nonpayable","type":"function","name":"serializeAddress","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"address","name":"value","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"serializeAddress","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"bool[]","name":"values","type":"bool[]"}],"stateMutability":"nonpayable","type":"function","name":"serializeBool","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"bool","name":"value","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"serializeBool","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"bytes[]","name":"values","type":"bytes[]"}],"stateMutability":"nonpayable","type":"function","name":"serializeBytes","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"bytes","name":"value","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"serializeBytes","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"bytes32[]","name":"values","type":"bytes32[]"}],"stateMutability":"nonpayable","type":"function","name":"serializeBytes32","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"bytes32","name":"value","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"serializeBytes32","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"int256","name":"value","type":"int256"}],"stateMutability":"nonpayable","type":"function","name":"serializeInt","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"int256[]","name":"values","type":"int256[]"}],"stateMutability":"nonpayable","type":"function","name":"serializeInt","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"value","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"serializeJson","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"typeDescription","type":"string"},{"internalType":"bytes","name":"value","type":"bytes"}],"stateMutability":"pure","type":"function","name":"serializeJsonType","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"string","name":"typeDescription","type":"string"},{"internalType":"bytes","name":"value","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"serializeJsonType","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"string[]","name":"values","type":"string[]"}],"stateMutability":"nonpayable","type":"function","name":"serializeString","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"string","name":"value","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"serializeString","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"uint256","name":"value","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"serializeUint","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"uint256[]","name":"values","type":"uint256[]"}],"stateMutability":"nonpayable","type":"function","name":"serializeUint","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"uint256","name":"value","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"serializeUintToHex","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"uint256","name":"blockNumber","type":"uint256"},{"internalType":"bytes32","name":"blockHash","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"setBlockhash"},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"value","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"setEnv"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint64","name":"newNonce","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"setNonce"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint64","name":"newNonce","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"setNonceUnsafe"},{"inputs":[{"internalType":"bytes32","name":"digest","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"sign","outputs":[{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}]},{"inputs":[{"internalType":"address","name":"signer","type":"address"},{"internalType":"bytes32","name":"digest","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"sign","outputs":[{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}]},{"inputs":[{"internalType":"struct VmSafe.Wallet","name":"wallet","type":"tuple","components":[{"internalType":"address","name":"addr","type":"address"},{"internalType":"uint256","name":"publicKeyX","type":"uint256"},{"internalType":"uint256","name":"publicKeyY","type":"uint256"},{"internalType":"uint256","name":"privateKey","type":"uint256"}]},{"internalType":"bytes32","name":"digest","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"sign","outputs":[{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}]},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"},{"internalType":"bytes32","name":"digest","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"sign","outputs":[{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}]},{"inputs":[{"internalType":"struct VmSafe.Wallet","name":"wallet","type":"tuple","components":[{"internalType":"address","name":"addr","type":"address"},{"internalType":"uint256","name":"publicKeyX","type":"uint256"},{"internalType":"uint256","name":"publicKeyY","type":"uint256"},{"internalType":"uint256","name":"privateKey","type":"uint256"}]},{"internalType":"bytes32","name":"digest","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"signCompact","outputs":[{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"vs","type":"bytes32"}]},{"inputs":[{"internalType":"address","name":"signer","type":"address"},{"internalType":"bytes32","name":"digest","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"signCompact","outputs":[{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"vs","type":"bytes32"}]},{"inputs":[{"internalType":"bytes32","name":"digest","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"signCompact","outputs":[{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"vs","type":"bytes32"}]},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"},{"internalType":"bytes32","name":"digest","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"signCompact","outputs":[{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"vs","type":"bytes32"}]},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"},{"internalType":"bytes32","name":"digest","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"signP256","outputs":[{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}]},{"inputs":[{"internalType":"bool","name":"skipTest","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"skip"},{"inputs":[{"internalType":"uint256","name":"duration","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"sleep"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"snapshot","outputs":[{"internalType":"uint256","name":"snapshotId","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"input","type":"string"},{"internalType":"string","name":"delimiter","type":"string"}],"stateMutability":"pure","type":"function","name":"split","outputs":[{"internalType":"string[]","name":"outputs","type":"string[]"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"startBroadcast"},{"inputs":[{"internalType":"address","name":"signer","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"startBroadcast"},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"startBroadcast"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"startMappingRecording"},{"inputs":[{"internalType":"address","name":"msgSender","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"startPrank"},{"inputs":[{"internalType":"address","name":"msgSender","type":"address"},{"internalType":"address","name":"txOrigin","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"startPrank"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"startStateDiffRecording"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"stopAndReturnStateDiff","outputs":[{"internalType":"struct VmSafe.AccountAccess[]","name":"accountAccesses","type":"tuple[]","components":[{"internalType":"struct VmSafe.ChainInfo","name":"chainInfo","type":"tuple","components":[{"internalType":"uint256","name":"forkId","type":"uint256"},{"internalType":"uint256","name":"chainId","type":"uint256"}]},{"internalType":"enum VmSafe.AccountAccessKind","name":"kind","type":"uint8"},{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"accessor","type":"address"},{"internalType":"bool","name":"initialized","type":"bool"},{"internalType":"uint256","name":"oldBalance","type":"uint256"},{"internalType":"uint256","name":"newBalance","type":"uint256"},{"internalType":"bytes","name":"deployedCode","type":"bytes"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"bool","name":"reverted","type":"bool"},{"internalType":"struct VmSafe.StorageAccess[]","name":"storageAccesses","type":"tuple[]","components":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"slot","type":"bytes32"},{"internalType":"bool","name":"isWrite","type":"bool"},{"internalType":"bytes32","name":"previousValue","type":"bytes32"},{"internalType":"bytes32","name":"newValue","type":"bytes32"},{"internalType":"bool","name":"reverted","type":"bool"}]},{"internalType":"uint64","name":"depth","type":"uint64"}]}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"stopBroadcast"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"stopExpectSafeMemory"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"stopMappingRecording"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"stopPrank"},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes32","name":"slot","type":"bytes32"},{"internalType":"bytes32","name":"value","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"store"},{"inputs":[{"internalType":"string","name":"data","type":"string"}],"stateMutability":"pure","type":"function","name":"toBase64","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"pure","type":"function","name":"toBase64","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[{"internalType":"string","name":"data","type":"string"}],"stateMutability":"pure","type":"function","name":"toBase64URL","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"pure","type":"function","name":"toBase64URL","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[{"internalType":"string","name":"input","type":"string"}],"stateMutability":"pure","type":"function","name":"toLowercase","outputs":[{"internalType":"string","name":"output","type":"string"}]},{"inputs":[{"internalType":"address","name":"value","type":"address"}],"stateMutability":"pure","type":"function","name":"toString","outputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}]},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"stateMutability":"pure","type":"function","name":"toString","outputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}]},{"inputs":[{"internalType":"bytes","name":"value","type":"bytes"}],"stateMutability":"pure","type":"function","name":"toString","outputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}]},{"inputs":[{"internalType":"bool","name":"value","type":"bool"}],"stateMutability":"pure","type":"function","name":"toString","outputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}]},{"inputs":[{"internalType":"int256","name":"value","type":"int256"}],"stateMutability":"pure","type":"function","name":"toString","outputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}]},{"inputs":[{"internalType":"bytes32","name":"value","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"toString","outputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}]},{"inputs":[{"internalType":"string","name":"input","type":"string"}],"stateMutability":"pure","type":"function","name":"toUppercase","outputs":[{"internalType":"string","name":"output","type":"string"}]},{"inputs":[{"internalType":"uint256","name":"forkId","type":"uint256"},{"internalType":"bytes32","name":"txHash","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"transact"},{"inputs":[{"internalType":"bytes32","name":"txHash","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"transact"},{"inputs":[{"internalType":"string","name":"input","type":"string"}],"stateMutability":"pure","type":"function","name":"trim","outputs":[{"internalType":"string","name":"output","type":"string"}]},{"inputs":[{"internalType":"string[]","name":"commandInput","type":"string[]"}],"stateMutability":"nonpayable","type":"function","name":"tryFfi","outputs":[{"internalType":"struct VmSafe.FfiResult","name":"result","type":"tuple","components":[{"internalType":"int32","name":"exitCode","type":"int32"},{"internalType":"bytes","name":"stdout","type":"bytes"},{"internalType":"bytes","name":"stderr","type":"bytes"}]}]},{"inputs":[{"internalType":"uint256","name":"newGasPrice","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"txGasPrice"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"unixTime","outputs":[{"internalType":"uint256","name":"milliseconds","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"newTimestamp","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"warp"},{"inputs":[{"internalType":"string","name":"path","type":"string"},{"internalType":"string","name":"data","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"writeFile"},{"inputs":[{"internalType":"string","name":"path","type":"string"},{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"writeFileBinary"},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"path","type":"string"},{"internalType":"string","name":"valueKey","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"writeJson"},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"path","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"writeJson"},{"inputs":[{"internalType":"string","name":"path","type":"string"},{"internalType":"string","name":"data","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"writeLine"},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"path","type":"string"},{"internalType":"string","name":"valueKey","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"writeToml"},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"path","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"writeToml"}],"devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{"accesses(address)":{"notice":"Gets all accessed reads and write slot from a `vm.record` session, for a given address."},"activeFork()":{"notice":"Returns the identifier of the currently active fork. Reverts if no fork is currently active."},"addr(uint256)":{"notice":"Gets the address for a given private key."},"allowCheatcodes(address)":{"notice":"In forking mode, explicitly grant the given address cheatcode access."},"assertApproxEqAbs(int256,int256,uint256)":{"notice":"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`."},"assertApproxEqAbs(int256,int256,uint256,string)":{"notice":"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`. Includes error message into revert string on failure."},"assertApproxEqAbs(uint256,uint256,uint256)":{"notice":"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`."},"assertApproxEqAbs(uint256,uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`. Includes error message into revert string on failure."},"assertApproxEqAbsDecimal(int256,int256,uint256,uint256)":{"notice":"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message."},"assertApproxEqAbsDecimal(int256,int256,uint256,uint256,string)":{"notice":"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256)":{"notice":"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message."},"assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertApproxEqRel(int256,int256,uint256)":{"notice":"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%"},"assertApproxEqRel(int256,int256,uint256,string)":{"notice":"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Includes error message into revert string on failure."},"assertApproxEqRel(uint256,uint256,uint256)":{"notice":"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%"},"assertApproxEqRel(uint256,uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Includes error message into revert string on failure."},"assertApproxEqRelDecimal(int256,int256,uint256,uint256)":{"notice":"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message."},"assertApproxEqRelDecimal(int256,int256,uint256,uint256,string)":{"notice":"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertApproxEqRelDecimal(uint256,uint256,uint256,uint256)":{"notice":"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message."},"assertApproxEqRelDecimal(uint256,uint256,uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertEq(address,address)":{"notice":"Asserts that two `address` values are equal."},"assertEq(address,address,string)":{"notice":"Asserts that two `address` values are equal and includes error message into revert string on failure."},"assertEq(address[],address[])":{"notice":"Asserts that two arrays of `address` values are equal."},"assertEq(address[],address[],string)":{"notice":"Asserts that two arrays of `address` values are equal and includes error message into revert string on failure."},"assertEq(bool,bool)":{"notice":"Asserts that two `bool` values are equal."},"assertEq(bool,bool,string)":{"notice":"Asserts that two `bool` values are equal and includes error message into revert string on failure."},"assertEq(bool[],bool[])":{"notice":"Asserts that two arrays of `bool` values are equal."},"assertEq(bool[],bool[],string)":{"notice":"Asserts that two arrays of `bool` values are equal and includes error message into revert string on failure."},"assertEq(bytes,bytes)":{"notice":"Asserts that two `bytes` values are equal."},"assertEq(bytes,bytes,string)":{"notice":"Asserts that two `bytes` values are equal and includes error message into revert string on failure."},"assertEq(bytes32,bytes32)":{"notice":"Asserts that two `bytes32` values are equal."},"assertEq(bytes32,bytes32,string)":{"notice":"Asserts that two `bytes32` values are equal and includes error message into revert string on failure."},"assertEq(bytes32[],bytes32[])":{"notice":"Asserts that two arrays of `bytes32` values are equal."},"assertEq(bytes32[],bytes32[],string)":{"notice":"Asserts that two arrays of `bytes32` values are equal and includes error message into revert string on failure."},"assertEq(bytes[],bytes[])":{"notice":"Asserts that two arrays of `bytes` values are equal."},"assertEq(bytes[],bytes[],string)":{"notice":"Asserts that two arrays of `bytes` values are equal and includes error message into revert string on failure."},"assertEq(int256,int256)":{"notice":"Asserts that two `int256` values are equal."},"assertEq(int256,int256,string)":{"notice":"Asserts that two `int256` values are equal and includes error message into revert string on failure."},"assertEq(int256[],int256[])":{"notice":"Asserts that two arrays of `int256` values are equal."},"assertEq(int256[],int256[],string)":{"notice":"Asserts that two arrays of `int256` values are equal and includes error message into revert string on failure."},"assertEq(string,string)":{"notice":"Asserts that two `string` values are equal."},"assertEq(string,string,string)":{"notice":"Asserts that two `string` values are equal and includes error message into revert string on failure."},"assertEq(string[],string[])":{"notice":"Asserts that two arrays of `string` values are equal."},"assertEq(string[],string[],string)":{"notice":"Asserts that two arrays of `string` values are equal and includes error message into revert string on failure."},"assertEq(uint256,uint256)":{"notice":"Asserts that two `uint256` values are equal."},"assertEq(uint256,uint256,string)":{"notice":"Asserts that two `uint256` values are equal and includes error message into revert string on failure."},"assertEq(uint256[],uint256[])":{"notice":"Asserts that two arrays of `uint256 values are equal."},"assertEq(uint256[],uint256[],string)":{"notice":"Asserts that two arrays of `uint256` values are equal and includes error message into revert string on failure."},"assertEqDecimal(int256,int256,uint256)":{"notice":"Asserts that two `int256` values are equal, formatting them with decimals in failure message."},"assertEqDecimal(int256,int256,uint256,string)":{"notice":"Asserts that two `int256` values are equal, formatting them with decimals in failure message. Includes error message into revert string on failure."},"assertEqDecimal(uint256,uint256,uint256)":{"notice":"Asserts that two `uint256` values are equal, formatting them with decimals in failure message."},"assertEqDecimal(uint256,uint256,uint256,string)":{"notice":"Asserts that two `uint256` values are equal, formatting them with decimals in failure message. Includes error message into revert string on failure."},"assertFalse(bool)":{"notice":"Asserts that the given condition is false."},"assertFalse(bool,string)":{"notice":"Asserts that the given condition is false and includes error message into revert string on failure."},"assertGe(int256,int256)":{"notice":"Compares two `int256` values. Expects first value to be greater than or equal to second."},"assertGe(int256,int256,string)":{"notice":"Compares two `int256` values. Expects first value to be greater than or equal to second. Includes error message into revert string on failure."},"assertGe(uint256,uint256)":{"notice":"Compares two `uint256` values. Expects first value to be greater than or equal to second."},"assertGe(uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects first value to be greater than or equal to second. Includes error message into revert string on failure."},"assertGeDecimal(int256,int256,uint256)":{"notice":"Compares two `int256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message."},"assertGeDecimal(int256,int256,uint256,string)":{"notice":"Compares two `int256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertGeDecimal(uint256,uint256,uint256)":{"notice":"Compares two `uint256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message."},"assertGeDecimal(uint256,uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertGt(int256,int256)":{"notice":"Compares two `int256` values. Expects first value to be greater than second."},"assertGt(int256,int256,string)":{"notice":"Compares two `int256` values. Expects first value to be greater than second. Includes error message into revert string on failure."},"assertGt(uint256,uint256)":{"notice":"Compares two `uint256` values. Expects first value to be greater than second."},"assertGt(uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects first value to be greater than second. Includes error message into revert string on failure."},"assertGtDecimal(int256,int256,uint256)":{"notice":"Compares two `int256` values. Expects first value to be greater than second. Formats values with decimals in failure message."},"assertGtDecimal(int256,int256,uint256,string)":{"notice":"Compares two `int256` values. Expects first value to be greater than second. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertGtDecimal(uint256,uint256,uint256)":{"notice":"Compares two `uint256` values. Expects first value to be greater than second. Formats values with decimals in failure message."},"assertGtDecimal(uint256,uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects first value to be greater than second. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertLe(int256,int256)":{"notice":"Compares two `int256` values. Expects first value to be less than or equal to second."},"assertLe(int256,int256,string)":{"notice":"Compares two `int256` values. Expects first value to be less than or equal to second. Includes error message into revert string on failure."},"assertLe(uint256,uint256)":{"notice":"Compares two `uint256` values. Expects first value to be less than or equal to second."},"assertLe(uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects first value to be less than or equal to second. Includes error message into revert string on failure."},"assertLeDecimal(int256,int256,uint256)":{"notice":"Compares two `int256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message."},"assertLeDecimal(int256,int256,uint256,string)":{"notice":"Compares two `int256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertLeDecimal(uint256,uint256,uint256)":{"notice":"Compares two `uint256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message."},"assertLeDecimal(uint256,uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertLt(int256,int256)":{"notice":"Compares two `int256` values. Expects first value to be less than second."},"assertLt(int256,int256,string)":{"notice":"Compares two `int256` values. Expects first value to be less than second. Includes error message into revert string on failure."},"assertLt(uint256,uint256)":{"notice":"Compares two `uint256` values. Expects first value to be less than second."},"assertLt(uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects first value to be less than second. Includes error message into revert string on failure."},"assertLtDecimal(int256,int256,uint256)":{"notice":"Compares two `int256` values. Expects first value to be less than second. Formats values with decimals in failure message."},"assertLtDecimal(int256,int256,uint256,string)":{"notice":"Compares two `int256` values. Expects first value to be less than second. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertLtDecimal(uint256,uint256,uint256)":{"notice":"Compares two `uint256` values. Expects first value to be less than second. Formats values with decimals in failure message."},"assertLtDecimal(uint256,uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects first value to be less than second. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertNotEq(address,address)":{"notice":"Asserts that two `address` values are not equal."},"assertNotEq(address,address,string)":{"notice":"Asserts that two `address` values are not equal and includes error message into revert string on failure."},"assertNotEq(address[],address[])":{"notice":"Asserts that two arrays of `address` values are not equal."},"assertNotEq(address[],address[],string)":{"notice":"Asserts that two arrays of `address` values are not equal and includes error message into revert string on failure."},"assertNotEq(bool,bool)":{"notice":"Asserts that two `bool` values are not equal."},"assertNotEq(bool,bool,string)":{"notice":"Asserts that two `bool` values are not equal and includes error message into revert string on failure."},"assertNotEq(bool[],bool[])":{"notice":"Asserts that two arrays of `bool` values are not equal."},"assertNotEq(bool[],bool[],string)":{"notice":"Asserts that two arrays of `bool` values are not equal and includes error message into revert string on failure."},"assertNotEq(bytes,bytes)":{"notice":"Asserts that two `bytes` values are not equal."},"assertNotEq(bytes,bytes,string)":{"notice":"Asserts that two `bytes` values are not equal and includes error message into revert string on failure."},"assertNotEq(bytes32,bytes32)":{"notice":"Asserts that two `bytes32` values are not equal."},"assertNotEq(bytes32,bytes32,string)":{"notice":"Asserts that two `bytes32` values are not equal and includes error message into revert string on failure."},"assertNotEq(bytes32[],bytes32[])":{"notice":"Asserts that two arrays of `bytes32` values are not equal."},"assertNotEq(bytes32[],bytes32[],string)":{"notice":"Asserts that two arrays of `bytes32` values are not equal and includes error message into revert string on failure."},"assertNotEq(bytes[],bytes[])":{"notice":"Asserts that two arrays of `bytes` values are not equal."},"assertNotEq(bytes[],bytes[],string)":{"notice":"Asserts that two arrays of `bytes` values are not equal and includes error message into revert string on failure."},"assertNotEq(int256,int256)":{"notice":"Asserts that two `int256` values are not equal."},"assertNotEq(int256,int256,string)":{"notice":"Asserts that two `int256` values are not equal and includes error message into revert string on failure."},"assertNotEq(int256[],int256[])":{"notice":"Asserts that two arrays of `int256` values are not equal."},"assertNotEq(int256[],int256[],string)":{"notice":"Asserts that two arrays of `int256` values are not equal and includes error message into revert string on failure."},"assertNotEq(string,string)":{"notice":"Asserts that two `string` values are not equal."},"assertNotEq(string,string,string)":{"notice":"Asserts that two `string` values are not equal and includes error message into revert string on failure."},"assertNotEq(string[],string[])":{"notice":"Asserts that two arrays of `string` values are not equal."},"assertNotEq(string[],string[],string)":{"notice":"Asserts that two arrays of `string` values are not equal and includes error message into revert string on failure."},"assertNotEq(uint256,uint256)":{"notice":"Asserts that two `uint256` values are not equal."},"assertNotEq(uint256,uint256,string)":{"notice":"Asserts that two `uint256` values are not equal and includes error message into revert string on failure."},"assertNotEq(uint256[],uint256[])":{"notice":"Asserts that two arrays of `uint256` values are not equal."},"assertNotEq(uint256[],uint256[],string)":{"notice":"Asserts that two arrays of `uint256` values are not equal and includes error message into revert string on failure."},"assertNotEqDecimal(int256,int256,uint256)":{"notice":"Asserts that two `int256` values are not equal, formatting them with decimals in failure message."},"assertNotEqDecimal(int256,int256,uint256,string)":{"notice":"Asserts that two `int256` values are not equal, formatting them with decimals in failure message. Includes error message into revert string on failure."},"assertNotEqDecimal(uint256,uint256,uint256)":{"notice":"Asserts that two `uint256` values are not equal, formatting them with decimals in failure message."},"assertNotEqDecimal(uint256,uint256,uint256,string)":{"notice":"Asserts that two `uint256` values are not equal, formatting them with decimals in failure message. Includes error message into revert string on failure."},"assertTrue(bool)":{"notice":"Asserts that the given condition is true."},"assertTrue(bool,string)":{"notice":"Asserts that the given condition is true and includes error message into revert string on failure."},"assume(bool)":{"notice":"If the condition is false, discard this run's fuzz inputs and generate new ones."},"blobBaseFee(uint256)":{"notice":"Sets `block.blobbasefee`"},"blobhashes(bytes32[])":{"notice":"Sets the blobhashes in the transaction. Not available on EVM versions before Cancun. If used on unsupported EVM versions it will revert."},"breakpoint(string)":{"notice":"Writes a breakpoint to jump to in the debugger."},"breakpoint(string,bool)":{"notice":"Writes a conditional breakpoint to jump to in the debugger."},"broadcast()":{"notice":"Has the next call (at this call depth only) create transactions that can later be signed and sent onchain. Broadcasting address is determined by checking the following in order: 1. If `--sender` argument was provided, that address is used. 2. If exactly one signer (e.g. private key, hw wallet, keystore) is set when `forge broadcast` is invoked, that signer is used. 3. Otherwise, default foundry sender (1804c8AB1F12E6bbf3894d4083f33e07309d1f38) is used."},"broadcast(address)":{"notice":"Has the next call (at this call depth only) create a transaction with the address provided as the sender that can later be signed and sent onchain."},"broadcast(uint256)":{"notice":"Has the next call (at this call depth only) create a transaction with the private key provided as the sender that can later be signed and sent onchain."},"broadcastRawTransaction(bytes)":{"notice":"Takes a signed transaction and broadcasts it to the network."},"chainId(uint256)":{"notice":"Sets `block.chainid`."},"clearMockedCalls()":{"notice":"Clears all mocked calls."},"closeFile(string)":{"notice":"Closes file for reading, resetting the offset and allowing to read it from beginning with readLine. `path` is relative to the project root."},"coinbase(address)":{"notice":"Sets `block.coinbase`."},"computeCreate2Address(bytes32,bytes32)":{"notice":"Compute the address of a contract created with CREATE2 using the default CREATE2 deployer."},"computeCreate2Address(bytes32,bytes32,address)":{"notice":"Compute the address of a contract created with CREATE2 using the given CREATE2 deployer."},"computeCreateAddress(address,uint256)":{"notice":"Compute the address a contract will be deployed at for a given deployer address and nonce."},"copyFile(string,string)":{"notice":"Copies the contents of one file to another. This function will **overwrite** the contents of `to`. On success, the total number of bytes copied is returned and it is equal to the length of the `to` file as reported by `metadata`. Both `from` and `to` are relative to the project root."},"createDir(string,bool)":{"notice":"Creates a new, empty directory at the provided path. This cheatcode will revert in the following situations, but is not limited to just these cases: - User lacks permissions to modify `path`. - A parent of the given path doesn't exist and `recursive` is false. - `path` already exists and `recursive` is false. `path` is relative to the project root."},"createFork(string)":{"notice":"Creates a new fork with the given endpoint and the _latest_ block and returns the identifier of the fork."},"createFork(string,bytes32)":{"notice":"Creates a new fork with the given endpoint and at the block the given transaction was mined in, replays all transaction mined in the block before the transaction, and returns the identifier of the fork."},"createFork(string,uint256)":{"notice":"Creates a new fork with the given endpoint and block and returns the identifier of the fork."},"createSelectFork(string)":{"notice":"Creates and also selects a new fork with the given endpoint and the latest block and returns the identifier of the fork."},"createSelectFork(string,bytes32)":{"notice":"Creates and also selects new fork with the given endpoint and at the block the given transaction was mined in, replays all transaction mined in the block before the transaction, returns the identifier of the fork."},"createSelectFork(string,uint256)":{"notice":"Creates and also selects a new fork with the given endpoint and block and returns the identifier of the fork."},"createWallet(string)":{"notice":"Derives a private key from the name, labels the account with that name, and returns the wallet."},"createWallet(uint256)":{"notice":"Generates a wallet from the private key and returns the wallet."},"createWallet(uint256,string)":{"notice":"Generates a wallet from the private key, labels the account with that name, and returns the wallet."},"deal(address,uint256)":{"notice":"Sets an address' balance."},"deleteSnapshot(uint256)":{"notice":"Removes the snapshot with the given ID created by `snapshot`. Takes the snapshot ID to delete. Returns `true` if the snapshot was successfully deleted. Returns `false` if the snapshot does not exist."},"deleteSnapshots()":{"notice":"Removes _all_ snapshots previously created by `snapshot`."},"deployCode(string)":{"notice":"Deploys a contract from an artifact file. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional."},"deployCode(string,bytes)":{"notice":"Deploys a contract from an artifact file. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional. Additionaly accepts abi-encoded constructor arguments."},"deriveKey(string,string,uint32)":{"notice":"Derive a private key from a provided mnenomic string (or mnenomic file path) at `{derivationPath}{index}`."},"deriveKey(string,string,uint32,string)":{"notice":"Derive a private key from a provided mnenomic string (or mnenomic file path) in the specified language at `{derivationPath}{index}`."},"deriveKey(string,uint32)":{"notice":"Derive a private key from a provided mnenomic string (or mnenomic file path) at the derivation path `m/44'/60'/0'/0/{index}`."},"deriveKey(string,uint32,string)":{"notice":"Derive a private key from a provided mnenomic string (or mnenomic file path) in the specified language at the derivation path `m/44'/60'/0'/0/{index}`."},"difficulty(uint256)":{"notice":"Sets `block.difficulty`. Not available on EVM versions from Paris onwards. Use `prevrandao` instead. Reverts if used on unsupported EVM versions."},"dumpState(string)":{"notice":"Dump a genesis JSON file's `allocs` to disk."},"ensNamehash(string)":{"notice":"Returns ENS namehash for provided string."},"envAddress(string)":{"notice":"Gets the environment variable `name` and parses it as `address`. Reverts if the variable was not found or could not be parsed."},"envAddress(string,string)":{"notice":"Gets the environment variable `name` and parses it as an array of `address`, delimited by `delim`. Reverts if the variable was not found or could not be parsed."},"envBool(string)":{"notice":"Gets the environment variable `name` and parses it as `bool`. Reverts if the variable was not found or could not be parsed."},"envBool(string,string)":{"notice":"Gets the environment variable `name` and parses it as an array of `bool`, delimited by `delim`. Reverts if the variable was not found or could not be parsed."},"envBytes(string)":{"notice":"Gets the environment variable `name` and parses it as `bytes`. Reverts if the variable was not found or could not be parsed."},"envBytes(string,string)":{"notice":"Gets the environment variable `name` and parses it as an array of `bytes`, delimited by `delim`. Reverts if the variable was not found or could not be parsed."},"envBytes32(string)":{"notice":"Gets the environment variable `name` and parses it as `bytes32`. Reverts if the variable was not found or could not be parsed."},"envBytes32(string,string)":{"notice":"Gets the environment variable `name` and parses it as an array of `bytes32`, delimited by `delim`. Reverts if the variable was not found or could not be parsed."},"envExists(string)":{"notice":"Gets the environment variable `name` and returns true if it exists, else returns false."},"envInt(string)":{"notice":"Gets the environment variable `name` and parses it as `int256`. Reverts if the variable was not found or could not be parsed."},"envInt(string,string)":{"notice":"Gets the environment variable `name` and parses it as an array of `int256`, delimited by `delim`. Reverts if the variable was not found or could not be parsed."},"envOr(string,address)":{"notice":"Gets the environment variable `name` and parses it as `address`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,bool)":{"notice":"Gets the environment variable `name` and parses it as `bool`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,bytes)":{"notice":"Gets the environment variable `name` and parses it as `bytes`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,bytes32)":{"notice":"Gets the environment variable `name` and parses it as `bytes32`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,int256)":{"notice":"Gets the environment variable `name` and parses it as `int256`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,string)":{"notice":"Gets the environment variable `name` and parses it as `string`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,string,address[])":{"notice":"Gets the environment variable `name` and parses it as an array of `address`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,string,bool[])":{"notice":"Gets the environment variable `name` and parses it as an array of `bool`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,string,bytes32[])":{"notice":"Gets the environment variable `name` and parses it as an array of `bytes32`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,string,bytes[])":{"notice":"Gets the environment variable `name` and parses it as an array of `bytes`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,string,int256[])":{"notice":"Gets the environment variable `name` and parses it as an array of `int256`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,string,string[])":{"notice":"Gets the environment variable `name` and parses it as an array of `string`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,string,uint256[])":{"notice":"Gets the environment variable `name` and parses it as an array of `uint256`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,uint256)":{"notice":"Gets the environment variable `name` and parses it as `uint256`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envString(string)":{"notice":"Gets the environment variable `name` and parses it as `string`. Reverts if the variable was not found or could not be parsed."},"envString(string,string)":{"notice":"Gets the environment variable `name` and parses it as an array of `string`, delimited by `delim`. Reverts if the variable was not found or could not be parsed."},"envUint(string)":{"notice":"Gets the environment variable `name` and parses it as `uint256`. Reverts if the variable was not found or could not be parsed."},"envUint(string,string)":{"notice":"Gets the environment variable `name` and parses it as an array of `uint256`, delimited by `delim`. Reverts if the variable was not found or could not be parsed."},"etch(address,bytes)":{"notice":"Sets an address' code."},"eth_getLogs(uint256,uint256,address,bytes32[])":{"notice":"Gets all the logs according to specified filter."},"exists(string)":{"notice":"Returns true if the given path points to an existing entity, else returns false."},"expectCall(address,bytes)":{"notice":"Expects a call to an address with the specified calldata. Calldata can either be a strict or a partial match."},"expectCall(address,bytes,uint64)":{"notice":"Expects given number of calls to an address with the specified calldata."},"expectCall(address,uint256,bytes)":{"notice":"Expects a call to an address with the specified `msg.value` and calldata."},"expectCall(address,uint256,bytes,uint64)":{"notice":"Expects given number of calls to an address with the specified `msg.value` and calldata."},"expectCall(address,uint256,uint64,bytes)":{"notice":"Expect a call to an address with the specified `msg.value`, gas, and calldata."},"expectCall(address,uint256,uint64,bytes,uint64)":{"notice":"Expects given number of calls to an address with the specified `msg.value`, gas, and calldata."},"expectCallMinGas(address,uint256,uint64,bytes)":{"notice":"Expect a call to an address with the specified `msg.value` and calldata, and a *minimum* amount of gas."},"expectCallMinGas(address,uint256,uint64,bytes,uint64)":{"notice":"Expect given number of calls to an address with the specified `msg.value` and calldata, and a *minimum* amount of gas."},"expectEmit()":{"notice":"Prepare an expected log with all topic and data checks enabled. Call this function, then emit an event, then call a function. Internally after the call, we check if logs were emitted in the expected order with the expected topics and data."},"expectEmit(address)":{"notice":"Same as the previous method, but also checks supplied address against emitting contract."},"expectEmit(bool,bool,bool,bool)":{"notice":"Prepare an expected log with (bool checkTopic1, bool checkTopic2, bool checkTopic3, bool checkData.). Call this function, then emit an event, then call a function. Internally after the call, we check if logs were emitted in the expected order with the expected topics and data (as specified by the booleans)."},"expectEmit(bool,bool,bool,bool,address)":{"notice":"Same as the previous method, but also checks supplied address against emitting contract."},"expectEmitAnonymous()":{"notice":"Prepare an expected anonymous log with all topic and data checks enabled. Call this function, then emit an anonymous event, then call a function. Internally after the call, we check if logs were emitted in the expected order with the expected topics and data."},"expectEmitAnonymous(address)":{"notice":"Same as the previous method, but also checks supplied address against emitting contract."},"expectEmitAnonymous(bool,bool,bool,bool,bool)":{"notice":"Prepare an expected anonymous log with (bool checkTopic1, bool checkTopic2, bool checkTopic3, bool checkData.). Call this function, then emit an anonymous event, then call a function. Internally after the call, we check if logs were emitted in the expected order with the expected topics and data (as specified by the booleans)."},"expectEmitAnonymous(bool,bool,bool,bool,bool,address)":{"notice":"Same as the previous method, but also checks supplied address against emitting contract."},"expectRevert()":{"notice":"Expects an error on next call with any revert data."},"expectRevert(bytes)":{"notice":"Expects an error on next call that exactly matches the revert data."},"expectRevert(bytes4)":{"notice":"Expects an error on next call that starts with the revert data."},"expectSafeMemory(uint64,uint64)":{"notice":"Only allows memory writes to offsets [0x00, 0x60) ∪ [min, max) in the current subcontext. If any other memory is written to, the test will fail. Can be called multiple times to add more ranges to the set."},"expectSafeMemoryCall(uint64,uint64)":{"notice":"Only allows memory writes to offsets [0x00, 0x60) ∪ [min, max) in the next created subcontext. If any other memory is written to, the test will fail. Can be called multiple times to add more ranges to the set."},"fee(uint256)":{"notice":"Sets `block.basefee`."},"ffi(string[])":{"notice":"Performs a foreign function call via the terminal."},"fsMetadata(string)":{"notice":"Given a path, query the file system to get information about a file, directory, etc."},"getBlobBaseFee()":{"notice":"Gets the current `block.blobbasefee`. You should use this instead of `block.blobbasefee` if you use `vm.blobBaseFee`, as `block.blobbasefee` is assumed to be constant across a transaction, and as a result will get optimized out by the compiler. See https://github.com/foundry-rs/foundry/issues/6180"},"getBlobhashes()":{"notice":"Gets the blockhashes from the current transaction. Not available on EVM versions before Cancun. If used on unsupported EVM versions it will revert."},"getBlockNumber()":{"notice":"Gets the current `block.number`. You should use this instead of `block.number` if you use `vm.roll`, as `block.number` is assumed to be constant across a transaction, and as a result will get optimized out by the compiler. See https://github.com/foundry-rs/foundry/issues/6180"},"getBlockTimestamp()":{"notice":"Gets the current `block.timestamp`. You should use this instead of `block.timestamp` if you use `vm.warp`, as `block.timestamp` is assumed to be constant across a transaction, and as a result will get optimized out by the compiler. See https://github.com/foundry-rs/foundry/issues/6180"},"getCode(string)":{"notice":"Gets the creation bytecode from an artifact file. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional."},"getDeployedCode(string)":{"notice":"Gets the deployed bytecode from an artifact file. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional."},"getFoundryVersion()":{"notice":"Returns the Foundry version. Format: <cargo_version>+<git_sha>+<build_timestamp> Sample output: 0.2.0+faa94c384+202407110019 Note: Build timestamps may vary slightly across platforms due to separate CI jobs. For reliable version comparisons, use YYYYMMDD0000 format (e.g., >= 202407110000) to compare timestamps while ignoring minor time differences."},"getLabel(address)":{"notice":"Gets the label for the specified address."},"getMappingKeyAndParentOf(address,bytes32)":{"notice":"Gets the map key and parent of a mapping at a given slot, for a given address."},"getMappingLength(address,bytes32)":{"notice":"Gets the number of elements in the mapping at the given slot, for a given address."},"getMappingSlotAt(address,bytes32,uint256)":{"notice":"Gets the elements at index idx of the mapping at the given slot, for a given address. The index must be less than the length of the mapping (i.e. the number of keys in the mapping)."},"getNonce((address,uint256,uint256,uint256))":{"notice":"Get the nonce of a `Wallet`."},"getNonce(address)":{"notice":"Gets the nonce of an account."},"getRecordedLogs()":{"notice":"Gets all the recorded logs."},"indexOf(string,string)":{"notice":"Returns the index of the first occurrence of a `key` in an `input` string. Returns `NOT_FOUND` (i.e. `type(uint256).max`) if the `key` is not found. Returns 0 in case of an empty `key`."},"isContext(uint8)":{"notice":"Returns true if `forge` command was executed in given context."},"isDir(string)":{"notice":"Returns true if the path exists on disk and is pointing at a directory, else returns false."},"isFile(string)":{"notice":"Returns true if the path exists on disk and is pointing at a regular file, else returns false."},"isPersistent(address)":{"notice":"Returns true if the account is marked as persistent."},"keyExists(string,string)":{"notice":"Checks if `key` exists in a JSON object `keyExists` is being deprecated in favor of `keyExistsJson`. It will be removed in future versions."},"keyExistsJson(string,string)":{"notice":"Checks if `key` exists in a JSON object."},"keyExistsToml(string,string)":{"notice":"Checks if `key` exists in a TOML table."},"label(address,string)":{"notice":"Labels an address in call traces."},"lastCallGas()":{"notice":"Gets the gas used in the last call."},"load(address,bytes32)":{"notice":"Loads a storage slot from an address."},"loadAllocs(string)":{"notice":"Load a genesis JSON file's `allocs` into the in-memory revm state."},"makePersistent(address)":{"notice":"Marks that the account(s) should use persistent storage across fork swaps in a multifork setup Meaning, changes made to the state of this account will be kept when switching forks."},"makePersistent(address,address)":{"notice":"See `makePersistent(address)`."},"makePersistent(address,address,address)":{"notice":"See `makePersistent(address)`."},"makePersistent(address[])":{"notice":"See `makePersistent(address)`."},"mockCall(address,bytes,bytes)":{"notice":"Mocks a call to an address, returning specified data. Calldata can either be strict or a partial match, e.g. if you only pass a Solidity selector to the expected calldata, then the entire Solidity function will be mocked."},"mockCall(address,uint256,bytes,bytes)":{"notice":"Mocks a call to an address with a specific `msg.value`, returning specified data. Calldata match takes precedence over `msg.value` in case of ambiguity."},"mockCallRevert(address,bytes,bytes)":{"notice":"Reverts a call to an address with specified revert data."},"mockCallRevert(address,uint256,bytes,bytes)":{"notice":"Reverts a call to an address with a specific `msg.value`, with specified revert data."},"parseAddress(string)":{"notice":"Parses the given `string` into an `address`."},"parseBool(string)":{"notice":"Parses the given `string` into a `bool`."},"parseBytes(string)":{"notice":"Parses the given `string` into `bytes`."},"parseBytes32(string)":{"notice":"Parses the given `string` into a `bytes32`."},"parseInt(string)":{"notice":"Parses the given `string` into a `int256`."},"parseJson(string)":{"notice":"ABI-encodes a JSON object."},"parseJson(string,string)":{"notice":"ABI-encodes a JSON object at `key`."},"parseJsonAddress(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `address`."},"parseJsonAddressArray(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `address[]`."},"parseJsonBool(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `bool`."},"parseJsonBoolArray(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `bool[]`."},"parseJsonBytes(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `bytes`."},"parseJsonBytes32(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `bytes32`."},"parseJsonBytes32Array(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `bytes32[]`."},"parseJsonBytesArray(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `bytes[]`."},"parseJsonInt(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `int256`."},"parseJsonIntArray(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `int256[]`."},"parseJsonKeys(string,string)":{"notice":"Returns an array of all the keys in a JSON object."},"parseJsonString(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `string`."},"parseJsonStringArray(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `string[]`."},"parseJsonType(string,string)":{"notice":"Parses a string of JSON data and coerces it to type corresponding to `typeDescription`."},"parseJsonType(string,string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to type corresponding to `typeDescription`."},"parseJsonTypeArray(string,string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to type array corresponding to `typeDescription`."},"parseJsonUint(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `uint256`."},"parseJsonUintArray(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `uint256[]`."},"parseToml(string)":{"notice":"ABI-encodes a TOML table."},"parseToml(string,string)":{"notice":"ABI-encodes a TOML table at `key`."},"parseTomlAddress(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `address`."},"parseTomlAddressArray(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `address[]`."},"parseTomlBool(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `bool`."},"parseTomlBoolArray(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `bool[]`."},"parseTomlBytes(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `bytes`."},"parseTomlBytes32(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `bytes32`."},"parseTomlBytes32Array(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `bytes32[]`."},"parseTomlBytesArray(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `bytes[]`."},"parseTomlInt(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `int256`."},"parseTomlIntArray(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `int256[]`."},"parseTomlKeys(string,string)":{"notice":"Returns an array of all the keys in a TOML table."},"parseTomlString(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `string`."},"parseTomlStringArray(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `string[]`."},"parseTomlUint(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `uint256`."},"parseTomlUintArray(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `uint256[]`."},"parseUint(string)":{"notice":"Parses the given `string` into a `uint256`."},"pauseGasMetering()":{"notice":"Pauses gas metering (i.e. gas usage is not counted). Noop if already paused."},"prank(address)":{"notice":"Sets the *next* call's `msg.sender` to be the input address."},"prank(address,address)":{"notice":"Sets the *next* call's `msg.sender` to be the input address, and the `tx.origin` to be the second input."},"prevrandao(bytes32)":{"notice":"Sets `block.prevrandao`. Not available on EVM versions before Paris. Use `difficulty` instead. If used on unsupported EVM versions it will revert."},"prevrandao(uint256)":{"notice":"Sets `block.prevrandao`. Not available on EVM versions before Paris. Use `difficulty` instead. If used on unsupported EVM versions it will revert."},"projectRoot()":{"notice":"Get the path of the current project root."},"prompt(string)":{"notice":"Prompts the user for a string value in the terminal."},"promptAddress(string)":{"notice":"Prompts the user for an address in the terminal."},"promptSecret(string)":{"notice":"Prompts the user for a hidden string value in the terminal."},"promptSecretUint(string)":{"notice":"Prompts the user for hidden uint256 in the terminal (usually pk)."},"promptUint(string)":{"notice":"Prompts the user for uint256 in the terminal."},"randomAddress()":{"notice":"Returns a random `address`."},"randomUint()":{"notice":"Returns a random uint256 value."},"randomUint(uint256,uint256)":{"notice":"Returns random uin256 value between the provided range (=min..=max)."},"readCallers()":{"notice":"Reads the current `msg.sender` and `tx.origin` from state and reports if there is any active caller modification."},"readDir(string)":{"notice":"Reads the directory at the given path recursively, up to `maxDepth`. `maxDepth` defaults to 1, meaning only the direct children of the given directory will be returned. Follows symbolic links if `followLinks` is true."},"readDir(string,uint64)":{"notice":"See `readDir(string)`."},"readDir(string,uint64,bool)":{"notice":"See `readDir(string)`."},"readFile(string)":{"notice":"Reads the entire content of file to string. `path` is relative to the project root."},"readFileBinary(string)":{"notice":"Reads the entire content of file as binary. `path` is relative to the project root."},"readLine(string)":{"notice":"Reads next line of file to string."},"readLink(string)":{"notice":"Reads a symbolic link, returning the path that the link points to. This cheatcode will revert in the following situations, but is not limited to just these cases: - `path` is not a symbolic link. - `path` does not exist."},"record()":{"notice":"Records all storage reads and writes."},"recordLogs()":{"notice":"Record all the transaction logs."},"rememberKey(uint256)":{"notice":"Adds a private key to the local forge wallet and returns the address."},"removeDir(string,bool)":{"notice":"Removes a directory at the provided path. This cheatcode will revert in the following situations, but is not limited to just these cases: - `path` doesn't exist. - `path` isn't a directory. - User lacks permissions to modify `path`. - The directory is not empty and `recursive` is false. `path` is relative to the project root."},"removeFile(string)":{"notice":"Removes a file from the filesystem. This cheatcode will revert in the following situations, but is not limited to just these cases: - `path` points to a directory. - The file doesn't exist. - The user lacks permissions to remove the file. `path` is relative to the project root."},"replace(string,string,string)":{"notice":"Replaces occurrences of `from` in the given `string` with `to`."},"resetNonce(address)":{"notice":"Resets the nonce of an account to 0 for EOAs and 1 for contract accounts."},"resumeGasMetering()":{"notice":"Resumes gas metering (i.e. gas usage is counted again). Noop if already on."},"revertTo(uint256)":{"notice":"Revert the state of the EVM to a previous snapshot Takes the snapshot ID to revert to. Returns `true` if the snapshot was successfully reverted. Returns `false` if the snapshot does not exist. **Note:** This does not automatically delete the snapshot. To delete the snapshot use `deleteSnapshot`."},"revertToAndDelete(uint256)":{"notice":"Revert the state of the EVM to a previous snapshot and automatically deletes the snapshots Takes the snapshot ID to revert to. Returns `true` if the snapshot was successfully reverted and deleted. Returns `false` if the snapshot does not exist."},"revokePersistent(address)":{"notice":"Revokes persistent status from the address, previously added via `makePersistent`."},"revokePersistent(address[])":{"notice":"See `revokePersistent(address)`."},"roll(uint256)":{"notice":"Sets `block.height`."},"rollFork(bytes32)":{"notice":"Updates the currently active fork to given transaction. This will `rollFork` with the number of the block the transaction was mined in and replays all transaction mined before it in the block."},"rollFork(uint256)":{"notice":"Updates the currently active fork to given block number This is similar to `roll` but for the currently active fork."},"rollFork(uint256,bytes32)":{"notice":"Updates the given fork to block number of the given transaction and replays all transaction mined before it in the block."},"rollFork(uint256,uint256)":{"notice":"Updates the given fork to given block number."},"rpc(string,string)":{"notice":"Performs an Ethereum JSON-RPC request to the current fork URL."},"rpc(string,string,string)":{"notice":"Performs an Ethereum JSON-RPC request to the given endpoint."},"rpcUrl(string)":{"notice":"Returns the RPC url for the given alias."},"rpcUrlStructs()":{"notice":"Returns all rpc urls and their aliases as structs."},"rpcUrls()":{"notice":"Returns all rpc urls and their aliases `[alias, url][]`."},"selectFork(uint256)":{"notice":"Takes a fork identifier created by `createFork` and sets the corresponding forked state as active."},"serializeAddress(string,string,address)":{"notice":"See `serializeJson`."},"serializeAddress(string,string,address[])":{"notice":"See `serializeJson`."},"serializeBool(string,string,bool)":{"notice":"See `serializeJson`."},"serializeBool(string,string,bool[])":{"notice":"See `serializeJson`."},"serializeBytes(string,string,bytes)":{"notice":"See `serializeJson`."},"serializeBytes(string,string,bytes[])":{"notice":"See `serializeJson`."},"serializeBytes32(string,string,bytes32)":{"notice":"See `serializeJson`."},"serializeBytes32(string,string,bytes32[])":{"notice":"See `serializeJson`."},"serializeInt(string,string,int256)":{"notice":"See `serializeJson`."},"serializeInt(string,string,int256[])":{"notice":"See `serializeJson`."},"serializeJson(string,string)":{"notice":"Serializes a key and value to a JSON object stored in-memory that can be later written to a file. Returns the stringified version of the specific JSON file up to that moment."},"serializeJsonType(string,bytes)":{"notice":"See `serializeJson`."},"serializeJsonType(string,string,string,bytes)":{"notice":"See `serializeJson`."},"serializeString(string,string,string)":{"notice":"See `serializeJson`."},"serializeString(string,string,string[])":{"notice":"See `serializeJson`."},"serializeUint(string,string,uint256)":{"notice":"See `serializeJson`."},"serializeUint(string,string,uint256[])":{"notice":"See `serializeJson`."},"serializeUintToHex(string,string,uint256)":{"notice":"See `serializeJson`."},"setBlockhash(uint256,bytes32)":{"notice":"Set blockhash for the current block. It only sets the blockhash for blocks where `block.number - 256 <= number < block.number`."},"setEnv(string,string)":{"notice":"Sets environment variables."},"setNonce(address,uint64)":{"notice":"Sets the nonce of an account. Must be higher than the current nonce of the account."},"setNonceUnsafe(address,uint64)":{"notice":"Sets the nonce of an account to an arbitrary value."},"sign((address,uint256,uint256,uint256),bytes32)":{"notice":"Signs data with a `Wallet`."},"sign(address,bytes32)":{"notice":"Signs `digest` with signer provided to script using the secp256k1 curve. Raises error if none of the signers passed into the script have provided address."},"sign(bytes32)":{"notice":"Signs `digest` with signer provided to script using the secp256k1 curve. If `--sender` is provided, the signer with provided address is used, otherwise, if exactly one signer is provided to the script, that signer is used. Raises error if signer passed through `--sender` does not match any unlocked signers or if `--sender` is not provided and not exactly one signer is passed to the script."},"sign(uint256,bytes32)":{"notice":"Signs `digest` with `privateKey` using the secp256k1 curve."},"signCompact((address,uint256,uint256,uint256),bytes32)":{"notice":"Signs data with a `Wallet`. Returns a compact signature (`r`, `vs`) as per EIP-2098, where `vs` encodes both the signature's `s` value, and the recovery id `v` in a single bytes32. This format reduces the signature size from 65 to 64 bytes."},"signCompact(address,bytes32)":{"notice":"Signs `digest` with signer provided to script using the secp256k1 curve. Returns a compact signature (`r`, `vs`) as per EIP-2098, where `vs` encodes both the signature's `s` value, and the recovery id `v` in a single bytes32. This format reduces the signature size from 65 to 64 bytes. Raises error if none of the signers passed into the script have provided address."},"signCompact(bytes32)":{"notice":"Signs `digest` with signer provided to script using the secp256k1 curve. Returns a compact signature (`r`, `vs`) as per EIP-2098, where `vs` encodes both the signature's `s` value, and the recovery id `v` in a single bytes32. This format reduces the signature size from 65 to 64 bytes. If `--sender` is provided, the signer with provided address is used, otherwise, if exactly one signer is provided to the script, that signer is used. Raises error if signer passed through `--sender` does not match any unlocked signers or if `--sender` is not provided and not exactly one signer is passed to the script."},"signCompact(uint256,bytes32)":{"notice":"Signs `digest` with `privateKey` using the secp256k1 curve. Returns a compact signature (`r`, `vs`) as per EIP-2098, where `vs` encodes both the signature's `s` value, and the recovery id `v` in a single bytes32. This format reduces the signature size from 65 to 64 bytes."},"signP256(uint256,bytes32)":{"notice":"Signs `digest` with `privateKey` using the secp256r1 curve."},"skip(bool)":{"notice":"Marks a test as skipped. Must be called at the top of the test."},"sleep(uint256)":{"notice":"Suspends execution of the main thread for `duration` milliseconds."},"snapshot()":{"notice":"Snapshot the current state of the evm. Returns the ID of the snapshot that was created. To revert a snapshot use `revertTo`."},"split(string,string)":{"notice":"Splits the given `string` into an array of strings divided by the `delimiter`."},"startBroadcast()":{"notice":"Has all subsequent calls (at this call depth only) create transactions that can later be signed and sent onchain. Broadcasting address is determined by checking the following in order: 1. If `--sender` argument was provided, that address is used. 2. If exactly one signer (e.g. private key, hw wallet, keystore) is set when `forge broadcast` is invoked, that signer is used. 3. Otherwise, default foundry sender (1804c8AB1F12E6bbf3894d4083f33e07309d1f38) is used."},"startBroadcast(address)":{"notice":"Has all subsequent calls (at this call depth only) create transactions with the address provided that can later be signed and sent onchain."},"startBroadcast(uint256)":{"notice":"Has all subsequent calls (at this call depth only) create transactions with the private key provided that can later be signed and sent onchain."},"startMappingRecording()":{"notice":"Starts recording all map SSTOREs for later retrieval."},"startPrank(address)":{"notice":"Sets all subsequent calls' `msg.sender` to be the input address until `stopPrank` is called."},"startPrank(address,address)":{"notice":"Sets all subsequent calls' `msg.sender` to be the input address until `stopPrank` is called, and the `tx.origin` to be the second input."},"startStateDiffRecording()":{"notice":"Record all account accesses as part of CREATE, CALL or SELFDESTRUCT opcodes in order, along with the context of the calls"},"stopAndReturnStateDiff()":{"notice":"Returns an ordered array of all account accesses from a `vm.startStateDiffRecording` session."},"stopBroadcast()":{"notice":"Stops collecting onchain transactions."},"stopExpectSafeMemory()":{"notice":"Stops all safe memory expectation in the current subcontext."},"stopMappingRecording()":{"notice":"Stops recording all map SSTOREs for later retrieval and clears the recorded data."},"stopPrank()":{"notice":"Resets subsequent calls' `msg.sender` to be `address(this)`."},"store(address,bytes32,bytes32)":{"notice":"Stores a value to an address' storage slot."},"toBase64(bytes)":{"notice":"Encodes a `bytes` value to a base64 string."},"toBase64(string)":{"notice":"Encodes a `string` value to a base64 string."},"toBase64URL(bytes)":{"notice":"Encodes a `bytes` value to a base64url string."},"toBase64URL(string)":{"notice":"Encodes a `string` value to a base64url string."},"toLowercase(string)":{"notice":"Converts the given `string` value to Lowercase."},"toString(address)":{"notice":"Converts the given value to a `string`."},"toString(bool)":{"notice":"Converts the given value to a `string`."},"toString(bytes)":{"notice":"Converts the given value to a `string`."},"toString(bytes32)":{"notice":"Converts the given value to a `string`."},"toString(int256)":{"notice":"Converts the given value to a `string`."},"toString(uint256)":{"notice":"Converts the given value to a `string`."},"toUppercase(string)":{"notice":"Converts the given `string` value to Uppercase."},"transact(bytes32)":{"notice":"Fetches the given transaction from the active fork and executes it on the current state."},"transact(uint256,bytes32)":{"notice":"Fetches the given transaction from the given fork and executes it on the current state."},"trim(string)":{"notice":"Trims leading and trailing whitespace from the given `string` value."},"tryFfi(string[])":{"notice":"Performs a foreign function call via terminal and returns the exit code, stdout, and stderr."},"txGasPrice(uint256)":{"notice":"Sets `tx.gasprice`."},"unixTime()":{"notice":"Returns the time since unix epoch in milliseconds."},"warp(uint256)":{"notice":"Sets `block.timestamp`."},"writeFile(string,string)":{"notice":"Writes data to file, creating a file if it does not exist, and entirely replacing its contents if it does. `path` is relative to the project root."},"writeFileBinary(string,bytes)":{"notice":"Writes binary data to a file, creating a file if it does not exist, and entirely replacing its contents if it does. `path` is relative to the project root."},"writeJson(string,string)":{"notice":"Write a serialized JSON object to a file. If the file exists, it will be overwritten."},"writeJson(string,string,string)":{"notice":"Write a serialized JSON object to an **existing** JSON file, replacing a value with key = <value_key.> This is useful to replace a specific value of a JSON file, without having to parse the entire thing."},"writeLine(string,string)":{"notice":"Writes line to file, creating a file if it does not exist. `path` is relative to the project root."},"writeToml(string,string)":{"notice":"Takes serialized JSON, converts to TOML and write a serialized TOML to a file."},"writeToml(string,string,string)":{"notice":"Takes serialized JSON, converts to TOML and write a serialized TOML table to an **existing** TOML file, replacing a value with key = <value_key.> This is useful to replace a specific value of a TOML file, without having to parse the entire thing."}},"version":1}},"settings":{"remappings":["eth-gas-reporter/=node_modules/eth-gas-reporter/","forge-std/=lib/forge-std/src/","hardhat/=node_modules/hardhat/"],"optimizer":{"enabled":false,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"lib/forge-std/src/Vm.sol":"Vm"},"evmVersion":"paris","libraries":{}},"sources":{"lib/forge-std/src/Vm.sol":{"keccak256":"0x7121b5b99c4baefb34fdc1f3cc7235aac7138bbc2265344571709417623f5029","urls":["bzz-raw://3866315b5f89f81746192969834b5932b30c62d7e86ad646e99b6055bdc0ca74","dweb:/ipfs/QmRLhuB96iRxeF5pX4FdsizAaqgDaH2eCWFqfEXbdz9v7n"],"license":"MIT OR Apache-2.0"}},"version":1},"ast":{"absolutePath":"lib/forge-std/src/Vm.sol","id":16514,"exportedSymbols":{"Vm":[16513],"VmSafe":[15864]},"nodeType":"SourceUnit","src":"117:97711:14","nodes":[{"id":12477,"nodeType":"PragmaDirective","src":"117:31:14","nodes":[],"literals":["solidity",">=","0.6",".2","<","0.9",".0"]},{"id":12478,"nodeType":"PragmaDirective","src":"149:33:14","nodes":[],"literals":["experimental","ABIEncoderV2"]},{"id":15864,"nodeType":"ContractDefinition","src":"409:81357:14","nodes":[{"id":12486,"nodeType":"EnumDefinition","src":"529:533:14","nodes":[],"canonicalName":"VmSafe.CallerMode","documentation":{"id":12480,"nodeType":"StructuredDocumentation","src":"432:92:14","text":"A modification applied to either `msg.sender` or `tx.origin`. Returned by `readCallers`."},"members":[{"id":12481,"name":"None","nameLocation":"610:4:14","nodeType":"EnumValue","src":"610:4:14"},{"id":12482,"name":"Broadcast","nameLocation":"714:9:14","nodeType":"EnumValue","src":"714:9:14"},{"id":12483,"name":"RecurrentBroadcast","nameLocation":"829:18:14","nodeType":"EnumValue","src":"829:18:14"},{"id":12484,"name":"Prank","nameLocation":"939:5:14","nodeType":"EnumValue","src":"939:5:14"},{"id":12485,"name":"RecurrentPrank","nameLocation":"1042:14:14","nodeType":"EnumValue","src":"1042:14:14"}],"name":"CallerMode","nameLocation":"534:10:14"},{"id":12499,"nodeType":"EnumDefinition","src":"1118:791:14","nodes":[],"canonicalName":"VmSafe.AccountAccessKind","documentation":{"id":12487,"nodeType":"StructuredDocumentation","src":"1068:45:14","text":"The kind of account access that occurred."},"members":[{"id":12488,"name":"Call","nameLocation":"1186:4:14","nodeType":"EnumValue","src":"1186:4:14"},{"id":12489,"name":"DelegateCall","nameLocation":"1252:12:14","nodeType":"EnumValue","src":"1252:12:14"},{"id":12490,"name":"CallCode","nameLocation":"1322:8:14","nodeType":"EnumValue","src":"1322:8:14"},{"id":12491,"name":"StaticCall","nameLocation":"1390:10:14","nodeType":"EnumValue","src":"1390:10:14"},{"id":12492,"name":"Create","nameLocation":"1446:6:14","nodeType":"EnumValue","src":"1446:6:14"},{"id":12493,"name":"SelfDestruct","nameLocation":"1505:12:14","nodeType":"EnumValue","src":"1505:12:14"},{"id":12494,"name":"Resume","nameLocation":"1644:6:14","nodeType":"EnumValue","src":"1644:6:14"},{"id":12495,"name":"Balance","nameLocation":"1703:7:14","nodeType":"EnumValue","src":"1703:7:14"},{"id":12496,"name":"Extcodesize","nameLocation":"1764:11:14","nodeType":"EnumValue","src":"1764:11:14"},{"id":12497,"name":"Extcodehash","nameLocation":"1829:11:14","nodeType":"EnumValue","src":"1829:11:14"},{"id":12498,"name":"Extcodecopy","nameLocation":"1892:11:14","nodeType":"EnumValue","src":"1892:11:14"}],"name":"AccountAccessKind","nameLocation":"1123:17:14"},{"id":12510,"nodeType":"EnumDefinition","src":"1949:683:14","nodes":[],"canonicalName":"VmSafe.ForgeContext","documentation":{"id":12500,"nodeType":"StructuredDocumentation","src":"1915:29:14","text":"Forge execution contexts."},"members":[{"id":12501,"name":"TestGroup","nameLocation":"2047:9:14","nodeType":"EnumValue","src":"2047:9:14"},{"id":12502,"name":"Test","nameLocation":"2109:4:14","nodeType":"EnumValue","src":"2109:4:14"},{"id":12503,"name":"Coverage","nameLocation":"2170:8:14","nodeType":"EnumValue","src":"2170:8:14"},{"id":12504,"name":"Snapshot","nameLocation":"2235:8:14","nodeType":"EnumValue","src":"2235:8:14"},{"id":12505,"name":"ScriptGroup","nameLocation":"2327:11:14","nodeType":"EnumValue","src":"2327:11:14"},{"id":12506,"name":"ScriptDryRun","nameLocation":"2393:12:14","nodeType":"EnumValue","src":"2393:12:14"},{"id":12507,"name":"ScriptBroadcast","nameLocation":"2472:15:14","nodeType":"EnumValue","src":"2472:15:14"},{"id":12508,"name":"ScriptResume","nameLocation":"2551:12:14","nodeType":"EnumValue","src":"2551:12:14"},{"id":12509,"name":"Unknown","nameLocation":"2619:7:14","nodeType":"EnumValue","src":"2619:7:14"}],"name":"ForgeContext","nameLocation":"1954:12:14"},{"id":12519,"nodeType":"StructDefinition","src":"2694:237:14","nodes":[],"canonicalName":"VmSafe.Log","documentation":{"id":12511,"nodeType":"StructuredDocumentation","src":"2638:51:14","text":"An Ethereum log. Returned by `getRecordedLogs`."},"members":[{"constant":false,"id":12514,"mutability":"mutable","name":"topics","nameLocation":"2792:6:14","nodeType":"VariableDeclaration","scope":12519,"src":"2782:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":12512,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2782:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":12513,"nodeType":"ArrayTypeName","src":"2782:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":12516,"mutability":"mutable","name":"data","nameLocation":"2850:4:14","nodeType":"VariableDeclaration","scope":12519,"src":"2844:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":12515,"name":"bytes","nodeType":"ElementaryTypeName","src":"2844:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":12518,"mutability":"mutable","name":"emitter","nameLocation":"2917:7:14","nodeType":"VariableDeclaration","scope":12519,"src":"2909:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12517,"name":"address","nodeType":"ElementaryTypeName","src":"2909:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"Log","nameLocation":"2701:3:14","scope":15864,"visibility":"public"},{"id":12525,"nodeType":"StructDefinition","src":"3000:119:14","nodes":[],"canonicalName":"VmSafe.Rpc","documentation":{"id":12520,"nodeType":"StructuredDocumentation","src":"2937:58:14","text":"An RPC URL and its alias. Returned by `rpcUrlStructs`."},"members":[{"constant":false,"id":12522,"mutability":"mutable","name":"key","nameLocation":"3065:3:14","nodeType":"VariableDeclaration","scope":12525,"src":"3058:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":12521,"name":"string","nodeType":"ElementaryTypeName","src":"3058:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12524,"mutability":"mutable","name":"url","nameLocation":"3109:3:14","nodeType":"VariableDeclaration","scope":12525,"src":"3102:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":12523,"name":"string","nodeType":"ElementaryTypeName","src":"3102:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"Rpc","nameLocation":"3007:3:14","scope":15864,"visibility":"public"},{"id":12546,"nodeType":"StructDefinition","src":"3179:615:14","nodes":[],"canonicalName":"VmSafe.EthGetLogs","documentation":{"id":12526,"nodeType":"StructuredDocumentation","src":"3125:49:14","text":"An RPC log object. Returned by `eth_getLogs`."},"members":[{"constant":false,"id":12528,"mutability":"mutable","name":"emitter","nameLocation":"3260:7:14","nodeType":"VariableDeclaration","scope":12546,"src":"3252:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12527,"name":"address","nodeType":"ElementaryTypeName","src":"3252:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":12531,"mutability":"mutable","name":"topics","nameLocation":"3354:6:14","nodeType":"VariableDeclaration","scope":12546,"src":"3344:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":12529,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3344:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":12530,"nodeType":"ArrayTypeName","src":"3344:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":12533,"mutability":"mutable","name":"data","nameLocation":"3412:4:14","nodeType":"VariableDeclaration","scope":12546,"src":"3406:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":12532,"name":"bytes","nodeType":"ElementaryTypeName","src":"3406:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":12535,"mutability":"mutable","name":"blockHash","nameLocation":"3461:9:14","nodeType":"VariableDeclaration","scope":12546,"src":"3453:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12534,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3453:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":12537,"mutability":"mutable","name":"blockNumber","nameLocation":"3516:11:14","nodeType":"VariableDeclaration","scope":12546,"src":"3509:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":12536,"name":"uint64","nodeType":"ElementaryTypeName","src":"3509:6:14","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":12539,"mutability":"mutable","name":"transactionHash","nameLocation":"3578:15:14","nodeType":"VariableDeclaration","scope":12546,"src":"3570:23:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12538,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3570:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":12541,"mutability":"mutable","name":"transactionIndex","nameLocation":"3657:16:14","nodeType":"VariableDeclaration","scope":12546,"src":"3650:23:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":12540,"name":"uint64","nodeType":"ElementaryTypeName","src":"3650:6:14","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":12543,"mutability":"mutable","name":"logIndex","nameLocation":"3717:8:14","nodeType":"VariableDeclaration","scope":12546,"src":"3709:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12542,"name":"uint256","nodeType":"ElementaryTypeName","src":"3709:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":12545,"mutability":"mutable","name":"removed","nameLocation":"3780:7:14","nodeType":"VariableDeclaration","scope":12546,"src":"3775:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":12544,"name":"bool","nodeType":"ElementaryTypeName","src":"3775:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"EthGetLogs","nameLocation":"3186:10:14","scope":15864,"visibility":"public"},{"id":12558,"nodeType":"StructDefinition","src":"3870:334:14","nodes":[],"canonicalName":"VmSafe.DirEntry","documentation":{"id":12547,"nodeType":"StructuredDocumentation","src":"3800:65:14","text":"A single entry in a directory listing. Returned by `readDir`."},"members":[{"constant":false,"id":12549,"mutability":"mutable","name":"errorMessage","nameLocation":"3941:12:14","nodeType":"VariableDeclaration","scope":12558,"src":"3934:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":12548,"name":"string","nodeType":"ElementaryTypeName","src":"3934:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12551,"mutability":"mutable","name":"path","nameLocation":"4004:4:14","nodeType":"VariableDeclaration","scope":12558,"src":"3997:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":12550,"name":"string","nodeType":"ElementaryTypeName","src":"3997:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12553,"mutability":"mutable","name":"depth","nameLocation":"4060:5:14","nodeType":"VariableDeclaration","scope":12558,"src":"4053:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":12552,"name":"uint64","nodeType":"ElementaryTypeName","src":"4053:6:14","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":12555,"mutability":"mutable","name":"isDir","nameLocation":"4125:5:14","nodeType":"VariableDeclaration","scope":12558,"src":"4120:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":12554,"name":"bool","nodeType":"ElementaryTypeName","src":"4120:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":12557,"mutability":"mutable","name":"isSymlink","nameLocation":"4188:9:14","nodeType":"VariableDeclaration","scope":12558,"src":"4183:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":12556,"name":"bool","nodeType":"ElementaryTypeName","src":"4183:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"DirEntry","nameLocation":"3877:8:14","scope":15864,"visibility":"public"},{"id":12574,"nodeType":"StructDefinition","src":"4434:599:14","nodes":[],"canonicalName":"VmSafe.FsMetadata","documentation":{"id":12559,"nodeType":"StructuredDocumentation","src":"4210:219:14","text":"Metadata information about a file.\n This structure is returned from the `fsMetadata` function and represents known\n metadata about a file such as its permissions, size, modification\n times, etc."},"members":[{"constant":false,"id":12561,"mutability":"mutable","name":"isDir","nameLocation":"4520:5:14","nodeType":"VariableDeclaration","scope":12574,"src":"4515:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":12560,"name":"bool","nodeType":"ElementaryTypeName","src":"4515:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":12563,"mutability":"mutable","name":"isSymlink","nameLocation":"4591:9:14","nodeType":"VariableDeclaration","scope":12574,"src":"4586:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":12562,"name":"bool","nodeType":"ElementaryTypeName","src":"4586:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":12565,"mutability":"mutable","name":"length","nameLocation":"4683:6:14","nodeType":"VariableDeclaration","scope":12574,"src":"4675:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12564,"name":"uint256","nodeType":"ElementaryTypeName","src":"4675:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":12567,"mutability":"mutable","name":"readOnly","nameLocation":"4774:8:14","nodeType":"VariableDeclaration","scope":12574,"src":"4769:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":12566,"name":"bool","nodeType":"ElementaryTypeName","src":"4769:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":12569,"mutability":"mutable","name":"modified","nameLocation":"4863:8:14","nodeType":"VariableDeclaration","scope":12574,"src":"4855:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12568,"name":"uint256","nodeType":"ElementaryTypeName","src":"4855:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":12571,"mutability":"mutable","name":"accessed","nameLocation":"4939:8:14","nodeType":"VariableDeclaration","scope":12574,"src":"4931:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12570,"name":"uint256","nodeType":"ElementaryTypeName","src":"4931:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":12573,"mutability":"mutable","name":"created","nameLocation":"5019:7:14","nodeType":"VariableDeclaration","scope":12574,"src":"5011:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12572,"name":"uint256","nodeType":"ElementaryTypeName","src":"5011:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"FsMetadata","nameLocation":"4441:10:14","scope":15864,"visibility":"public"},{"id":12584,"nodeType":"StructDefinition","src":"5087:277:14","nodes":[],"canonicalName":"VmSafe.Wallet","documentation":{"id":12575,"nodeType":"StructuredDocumentation","src":"5039:43:14","text":"A wallet with a public and private key."},"members":[{"constant":false,"id":12577,"mutability":"mutable","name":"addr","nameLocation":"5152:4:14","nodeType":"VariableDeclaration","scope":12584,"src":"5144:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12576,"name":"address","nodeType":"ElementaryTypeName","src":"5144:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":12579,"mutability":"mutable","name":"publicKeyX","nameLocation":"5214:10:14","nodeType":"VariableDeclaration","scope":12584,"src":"5206:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12578,"name":"uint256","nodeType":"ElementaryTypeName","src":"5206:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":12581,"mutability":"mutable","name":"publicKeyY","nameLocation":"5282:10:14","nodeType":"VariableDeclaration","scope":12584,"src":"5274:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12580,"name":"uint256","nodeType":"ElementaryTypeName","src":"5274:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":12583,"mutability":"mutable","name":"privateKey","nameLocation":"5347:10:14","nodeType":"VariableDeclaration","scope":12584,"src":"5339:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12582,"name":"uint256","nodeType":"ElementaryTypeName","src":"5339:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Wallet","nameLocation":"5094:6:14","scope":15864,"visibility":"public"},{"id":12592,"nodeType":"StructDefinition","src":"5409:213:14","nodes":[],"canonicalName":"VmSafe.FfiResult","documentation":{"id":12585,"nodeType":"StructuredDocumentation","src":"5370:34:14","text":"The result of a `tryFfi` call."},"members":[{"constant":false,"id":12587,"mutability":"mutable","name":"exitCode","nameLocation":"5480:8:14","nodeType":"VariableDeclaration","scope":12592,"src":"5474:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":12586,"name":"int32","nodeType":"ElementaryTypeName","src":"5474:5:14","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"},{"constant":false,"id":12589,"mutability":"mutable","name":"stdout","nameLocation":"5557:6:14","nodeType":"VariableDeclaration","scope":12592,"src":"5551:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":12588,"name":"bytes","nodeType":"ElementaryTypeName","src":"5551:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":12591,"mutability":"mutable","name":"stderr","nameLocation":"5609:6:14","nodeType":"VariableDeclaration","scope":12592,"src":"5603:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":12590,"name":"bytes","nodeType":"ElementaryTypeName","src":"5603:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"FfiResult","nameLocation":"5416:9:14","scope":15864,"visibility":"public"},{"id":12598,"nodeType":"StructDefinition","src":"5671:184:14","nodes":[],"canonicalName":"VmSafe.ChainInfo","documentation":{"id":12593,"nodeType":"StructuredDocumentation","src":"5628:38:14","text":"Information on the chain and fork."},"members":[{"constant":false,"id":12595,"mutability":"mutable","name":"forkId","nameLocation":"5772:6:14","nodeType":"VariableDeclaration","scope":12598,"src":"5764:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12594,"name":"uint256","nodeType":"ElementaryTypeName","src":"5764:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":12597,"mutability":"mutable","name":"chainId","nameLocation":"5841:7:14","nodeType":"VariableDeclaration","scope":12598,"src":"5833:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12596,"name":"uint256","nodeType":"ElementaryTypeName","src":"5833:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"ChainInfo","nameLocation":"5678:9:14","scope":15864,"visibility":"public"},{"id":12630,"nodeType":"StructDefinition","src":"5916:1837:14","nodes":[],"canonicalName":"VmSafe.AccountAccess","documentation":{"id":12599,"nodeType":"StructuredDocumentation","src":"5861:50:14","text":"The result of a `stopAndReturnStateDiff` call."},"members":[{"constant":false,"id":12602,"mutability":"mutable","name":"chainInfo","nameLocation":"6008:9:14","nodeType":"VariableDeclaration","scope":12630,"src":"5998:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_ChainInfo_$12598_storage_ptr","typeString":"struct VmSafe.ChainInfo"},"typeName":{"id":12601,"nodeType":"UserDefinedTypeName","pathNode":{"id":12600,"name":"ChainInfo","nameLocations":["5998:9:14"],"nodeType":"IdentifierPath","referencedDeclaration":12598,"src":"5998:9:14"},"referencedDeclaration":12598,"src":"5998:9:14","typeDescriptions":{"typeIdentifier":"t_struct$_ChainInfo_$12598_storage_ptr","typeString":"struct VmSafe.ChainInfo"}},"visibility":"internal"},{"constant":false,"id":12605,"mutability":"mutable","name":"kind","nameLocation":"6471:4:14","nodeType":"VariableDeclaration","scope":12630,"src":"6453:22:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_AccountAccessKind_$12499","typeString":"enum VmSafe.AccountAccessKind"},"typeName":{"id":12604,"nodeType":"UserDefinedTypeName","pathNode":{"id":12603,"name":"AccountAccessKind","nameLocations":["6453:17:14"],"nodeType":"IdentifierPath","referencedDeclaration":12499,"src":"6453:17:14"},"referencedDeclaration":12499,"src":"6453:17:14","typeDescriptions":{"typeIdentifier":"t_enum$_AccountAccessKind_$12499","typeString":"enum VmSafe.AccountAccessKind"}},"visibility":"internal"},{"constant":false,"id":12607,"mutability":"mutable","name":"account","nameLocation":"6648:7:14","nodeType":"VariableDeclaration","scope":12630,"src":"6640:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12606,"name":"address","nodeType":"ElementaryTypeName","src":"6640:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":12609,"mutability":"mutable","name":"accessor","nameLocation":"6711:8:14","nodeType":"VariableDeclaration","scope":12630,"src":"6703:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12608,"name":"address","nodeType":"ElementaryTypeName","src":"6703:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":12611,"mutability":"mutable","name":"initialized","nameLocation":"6922:11:14","nodeType":"VariableDeclaration","scope":12630,"src":"6917:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":12610,"name":"bool","nodeType":"ElementaryTypeName","src":"6917:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":12613,"mutability":"mutable","name":"oldBalance","nameLocation":"7008:10:14","nodeType":"VariableDeclaration","scope":12630,"src":"7000:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12612,"name":"uint256","nodeType":"ElementaryTypeName","src":"7000:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":12615,"mutability":"mutable","name":"newBalance","nameLocation":"7183:10:14","nodeType":"VariableDeclaration","scope":12630,"src":"7175:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12614,"name":"uint256","nodeType":"ElementaryTypeName","src":"7175:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":12617,"mutability":"mutable","name":"deployedCode","nameLocation":"7260:12:14","nodeType":"VariableDeclaration","scope":12630,"src":"7254:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":12616,"name":"bytes","nodeType":"ElementaryTypeName","src":"7254:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":12619,"mutability":"mutable","name":"value","nameLocation":"7344:5:14","nodeType":"VariableDeclaration","scope":12630,"src":"7336:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12618,"name":"uint256","nodeType":"ElementaryTypeName","src":"7336:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":12621,"mutability":"mutable","name":"data","nameLocation":"7418:4:14","nodeType":"VariableDeclaration","scope":12630,"src":"7412:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":12620,"name":"bytes","nodeType":"ElementaryTypeName","src":"7412:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":12623,"mutability":"mutable","name":"reverted","nameLocation":"7513:8:14","nodeType":"VariableDeclaration","scope":12630,"src":"7508:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":12622,"name":"bool","nodeType":"ElementaryTypeName","src":"7508:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":12627,"mutability":"mutable","name":"storageAccesses","nameLocation":"7635:15:14","nodeType":"VariableDeclaration","scope":12630,"src":"7619:31:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_StorageAccess_$12644_storage_$dyn_storage_ptr","typeString":"struct VmSafe.StorageAccess[]"},"typeName":{"baseType":{"id":12625,"nodeType":"UserDefinedTypeName","pathNode":{"id":12624,"name":"StorageAccess","nameLocations":["7619:13:14"],"nodeType":"IdentifierPath","referencedDeclaration":12644,"src":"7619:13:14"},"referencedDeclaration":12644,"src":"7619:13:14","typeDescriptions":{"typeIdentifier":"t_struct$_StorageAccess_$12644_storage_ptr","typeString":"struct VmSafe.StorageAccess"}},"id":12626,"nodeType":"ArrayTypeName","src":"7619:15:14","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_StorageAccess_$12644_storage_$dyn_storage_ptr","typeString":"struct VmSafe.StorageAccess[]"}},"visibility":"internal"},{"constant":false,"id":12629,"mutability":"mutable","name":"depth","nameLocation":"7741:5:14","nodeType":"VariableDeclaration","scope":12630,"src":"7734:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":12628,"name":"uint64","nodeType":"ElementaryTypeName","src":"7734:6:14","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"name":"AccountAccess","nameLocation":"5923:13:14","scope":15864,"visibility":"public"},{"id":12644,"nodeType":"StructDefinition","src":"7815:425:14","nodes":[],"canonicalName":"VmSafe.StorageAccess","documentation":{"id":12631,"nodeType":"StructuredDocumentation","src":"7759:51:14","text":"The storage accessed during an `AccountAccess`."},"members":[{"constant":false,"id":12633,"mutability":"mutable","name":"account","nameLocation":"7905:7:14","nodeType":"VariableDeclaration","scope":12644,"src":"7897:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12632,"name":"address","nodeType":"ElementaryTypeName","src":"7897:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":12635,"mutability":"mutable","name":"slot","nameLocation":"7969:4:14","nodeType":"VariableDeclaration","scope":12644,"src":"7961:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12634,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7961:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":12637,"mutability":"mutable","name":"isWrite","nameLocation":"8026:7:14","nodeType":"VariableDeclaration","scope":12644,"src":"8021:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":12636,"name":"bool","nodeType":"ElementaryTypeName","src":"8021:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":12639,"mutability":"mutable","name":"previousValue","nameLocation":"8094:13:14","nodeType":"VariableDeclaration","scope":12644,"src":"8086:21:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12638,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8086:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":12641,"mutability":"mutable","name":"newValue","nameLocation":"8163:8:14","nodeType":"VariableDeclaration","scope":12644,"src":"8155:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12640,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8155:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":12643,"mutability":"mutable","name":"reverted","nameLocation":"8225:8:14","nodeType":"VariableDeclaration","scope":12644,"src":"8220:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":12642,"name":"bool","nodeType":"ElementaryTypeName","src":"8220:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"StorageAccess","nameLocation":"7822:13:14","scope":15864,"visibility":"public"},{"id":12656,"nodeType":"StructDefinition","src":"8291:458:14","nodes":[],"canonicalName":"VmSafe.Gas","documentation":{"id":12645,"nodeType":"StructuredDocumentation","src":"8246:40:14","text":"Gas used. Returned by `lastCallGas`."},"members":[{"constant":false,"id":12647,"mutability":"mutable","name":"gasLimit","nameLocation":"8357:8:14","nodeType":"VariableDeclaration","scope":12656,"src":"8350:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":12646,"name":"uint64","nodeType":"ElementaryTypeName","src":"8350:6:14","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":12649,"mutability":"mutable","name":"gasTotalUsed","nameLocation":"8413:12:14","nodeType":"VariableDeclaration","scope":12656,"src":"8406:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":12648,"name":"uint64","nodeType":"ElementaryTypeName","src":"8406:6:14","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":12651,"mutability":"mutable","name":"gasMemoryUsed","nameLocation":"8594:13:14","nodeType":"VariableDeclaration","scope":12656,"src":"8587:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":12650,"name":"uint64","nodeType":"ElementaryTypeName","src":"8587:6:14","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":12653,"mutability":"mutable","name":"gasRefunded","nameLocation":"8662:11:14","nodeType":"VariableDeclaration","scope":12656,"src":"8656:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":12652,"name":"int64","nodeType":"ElementaryTypeName","src":"8656:5:14","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"},{"constant":false,"id":12655,"mutability":"mutable","name":"gasRemaining","nameLocation":"8730:12:14","nodeType":"VariableDeclaration","scope":12656,"src":"8723:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":12654,"name":"uint64","nodeType":"ElementaryTypeName","src":"8723:6:14","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"name":"Gas","nameLocation":"8298:3:14","scope":15864,"visibility":"public"},{"id":12665,"nodeType":"FunctionDefinition","src":"8892:91:14","nodes":[],"documentation":{"id":12657,"nodeType":"StructuredDocumentation","src":"8788:99:14","text":"Derives a private key from the name, labels the account with that name, and returns the wallet."},"functionSelector":"7404f1d2","implemented":false,"kind":"function","modifiers":[],"name":"createWallet","nameLocation":"8901:12:14","parameters":{"id":12660,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12659,"mutability":"mutable","name":"walletLabel","nameLocation":"8930:11:14","nodeType":"VariableDeclaration","scope":12665,"src":"8914:27:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12658,"name":"string","nodeType":"ElementaryTypeName","src":"8914:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8913:29:14"},"returnParameters":{"id":12664,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12663,"mutability":"mutable","name":"wallet","nameLocation":"8975:6:14","nodeType":"VariableDeclaration","scope":12665,"src":"8961:20:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$12584_memory_ptr","typeString":"struct VmSafe.Wallet"},"typeName":{"id":12662,"nodeType":"UserDefinedTypeName","pathNode":{"id":12661,"name":"Wallet","nameLocations":["8961:6:14"],"nodeType":"IdentifierPath","referencedDeclaration":12584,"src":"8961:6:14"},"referencedDeclaration":12584,"src":"8961:6:14","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$12584_storage_ptr","typeString":"struct VmSafe.Wallet"}},"visibility":"internal"}],"src":"8960:22:14"},"scope":15864,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12674,"nodeType":"FunctionDefinition","src":"9061:82:14","nodes":[],"documentation":{"id":12666,"nodeType":"StructuredDocumentation","src":"8989:67:14","text":"Generates a wallet from the private key and returns the wallet."},"functionSelector":"7a675bb6","implemented":false,"kind":"function","modifiers":[],"name":"createWallet","nameLocation":"9070:12:14","parameters":{"id":12669,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12668,"mutability":"mutable","name":"privateKey","nameLocation":"9091:10:14","nodeType":"VariableDeclaration","scope":12674,"src":"9083:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12667,"name":"uint256","nodeType":"ElementaryTypeName","src":"9083:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9082:20:14"},"returnParameters":{"id":12673,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12672,"mutability":"mutable","name":"wallet","nameLocation":"9135:6:14","nodeType":"VariableDeclaration","scope":12674,"src":"9121:20:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$12584_memory_ptr","typeString":"struct VmSafe.Wallet"},"typeName":{"id":12671,"nodeType":"UserDefinedTypeName","pathNode":{"id":12670,"name":"Wallet","nameLocations":["9121:6:14"],"nodeType":"IdentifierPath","referencedDeclaration":12584,"src":"9121:6:14"},"referencedDeclaration":12584,"src":"9121:6:14","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$12584_storage_ptr","typeString":"struct VmSafe.Wallet"}},"visibility":"internal"}],"src":"9120:22:14"},"scope":15864,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12685,"nodeType":"FunctionDefinition","src":"9257:111:14","nodes":[],"documentation":{"id":12675,"nodeType":"StructuredDocumentation","src":"9149:103:14","text":"Generates a wallet from the private key, labels the account with that name, and returns the wallet."},"functionSelector":"ed7c5462","implemented":false,"kind":"function","modifiers":[],"name":"createWallet","nameLocation":"9266:12:14","parameters":{"id":12680,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12677,"mutability":"mutable","name":"privateKey","nameLocation":"9287:10:14","nodeType":"VariableDeclaration","scope":12685,"src":"9279:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12676,"name":"uint256","nodeType":"ElementaryTypeName","src":"9279:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":12679,"mutability":"mutable","name":"walletLabel","nameLocation":"9315:11:14","nodeType":"VariableDeclaration","scope":12685,"src":"9299:27:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12678,"name":"string","nodeType":"ElementaryTypeName","src":"9299:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"9278:49:14"},"returnParameters":{"id":12684,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12683,"mutability":"mutable","name":"wallet","nameLocation":"9360:6:14","nodeType":"VariableDeclaration","scope":12685,"src":"9346:20:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$12584_memory_ptr","typeString":"struct VmSafe.Wallet"},"typeName":{"id":12682,"nodeType":"UserDefinedTypeName","pathNode":{"id":12681,"name":"Wallet","nameLocations":["9346:6:14"],"nodeType":"IdentifierPath","referencedDeclaration":12584,"src":"9346:6:14"},"referencedDeclaration":12584,"src":"9346:6:14","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$12584_storage_ptr","typeString":"struct VmSafe.Wallet"}},"visibility":"internal"}],"src":"9345:22:14"},"scope":15864,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12695,"nodeType":"FunctionDefinition","src":"9516:102:14","nodes":[],"documentation":{"id":12686,"nodeType":"StructuredDocumentation","src":"9374:137:14","text":"Derive a private key from a provided mnenomic string (or mnenomic file path)\n at the derivation path `m/44'/60'/0'/0/{index}`."},"functionSelector":"6229498b","implemented":false,"kind":"function","modifiers":[],"name":"deriveKey","nameLocation":"9525:9:14","parameters":{"id":12691,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12688,"mutability":"mutable","name":"mnemonic","nameLocation":"9551:8:14","nodeType":"VariableDeclaration","scope":12695,"src":"9535:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12687,"name":"string","nodeType":"ElementaryTypeName","src":"9535:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12690,"mutability":"mutable","name":"index","nameLocation":"9568:5:14","nodeType":"VariableDeclaration","scope":12695,"src":"9561:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":12689,"name":"uint32","nodeType":"ElementaryTypeName","src":"9561:6:14","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"9534:40:14"},"returnParameters":{"id":12694,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12693,"mutability":"mutable","name":"privateKey","nameLocation":"9606:10:14","nodeType":"VariableDeclaration","scope":12695,"src":"9598:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12692,"name":"uint256","nodeType":"ElementaryTypeName","src":"9598:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9597:20:14"},"scope":15864,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":12707,"nodeType":"FunctionDefinition","src":"9747:158:14","nodes":[],"documentation":{"id":12696,"nodeType":"StructuredDocumentation","src":"9624:118:14","text":"Derive a private key from a provided mnenomic string (or mnenomic file path)\n at `{derivationPath}{index}`."},"functionSelector":"6bcb2c1b","implemented":false,"kind":"function","modifiers":[],"name":"deriveKey","nameLocation":"9756:9:14","parameters":{"id":12703,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12698,"mutability":"mutable","name":"mnemonic","nameLocation":"9782:8:14","nodeType":"VariableDeclaration","scope":12707,"src":"9766:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12697,"name":"string","nodeType":"ElementaryTypeName","src":"9766:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12700,"mutability":"mutable","name":"derivationPath","nameLocation":"9808:14:14","nodeType":"VariableDeclaration","scope":12707,"src":"9792:30:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12699,"name":"string","nodeType":"ElementaryTypeName","src":"9792:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12702,"mutability":"mutable","name":"index","nameLocation":"9831:5:14","nodeType":"VariableDeclaration","scope":12707,"src":"9824:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":12701,"name":"uint32","nodeType":"ElementaryTypeName","src":"9824:6:14","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"9765:72:14"},"returnParameters":{"id":12706,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12705,"mutability":"mutable","name":"privateKey","nameLocation":"9893:10:14","nodeType":"VariableDeclaration","scope":12707,"src":"9885:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12704,"name":"uint256","nodeType":"ElementaryTypeName","src":"9885:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9884:20:14"},"scope":15864,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":12719,"nodeType":"FunctionDefinition","src":"10079:152:14","nodes":[],"documentation":{"id":12708,"nodeType":"StructuredDocumentation","src":"9911:163:14","text":"Derive a private key from a provided mnenomic string (or mnenomic file path) in the specified language\n at the derivation path `m/44'/60'/0'/0/{index}`."},"functionSelector":"32c8176d","implemented":false,"kind":"function","modifiers":[],"name":"deriveKey","nameLocation":"10088:9:14","parameters":{"id":12715,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12710,"mutability":"mutable","name":"mnemonic","nameLocation":"10114:8:14","nodeType":"VariableDeclaration","scope":12719,"src":"10098:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12709,"name":"string","nodeType":"ElementaryTypeName","src":"10098:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12712,"mutability":"mutable","name":"index","nameLocation":"10131:5:14","nodeType":"VariableDeclaration","scope":12719,"src":"10124:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":12711,"name":"uint32","nodeType":"ElementaryTypeName","src":"10124:6:14","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":12714,"mutability":"mutable","name":"language","nameLocation":"10154:8:14","nodeType":"VariableDeclaration","scope":12719,"src":"10138:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12713,"name":"string","nodeType":"ElementaryTypeName","src":"10138:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"10097:66:14"},"returnParameters":{"id":12718,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12717,"mutability":"mutable","name":"privateKey","nameLocation":"10219:10:14","nodeType":"VariableDeclaration","scope":12719,"src":"10211:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12716,"name":"uint256","nodeType":"ElementaryTypeName","src":"10211:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10210:20:14"},"scope":15864,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":12733,"nodeType":"FunctionDefinition","src":"10386:184:14","nodes":[],"documentation":{"id":12720,"nodeType":"StructuredDocumentation","src":"10237:144:14","text":"Derive a private key from a provided mnenomic string (or mnenomic file path) in the specified language\n at `{derivationPath}{index}`."},"functionSelector":"29233b1f","implemented":false,"kind":"function","modifiers":[],"name":"deriveKey","nameLocation":"10395:9:14","parameters":{"id":12729,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12722,"mutability":"mutable","name":"mnemonic","nameLocation":"10421:8:14","nodeType":"VariableDeclaration","scope":12733,"src":"10405:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12721,"name":"string","nodeType":"ElementaryTypeName","src":"10405:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12724,"mutability":"mutable","name":"derivationPath","nameLocation":"10447:14:14","nodeType":"VariableDeclaration","scope":12733,"src":"10431:30:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12723,"name":"string","nodeType":"ElementaryTypeName","src":"10431:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12726,"mutability":"mutable","name":"index","nameLocation":"10470:5:14","nodeType":"VariableDeclaration","scope":12733,"src":"10463:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":12725,"name":"uint32","nodeType":"ElementaryTypeName","src":"10463:6:14","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":12728,"mutability":"mutable","name":"language","nameLocation":"10493:8:14","nodeType":"VariableDeclaration","scope":12733,"src":"10477:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12727,"name":"string","nodeType":"ElementaryTypeName","src":"10477:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"10404:98:14"},"returnParameters":{"id":12732,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12731,"mutability":"mutable","name":"privateKey","nameLocation":"10558:10:14","nodeType":"VariableDeclaration","scope":12733,"src":"10550:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12730,"name":"uint256","nodeType":"ElementaryTypeName","src":"10550:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10549:20:14"},"scope":15864,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":12741,"nodeType":"FunctionDefinition","src":"10654:76:14","nodes":[],"documentation":{"id":12734,"nodeType":"StructuredDocumentation","src":"10576:73:14","text":"Adds a private key to the local forge wallet and returns the address."},"functionSelector":"22100064","implemented":false,"kind":"function","modifiers":[],"name":"rememberKey","nameLocation":"10663:11:14","parameters":{"id":12737,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12736,"mutability":"mutable","name":"privateKey","nameLocation":"10683:10:14","nodeType":"VariableDeclaration","scope":12741,"src":"10675:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12735,"name":"uint256","nodeType":"ElementaryTypeName","src":"10675:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10674:20:14"},"returnParameters":{"id":12740,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12739,"mutability":"mutable","name":"keyAddr","nameLocation":"10721:7:14","nodeType":"VariableDeclaration","scope":12741,"src":"10713:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12738,"name":"address","nodeType":"ElementaryTypeName","src":"10713:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"10712:17:14"},"scope":15864,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12754,"nodeType":"FunctionDefinition","src":"11009:102:14","nodes":[],"documentation":{"id":12742,"nodeType":"StructuredDocumentation","src":"10736:268:14","text":"Signs data with a `Wallet`.\n Returns a compact signature (`r`, `vs`) as per EIP-2098, where `vs` encodes both the\n signature's `s` value, and the recovery id `v` in a single bytes32.\n This format reduces the signature size from 65 to 64 bytes."},"functionSelector":"3d0e292f","implemented":false,"kind":"function","modifiers":[],"name":"signCompact","nameLocation":"11018:11:14","parameters":{"id":12748,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12745,"mutability":"mutable","name":"wallet","nameLocation":"11046:6:14","nodeType":"VariableDeclaration","scope":12754,"src":"11030:22:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$12584_calldata_ptr","typeString":"struct VmSafe.Wallet"},"typeName":{"id":12744,"nodeType":"UserDefinedTypeName","pathNode":{"id":12743,"name":"Wallet","nameLocations":["11030:6:14"],"nodeType":"IdentifierPath","referencedDeclaration":12584,"src":"11030:6:14"},"referencedDeclaration":12584,"src":"11030:6:14","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$12584_storage_ptr","typeString":"struct VmSafe.Wallet"}},"visibility":"internal"},{"constant":false,"id":12747,"mutability":"mutable","name":"digest","nameLocation":"11062:6:14","nodeType":"VariableDeclaration","scope":12754,"src":"11054:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12746,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11054:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"11029:40:14"},"returnParameters":{"id":12753,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12750,"mutability":"mutable","name":"r","nameLocation":"11096:1:14","nodeType":"VariableDeclaration","scope":12754,"src":"11088:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12749,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11088:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":12752,"mutability":"mutable","name":"vs","nameLocation":"11107:2:14","nodeType":"VariableDeclaration","scope":12754,"src":"11099:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12751,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11099:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"11087:23:14"},"scope":15864,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12766,"nodeType":"FunctionDefinition","src":"11422:103:14","nodes":[],"documentation":{"id":12755,"nodeType":"StructuredDocumentation","src":"11117:300:14","text":"Signs `digest` with `privateKey` using the secp256k1 curve.\n Returns a compact signature (`r`, `vs`) as per EIP-2098, where `vs` encodes both the\n signature's `s` value, and the recovery id `v` in a single bytes32.\n This format reduces the signature size from 65 to 64 bytes."},"functionSelector":"cc2a781f","implemented":false,"kind":"function","modifiers":[],"name":"signCompact","nameLocation":"11431:11:14","parameters":{"id":12760,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12757,"mutability":"mutable","name":"privateKey","nameLocation":"11451:10:14","nodeType":"VariableDeclaration","scope":12766,"src":"11443:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12756,"name":"uint256","nodeType":"ElementaryTypeName","src":"11443:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":12759,"mutability":"mutable","name":"digest","nameLocation":"11471:6:14","nodeType":"VariableDeclaration","scope":12766,"src":"11463:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12758,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11463:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"11442:36:14"},"returnParameters":{"id":12765,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12762,"mutability":"mutable","name":"r","nameLocation":"11510:1:14","nodeType":"VariableDeclaration","scope":12766,"src":"11502:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12761,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11502:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":12764,"mutability":"mutable","name":"vs","nameLocation":"11521:2:14","nodeType":"VariableDeclaration","scope":12766,"src":"11513:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12763,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11513:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"11501:23:14"},"scope":15864,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":12776,"nodeType":"FunctionDefinition","src":"12201:83:14","nodes":[],"documentation":{"id":12767,"nodeType":"StructuredDocumentation","src":"11531:665:14","text":"Signs `digest` with signer provided to script using the secp256k1 curve.\n Returns a compact signature (`r`, `vs`) as per EIP-2098, where `vs` encodes both the\n signature's `s` value, and the recovery id `v` in a single bytes32.\n This format reduces the signature size from 65 to 64 bytes.\n If `--sender` is provided, the signer with provided address is used, otherwise,\n if exactly one signer is provided to the script, that signer is used.\n Raises error if signer passed through `--sender` does not match any unlocked signers or\n if `--sender` is not provided and not exactly one signer is passed to the script."},"functionSelector":"a282dc4b","implemented":false,"kind":"function","modifiers":[],"name":"signCompact","nameLocation":"12210:11:14","parameters":{"id":12770,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12769,"mutability":"mutable","name":"digest","nameLocation":"12230:6:14","nodeType":"VariableDeclaration","scope":12776,"src":"12222:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12768,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12222:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"12221:16:14"},"returnParameters":{"id":12775,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12772,"mutability":"mutable","name":"r","nameLocation":"12269:1:14","nodeType":"VariableDeclaration","scope":12776,"src":"12261:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12771,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12261:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":12774,"mutability":"mutable","name":"vs","nameLocation":"12280:2:14","nodeType":"VariableDeclaration","scope":12776,"src":"12272:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12773,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12272:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"12260:23:14"},"scope":15864,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":12788,"nodeType":"FunctionDefinition","src":"12698:99:14","nodes":[],"documentation":{"id":12777,"nodeType":"StructuredDocumentation","src":"12290:403:14","text":"Signs `digest` with signer provided to script using the secp256k1 curve.\n Returns a compact signature (`r`, `vs`) as per EIP-2098, where `vs` encodes both the\n signature's `s` value, and the recovery id `v` in a single bytes32.\n This format reduces the signature size from 65 to 64 bytes.\n Raises error if none of the signers passed into the script have provided address."},"functionSelector":"8e2f97bf","implemented":false,"kind":"function","modifiers":[],"name":"signCompact","nameLocation":"12707:11:14","parameters":{"id":12782,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12779,"mutability":"mutable","name":"signer","nameLocation":"12727:6:14","nodeType":"VariableDeclaration","scope":12788,"src":"12719:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12778,"name":"address","nodeType":"ElementaryTypeName","src":"12719:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":12781,"mutability":"mutable","name":"digest","nameLocation":"12743:6:14","nodeType":"VariableDeclaration","scope":12788,"src":"12735:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12780,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12735:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"12718:32:14"},"returnParameters":{"id":12787,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12784,"mutability":"mutable","name":"r","nameLocation":"12782:1:14","nodeType":"VariableDeclaration","scope":12788,"src":"12774:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12783,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12774:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":12786,"mutability":"mutable","name":"vs","nameLocation":"12793:2:14","nodeType":"VariableDeclaration","scope":12788,"src":"12785:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12785,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12785:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"12773:23:14"},"scope":15864,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":12800,"nodeType":"FunctionDefinition","src":"12871:99:14","nodes":[],"documentation":{"id":12789,"nodeType":"StructuredDocumentation","src":"12803:63:14","text":"Signs `digest` with `privateKey` using the secp256r1 curve."},"functionSelector":"83211b40","implemented":false,"kind":"function","modifiers":[],"name":"signP256","nameLocation":"12880:8:14","parameters":{"id":12794,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12791,"mutability":"mutable","name":"privateKey","nameLocation":"12897:10:14","nodeType":"VariableDeclaration","scope":12800,"src":"12889:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12790,"name":"uint256","nodeType":"ElementaryTypeName","src":"12889:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":12793,"mutability":"mutable","name":"digest","nameLocation":"12917:6:14","nodeType":"VariableDeclaration","scope":12800,"src":"12909:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12792,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12909:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"12888:36:14"},"returnParameters":{"id":12799,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12796,"mutability":"mutable","name":"r","nameLocation":"12956:1:14","nodeType":"VariableDeclaration","scope":12800,"src":"12948:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12795,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12948:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":12798,"mutability":"mutable","name":"s","nameLocation":"12967:1:14","nodeType":"VariableDeclaration","scope":12800,"src":"12959:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12797,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12959:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"12947:22:14"},"scope":15864,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":12815,"nodeType":"FunctionDefinition","src":"13012:103:14","nodes":[],"documentation":{"id":12801,"nodeType":"StructuredDocumentation","src":"12976:31:14","text":"Signs data with a `Wallet`."},"functionSelector":"b25c5a25","implemented":false,"kind":"function","modifiers":[],"name":"sign","nameLocation":"13021:4:14","parameters":{"id":12807,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12804,"mutability":"mutable","name":"wallet","nameLocation":"13042:6:14","nodeType":"VariableDeclaration","scope":12815,"src":"13026:22:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$12584_calldata_ptr","typeString":"struct VmSafe.Wallet"},"typeName":{"id":12803,"nodeType":"UserDefinedTypeName","pathNode":{"id":12802,"name":"Wallet","nameLocations":["13026:6:14"],"nodeType":"IdentifierPath","referencedDeclaration":12584,"src":"13026:6:14"},"referencedDeclaration":12584,"src":"13026:6:14","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$12584_storage_ptr","typeString":"struct VmSafe.Wallet"}},"visibility":"internal"},{"constant":false,"id":12806,"mutability":"mutable","name":"digest","nameLocation":"13058:6:14","nodeType":"VariableDeclaration","scope":12815,"src":"13050:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12805,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13050:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"13025:40:14"},"returnParameters":{"id":12814,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12809,"mutability":"mutable","name":"v","nameLocation":"13090:1:14","nodeType":"VariableDeclaration","scope":12815,"src":"13084:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":12808,"name":"uint8","nodeType":"ElementaryTypeName","src":"13084:5:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":12811,"mutability":"mutable","name":"r","nameLocation":"13101:1:14","nodeType":"VariableDeclaration","scope":12815,"src":"13093:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12810,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13093:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":12813,"mutability":"mutable","name":"s","nameLocation":"13112:1:14","nodeType":"VariableDeclaration","scope":12815,"src":"13104:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12812,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13104:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"13083:31:14"},"scope":15864,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12829,"nodeType":"FunctionDefinition","src":"13189:104:14","nodes":[],"documentation":{"id":12816,"nodeType":"StructuredDocumentation","src":"13121:63:14","text":"Signs `digest` with `privateKey` using the secp256k1 curve."},"functionSelector":"e341eaa4","implemented":false,"kind":"function","modifiers":[],"name":"sign","nameLocation":"13198:4:14","parameters":{"id":12821,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12818,"mutability":"mutable","name":"privateKey","nameLocation":"13211:10:14","nodeType":"VariableDeclaration","scope":12829,"src":"13203:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12817,"name":"uint256","nodeType":"ElementaryTypeName","src":"13203:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":12820,"mutability":"mutable","name":"digest","nameLocation":"13231:6:14","nodeType":"VariableDeclaration","scope":12829,"src":"13223:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12819,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13223:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"13202:36:14"},"returnParameters":{"id":12828,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12823,"mutability":"mutable","name":"v","nameLocation":"13268:1:14","nodeType":"VariableDeclaration","scope":12829,"src":"13262:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":12822,"name":"uint8","nodeType":"ElementaryTypeName","src":"13262:5:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":12825,"mutability":"mutable","name":"r","nameLocation":"13279:1:14","nodeType":"VariableDeclaration","scope":12829,"src":"13271:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12824,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13271:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":12827,"mutability":"mutable","name":"s","nameLocation":"13290:1:14","nodeType":"VariableDeclaration","scope":12829,"src":"13282:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12826,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13282:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"13261:31:14"},"scope":15864,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":12841,"nodeType":"FunctionDefinition","src":"13732:84:14","nodes":[],"documentation":{"id":12830,"nodeType":"StructuredDocumentation","src":"13299:428:14","text":"Signs `digest` with signer provided to script using the secp256k1 curve.\n If `--sender` is provided, the signer with provided address is used, otherwise,\n if exactly one signer is provided to the script, that signer is used.\n Raises error if signer passed through `--sender` does not match any unlocked signers or\n if `--sender` is not provided and not exactly one signer is passed to the script."},"functionSelector":"799cd333","implemented":false,"kind":"function","modifiers":[],"name":"sign","nameLocation":"13741:4:14","parameters":{"id":12833,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12832,"mutability":"mutable","name":"digest","nameLocation":"13754:6:14","nodeType":"VariableDeclaration","scope":12841,"src":"13746:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12831,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13746:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"13745:16:14"},"returnParameters":{"id":12840,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12835,"mutability":"mutable","name":"v","nameLocation":"13791:1:14","nodeType":"VariableDeclaration","scope":12841,"src":"13785:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":12834,"name":"uint8","nodeType":"ElementaryTypeName","src":"13785:5:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":12837,"mutability":"mutable","name":"r","nameLocation":"13802:1:14","nodeType":"VariableDeclaration","scope":12841,"src":"13794:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12836,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13794:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":12839,"mutability":"mutable","name":"s","nameLocation":"13813:1:14","nodeType":"VariableDeclaration","scope":12841,"src":"13805:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12838,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13805:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"13784:31:14"},"scope":15864,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":12855,"nodeType":"FunctionDefinition","src":"13993:100:14","nodes":[],"documentation":{"id":12842,"nodeType":"StructuredDocumentation","src":"13822:166:14","text":"Signs `digest` with signer provided to script using the secp256k1 curve.\n Raises error if none of the signers passed into the script have provided address."},"functionSelector":"8c1aa205","implemented":false,"kind":"function","modifiers":[],"name":"sign","nameLocation":"14002:4:14","parameters":{"id":12847,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12844,"mutability":"mutable","name":"signer","nameLocation":"14015:6:14","nodeType":"VariableDeclaration","scope":12855,"src":"14007:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12843,"name":"address","nodeType":"ElementaryTypeName","src":"14007:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":12846,"mutability":"mutable","name":"digest","nameLocation":"14031:6:14","nodeType":"VariableDeclaration","scope":12855,"src":"14023:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12845,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14023:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"14006:32:14"},"returnParameters":{"id":12854,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12849,"mutability":"mutable","name":"v","nameLocation":"14068:1:14","nodeType":"VariableDeclaration","scope":12855,"src":"14062:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":12848,"name":"uint8","nodeType":"ElementaryTypeName","src":"14062:5:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":12851,"mutability":"mutable","name":"r","nameLocation":"14079:1:14","nodeType":"VariableDeclaration","scope":12855,"src":"14071:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12850,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14071:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":12853,"mutability":"mutable","name":"s","nameLocation":"14090:1:14","nodeType":"VariableDeclaration","scope":12855,"src":"14082:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12852,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14082:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"14061:31:14"},"scope":15864,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":12863,"nodeType":"FunctionDefinition","src":"14280:80:14","nodes":[],"documentation":{"id":12856,"nodeType":"StructuredDocumentation","src":"14137:138:14","text":"Gets the environment variable `name` and parses it as `address`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"350d56bf","implemented":false,"kind":"function","modifiers":[],"name":"envAddress","nameLocation":"14289:10:14","parameters":{"id":12859,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12858,"mutability":"mutable","name":"name","nameLocation":"14316:4:14","nodeType":"VariableDeclaration","scope":12863,"src":"14300:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12857,"name":"string","nodeType":"ElementaryTypeName","src":"14300:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"14299:22:14"},"returnParameters":{"id":12862,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12861,"mutability":"mutable","name":"value","nameLocation":"14353:5:14","nodeType":"VariableDeclaration","scope":12863,"src":"14345:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12860,"name":"address","nodeType":"ElementaryTypeName","src":"14345:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14344:15:14"},"scope":15864,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12874,"nodeType":"FunctionDefinition","src":"14543:112:14","nodes":[],"documentation":{"id":12864,"nodeType":"StructuredDocumentation","src":"14366:172:14","text":"Gets the environment variable `name` and parses it as an array of `address`, delimited by `delim`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"ad31b9fa","implemented":false,"kind":"function","modifiers":[],"name":"envAddress","nameLocation":"14552:10:14","parameters":{"id":12869,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12866,"mutability":"mutable","name":"name","nameLocation":"14579:4:14","nodeType":"VariableDeclaration","scope":12874,"src":"14563:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12865,"name":"string","nodeType":"ElementaryTypeName","src":"14563:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12868,"mutability":"mutable","name":"delim","nameLocation":"14601:5:14","nodeType":"VariableDeclaration","scope":12874,"src":"14585:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12867,"name":"string","nodeType":"ElementaryTypeName","src":"14585:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"14562:45:14"},"returnParameters":{"id":12873,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12872,"mutability":"mutable","name":"value","nameLocation":"14648:5:14","nodeType":"VariableDeclaration","scope":12874,"src":"14631:22:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":12870,"name":"address","nodeType":"ElementaryTypeName","src":"14631:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":12871,"nodeType":"ArrayTypeName","src":"14631:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"14630:24:14"},"scope":15864,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12882,"nodeType":"FunctionDefinition","src":"14801:74:14","nodes":[],"documentation":{"id":12875,"nodeType":"StructuredDocumentation","src":"14661:135:14","text":"Gets the environment variable `name` and parses it as `bool`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"7ed1ec7d","implemented":false,"kind":"function","modifiers":[],"name":"envBool","nameLocation":"14810:7:14","parameters":{"id":12878,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12877,"mutability":"mutable","name":"name","nameLocation":"14834:4:14","nodeType":"VariableDeclaration","scope":12882,"src":"14818:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12876,"name":"string","nodeType":"ElementaryTypeName","src":"14818:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"14817:22:14"},"returnParameters":{"id":12881,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12880,"mutability":"mutable","name":"value","nameLocation":"14868:5:14","nodeType":"VariableDeclaration","scope":12882,"src":"14863:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":12879,"name":"bool","nodeType":"ElementaryTypeName","src":"14863:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"14862:12:14"},"scope":15864,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12893,"nodeType":"FunctionDefinition","src":"15055:106:14","nodes":[],"documentation":{"id":12883,"nodeType":"StructuredDocumentation","src":"14881:169:14","text":"Gets the environment variable `name` and parses it as an array of `bool`, delimited by `delim`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"aaaddeaf","implemented":false,"kind":"function","modifiers":[],"name":"envBool","nameLocation":"15064:7:14","parameters":{"id":12888,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12885,"mutability":"mutable","name":"name","nameLocation":"15088:4:14","nodeType":"VariableDeclaration","scope":12893,"src":"15072:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12884,"name":"string","nodeType":"ElementaryTypeName","src":"15072:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12887,"mutability":"mutable","name":"delim","nameLocation":"15110:5:14","nodeType":"VariableDeclaration","scope":12893,"src":"15094:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12886,"name":"string","nodeType":"ElementaryTypeName","src":"15094:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"15071:45:14"},"returnParameters":{"id":12892,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12891,"mutability":"mutable","name":"value","nameLocation":"15154:5:14","nodeType":"VariableDeclaration","scope":12893,"src":"15140:19:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":12889,"name":"bool","nodeType":"ElementaryTypeName","src":"15140:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":12890,"nodeType":"ArrayTypeName","src":"15140:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"src":"15139:21:14"},"scope":15864,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12901,"nodeType":"FunctionDefinition","src":"15310:80:14","nodes":[],"documentation":{"id":12894,"nodeType":"StructuredDocumentation","src":"15167:138:14","text":"Gets the environment variable `name` and parses it as `bytes32`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"97949042","implemented":false,"kind":"function","modifiers":[],"name":"envBytes32","nameLocation":"15319:10:14","parameters":{"id":12897,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12896,"mutability":"mutable","name":"name","nameLocation":"15346:4:14","nodeType":"VariableDeclaration","scope":12901,"src":"15330:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12895,"name":"string","nodeType":"ElementaryTypeName","src":"15330:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"15329:22:14"},"returnParameters":{"id":12900,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12899,"mutability":"mutable","name":"value","nameLocation":"15383:5:14","nodeType":"VariableDeclaration","scope":12901,"src":"15375:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12898,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15375:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"15374:15:14"},"scope":15864,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12912,"nodeType":"FunctionDefinition","src":"15573:112:14","nodes":[],"documentation":{"id":12902,"nodeType":"StructuredDocumentation","src":"15396:172:14","text":"Gets the environment variable `name` and parses it as an array of `bytes32`, delimited by `delim`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"5af231c1","implemented":false,"kind":"function","modifiers":[],"name":"envBytes32","nameLocation":"15582:10:14","parameters":{"id":12907,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12904,"mutability":"mutable","name":"name","nameLocation":"15609:4:14","nodeType":"VariableDeclaration","scope":12912,"src":"15593:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12903,"name":"string","nodeType":"ElementaryTypeName","src":"15593:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12906,"mutability":"mutable","name":"delim","nameLocation":"15631:5:14","nodeType":"VariableDeclaration","scope":12912,"src":"15615:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12905,"name":"string","nodeType":"ElementaryTypeName","src":"15615:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"15592:45:14"},"returnParameters":{"id":12911,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12910,"mutability":"mutable","name":"value","nameLocation":"15678:5:14","nodeType":"VariableDeclaration","scope":12912,"src":"15661:22:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":12908,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15661:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":12909,"nodeType":"ArrayTypeName","src":"15661:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"15660:24:14"},"scope":15864,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12920,"nodeType":"FunctionDefinition","src":"15832:83:14","nodes":[],"documentation":{"id":12913,"nodeType":"StructuredDocumentation","src":"15691:136:14","text":"Gets the environment variable `name` and parses it as `bytes`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"4d7baf06","implemented":false,"kind":"function","modifiers":[],"name":"envBytes","nameLocation":"15841:8:14","parameters":{"id":12916,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12915,"mutability":"mutable","name":"name","nameLocation":"15866:4:14","nodeType":"VariableDeclaration","scope":12920,"src":"15850:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12914,"name":"string","nodeType":"ElementaryTypeName","src":"15850:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"15849:22:14"},"returnParameters":{"id":12919,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12918,"mutability":"mutable","name":"value","nameLocation":"15908:5:14","nodeType":"VariableDeclaration","scope":12920,"src":"15895:18:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":12917,"name":"bytes","nodeType":"ElementaryTypeName","src":"15895:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"15894:20:14"},"scope":15864,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12931,"nodeType":"FunctionDefinition","src":"16096:108:14","nodes":[],"documentation":{"id":12921,"nodeType":"StructuredDocumentation","src":"15921:170:14","text":"Gets the environment variable `name` and parses it as an array of `bytes`, delimited by `delim`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"ddc2651b","implemented":false,"kind":"function","modifiers":[],"name":"envBytes","nameLocation":"16105:8:14","parameters":{"id":12926,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12923,"mutability":"mutable","name":"name","nameLocation":"16130:4:14","nodeType":"VariableDeclaration","scope":12931,"src":"16114:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12922,"name":"string","nodeType":"ElementaryTypeName","src":"16114:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12925,"mutability":"mutable","name":"delim","nameLocation":"16152:5:14","nodeType":"VariableDeclaration","scope":12931,"src":"16136:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12924,"name":"string","nodeType":"ElementaryTypeName","src":"16136:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"16113:45:14"},"returnParameters":{"id":12930,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12929,"mutability":"mutable","name":"value","nameLocation":"16197:5:14","nodeType":"VariableDeclaration","scope":12931,"src":"16182:20:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":12927,"name":"bytes","nodeType":"ElementaryTypeName","src":"16182:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":12928,"nodeType":"ArrayTypeName","src":"16182:7:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"16181:22:14"},"scope":15864,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12939,"nodeType":"FunctionDefinition","src":"16306:77:14","nodes":[],"documentation":{"id":12932,"nodeType":"StructuredDocumentation","src":"16210:91:14","text":"Gets the environment variable `name` and returns true if it exists, else returns false."},"functionSelector":"ce8365f9","implemented":false,"kind":"function","modifiers":[],"name":"envExists","nameLocation":"16315:9:14","parameters":{"id":12935,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12934,"mutability":"mutable","name":"name","nameLocation":"16341:4:14","nodeType":"VariableDeclaration","scope":12939,"src":"16325:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12933,"name":"string","nodeType":"ElementaryTypeName","src":"16325:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"16324:22:14"},"returnParameters":{"id":12938,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12937,"mutability":"mutable","name":"result","nameLocation":"16375:6:14","nodeType":"VariableDeclaration","scope":12939,"src":"16370:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":12936,"name":"bool","nodeType":"ElementaryTypeName","src":"16370:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"16369:13:14"},"scope":15864,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12947,"nodeType":"FunctionDefinition","src":"16531:75:14","nodes":[],"documentation":{"id":12940,"nodeType":"StructuredDocumentation","src":"16389:137:14","text":"Gets the environment variable `name` and parses it as `int256`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"892a0c61","implemented":false,"kind":"function","modifiers":[],"name":"envInt","nameLocation":"16540:6:14","parameters":{"id":12943,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12942,"mutability":"mutable","name":"name","nameLocation":"16563:4:14","nodeType":"VariableDeclaration","scope":12947,"src":"16547:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12941,"name":"string","nodeType":"ElementaryTypeName","src":"16547:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"16546:22:14"},"returnParameters":{"id":12946,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12945,"mutability":"mutable","name":"value","nameLocation":"16599:5:14","nodeType":"VariableDeclaration","scope":12947,"src":"16592:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":12944,"name":"int256","nodeType":"ElementaryTypeName","src":"16592:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"16591:14:14"},"scope":15864,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12958,"nodeType":"FunctionDefinition","src":"16788:107:14","nodes":[],"documentation":{"id":12948,"nodeType":"StructuredDocumentation","src":"16612:171:14","text":"Gets the environment variable `name` and parses it as an array of `int256`, delimited by `delim`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"42181150","implemented":false,"kind":"function","modifiers":[],"name":"envInt","nameLocation":"16797:6:14","parameters":{"id":12953,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12950,"mutability":"mutable","name":"name","nameLocation":"16820:4:14","nodeType":"VariableDeclaration","scope":12958,"src":"16804:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12949,"name":"string","nodeType":"ElementaryTypeName","src":"16804:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12952,"mutability":"mutable","name":"delim","nameLocation":"16842:5:14","nodeType":"VariableDeclaration","scope":12958,"src":"16826:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12951,"name":"string","nodeType":"ElementaryTypeName","src":"16826:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"16803:45:14"},"returnParameters":{"id":12957,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12956,"mutability":"mutable","name":"value","nameLocation":"16888:5:14","nodeType":"VariableDeclaration","scope":12958,"src":"16872:21:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_memory_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":12954,"name":"int256","nodeType":"ElementaryTypeName","src":"16872:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":12955,"nodeType":"ArrayTypeName","src":"16872:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"}],"src":"16871:23:14"},"scope":15864,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12968,"nodeType":"FunctionDefinition","src":"17086:91:14","nodes":[],"documentation":{"id":12959,"nodeType":"StructuredDocumentation","src":"16901:180:14","text":"Gets the environment variable `name` and parses it as `bool`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"4777f3cf","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"17095:5:14","parameters":{"id":12964,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12961,"mutability":"mutable","name":"name","nameLocation":"17117:4:14","nodeType":"VariableDeclaration","scope":12968,"src":"17101:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12960,"name":"string","nodeType":"ElementaryTypeName","src":"17101:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12963,"mutability":"mutable","name":"defaultValue","nameLocation":"17128:12:14","nodeType":"VariableDeclaration","scope":12968,"src":"17123:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":12962,"name":"bool","nodeType":"ElementaryTypeName","src":"17123:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"17100:41:14"},"returnParameters":{"id":12967,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12966,"mutability":"mutable","name":"value","nameLocation":"17170:5:14","nodeType":"VariableDeclaration","scope":12968,"src":"17165:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":12965,"name":"bool","nodeType":"ElementaryTypeName","src":"17165:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"17164:12:14"},"scope":15864,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12978,"nodeType":"FunctionDefinition","src":"17371:97:14","nodes":[],"documentation":{"id":12969,"nodeType":"StructuredDocumentation","src":"17183:183:14","text":"Gets the environment variable `name` and parses it as `uint256`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"5e97348f","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"17380:5:14","parameters":{"id":12974,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12971,"mutability":"mutable","name":"name","nameLocation":"17402:4:14","nodeType":"VariableDeclaration","scope":12978,"src":"17386:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12970,"name":"string","nodeType":"ElementaryTypeName","src":"17386:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12973,"mutability":"mutable","name":"defaultValue","nameLocation":"17416:12:14","nodeType":"VariableDeclaration","scope":12978,"src":"17408:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12972,"name":"uint256","nodeType":"ElementaryTypeName","src":"17408:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17385:44:14"},"returnParameters":{"id":12977,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12976,"mutability":"mutable","name":"value","nameLocation":"17461:5:14","nodeType":"VariableDeclaration","scope":12978,"src":"17453:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12975,"name":"uint256","nodeType":"ElementaryTypeName","src":"17453:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17452:15:14"},"scope":15864,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12992,"nodeType":"FunctionDefinition","src":"17696:164:14","nodes":[],"documentation":{"id":12979,"nodeType":"StructuredDocumentation","src":"17474:217:14","text":"Gets the environment variable `name` and parses it as an array of `address`, delimited by `delim`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"c74e9deb","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"17705:5:14","parameters":{"id":12987,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12981,"mutability":"mutable","name":"name","nameLocation":"17727:4:14","nodeType":"VariableDeclaration","scope":12992,"src":"17711:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12980,"name":"string","nodeType":"ElementaryTypeName","src":"17711:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12983,"mutability":"mutable","name":"delim","nameLocation":"17749:5:14","nodeType":"VariableDeclaration","scope":12992,"src":"17733:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12982,"name":"string","nodeType":"ElementaryTypeName","src":"17733:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12986,"mutability":"mutable","name":"defaultValue","nameLocation":"17775:12:14","nodeType":"VariableDeclaration","scope":12992,"src":"17756:31:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":12984,"name":"address","nodeType":"ElementaryTypeName","src":"17756:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":12985,"nodeType":"ArrayTypeName","src":"17756:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"17710:78:14"},"returnParameters":{"id":12991,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12990,"mutability":"mutable","name":"value","nameLocation":"17853:5:14","nodeType":"VariableDeclaration","scope":12992,"src":"17836:22:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":12988,"name":"address","nodeType":"ElementaryTypeName","src":"17836:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":12989,"nodeType":"ArrayTypeName","src":"17836:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"17835:24:14"},"scope":15864,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13006,"nodeType":"FunctionDefinition","src":"18088:164:14","nodes":[],"documentation":{"id":12993,"nodeType":"StructuredDocumentation","src":"17866:217:14","text":"Gets the environment variable `name` and parses it as an array of `bytes32`, delimited by `delim`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"2281f367","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"18097:5:14","parameters":{"id":13001,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12995,"mutability":"mutable","name":"name","nameLocation":"18119:4:14","nodeType":"VariableDeclaration","scope":13006,"src":"18103:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12994,"name":"string","nodeType":"ElementaryTypeName","src":"18103:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12997,"mutability":"mutable","name":"delim","nameLocation":"18141:5:14","nodeType":"VariableDeclaration","scope":13006,"src":"18125:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12996,"name":"string","nodeType":"ElementaryTypeName","src":"18125:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13000,"mutability":"mutable","name":"defaultValue","nameLocation":"18167:12:14","nodeType":"VariableDeclaration","scope":13006,"src":"18148:31:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":12998,"name":"bytes32","nodeType":"ElementaryTypeName","src":"18148:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":12999,"nodeType":"ArrayTypeName","src":"18148:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"18102:78:14"},"returnParameters":{"id":13005,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13004,"mutability":"mutable","name":"value","nameLocation":"18245:5:14","nodeType":"VariableDeclaration","scope":13006,"src":"18228:22:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":13002,"name":"bytes32","nodeType":"ElementaryTypeName","src":"18228:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":13003,"nodeType":"ArrayTypeName","src":"18228:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"18227:24:14"},"scope":15864,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13020,"nodeType":"FunctionDefinition","src":"18479:162:14","nodes":[],"documentation":{"id":13007,"nodeType":"StructuredDocumentation","src":"18258:216:14","text":"Gets the environment variable `name` and parses it as an array of `string`, delimited by `delim`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"859216bc","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"18488:5:14","parameters":{"id":13015,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13009,"mutability":"mutable","name":"name","nameLocation":"18510:4:14","nodeType":"VariableDeclaration","scope":13020,"src":"18494:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13008,"name":"string","nodeType":"ElementaryTypeName","src":"18494:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13011,"mutability":"mutable","name":"delim","nameLocation":"18532:5:14","nodeType":"VariableDeclaration","scope":13020,"src":"18516:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13010,"name":"string","nodeType":"ElementaryTypeName","src":"18516:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13014,"mutability":"mutable","name":"defaultValue","nameLocation":"18557:12:14","nodeType":"VariableDeclaration","scope":13020,"src":"18539:30:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":13012,"name":"string","nodeType":"ElementaryTypeName","src":"18539:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":13013,"nodeType":"ArrayTypeName","src":"18539:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"18493:77:14"},"returnParameters":{"id":13019,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13018,"mutability":"mutable","name":"value","nameLocation":"18634:5:14","nodeType":"VariableDeclaration","scope":13020,"src":"18618:21:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":13016,"name":"string","nodeType":"ElementaryTypeName","src":"18618:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":13017,"nodeType":"ArrayTypeName","src":"18618:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"18617:23:14"},"scope":15864,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13034,"nodeType":"FunctionDefinition","src":"18867:160:14","nodes":[],"documentation":{"id":13021,"nodeType":"StructuredDocumentation","src":"18647:215:14","text":"Gets the environment variable `name` and parses it as an array of `bytes`, delimited by `delim`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"64bc3e64","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"18876:5:14","parameters":{"id":13029,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13023,"mutability":"mutable","name":"name","nameLocation":"18898:4:14","nodeType":"VariableDeclaration","scope":13034,"src":"18882:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13022,"name":"string","nodeType":"ElementaryTypeName","src":"18882:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13025,"mutability":"mutable","name":"delim","nameLocation":"18920:5:14","nodeType":"VariableDeclaration","scope":13034,"src":"18904:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13024,"name":"string","nodeType":"ElementaryTypeName","src":"18904:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13028,"mutability":"mutable","name":"defaultValue","nameLocation":"18944:12:14","nodeType":"VariableDeclaration","scope":13034,"src":"18927:29:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":13026,"name":"bytes","nodeType":"ElementaryTypeName","src":"18927:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":13027,"nodeType":"ArrayTypeName","src":"18927:7:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"18881:76:14"},"returnParameters":{"id":13033,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13032,"mutability":"mutable","name":"value","nameLocation":"19020:5:14","nodeType":"VariableDeclaration","scope":13034,"src":"19005:20:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":13030,"name":"bytes","nodeType":"ElementaryTypeName","src":"19005:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":13031,"nodeType":"ArrayTypeName","src":"19005:7:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"19004:22:14"},"scope":15864,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13044,"nodeType":"FunctionDefinition","src":"19220:95:14","nodes":[],"documentation":{"id":13035,"nodeType":"StructuredDocumentation","src":"19033:182:14","text":"Gets the environment variable `name` and parses it as `int256`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"bbcb713e","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"19229:5:14","parameters":{"id":13040,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13037,"mutability":"mutable","name":"name","nameLocation":"19251:4:14","nodeType":"VariableDeclaration","scope":13044,"src":"19235:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13036,"name":"string","nodeType":"ElementaryTypeName","src":"19235:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13039,"mutability":"mutable","name":"defaultValue","nameLocation":"19264:12:14","nodeType":"VariableDeclaration","scope":13044,"src":"19257:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":13038,"name":"int256","nodeType":"ElementaryTypeName","src":"19257:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19234:43:14"},"returnParameters":{"id":13043,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13042,"mutability":"mutable","name":"value","nameLocation":"19308:5:14","nodeType":"VariableDeclaration","scope":13044,"src":"19301:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":13041,"name":"int256","nodeType":"ElementaryTypeName","src":"19301:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19300:14:14"},"scope":15864,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13054,"nodeType":"FunctionDefinition","src":"19509:97:14","nodes":[],"documentation":{"id":13045,"nodeType":"StructuredDocumentation","src":"19321:183:14","text":"Gets the environment variable `name` and parses it as `address`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"561fe540","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"19518:5:14","parameters":{"id":13050,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13047,"mutability":"mutable","name":"name","nameLocation":"19540:4:14","nodeType":"VariableDeclaration","scope":13054,"src":"19524:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13046,"name":"string","nodeType":"ElementaryTypeName","src":"19524:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13049,"mutability":"mutable","name":"defaultValue","nameLocation":"19554:12:14","nodeType":"VariableDeclaration","scope":13054,"src":"19546:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":13048,"name":"address","nodeType":"ElementaryTypeName","src":"19546:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"19523:44:14"},"returnParameters":{"id":13053,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13052,"mutability":"mutable","name":"value","nameLocation":"19599:5:14","nodeType":"VariableDeclaration","scope":13054,"src":"19591:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":13051,"name":"address","nodeType":"ElementaryTypeName","src":"19591:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"19590:15:14"},"scope":15864,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13064,"nodeType":"FunctionDefinition","src":"19800:97:14","nodes":[],"documentation":{"id":13055,"nodeType":"StructuredDocumentation","src":"19612:183:14","text":"Gets the environment variable `name` and parses it as `bytes32`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"b4a85892","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"19809:5:14","parameters":{"id":13060,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13057,"mutability":"mutable","name":"name","nameLocation":"19831:4:14","nodeType":"VariableDeclaration","scope":13064,"src":"19815:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13056,"name":"string","nodeType":"ElementaryTypeName","src":"19815:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13059,"mutability":"mutable","name":"defaultValue","nameLocation":"19845:12:14","nodeType":"VariableDeclaration","scope":13064,"src":"19837:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13058,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19837:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"19814:44:14"},"returnParameters":{"id":13063,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13062,"mutability":"mutable","name":"value","nameLocation":"19890:5:14","nodeType":"VariableDeclaration","scope":13064,"src":"19882:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13061,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19882:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"19881:15:14"},"scope":15864,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13074,"nodeType":"FunctionDefinition","src":"20090:111:14","nodes":[],"documentation":{"id":13065,"nodeType":"StructuredDocumentation","src":"19903:182:14","text":"Gets the environment variable `name` and parses it as `string`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"d145736c","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"20099:5:14","parameters":{"id":13070,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13067,"mutability":"mutable","name":"name","nameLocation":"20121:4:14","nodeType":"VariableDeclaration","scope":13074,"src":"20105:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13066,"name":"string","nodeType":"ElementaryTypeName","src":"20105:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13069,"mutability":"mutable","name":"defaultValue","nameLocation":"20143:12:14","nodeType":"VariableDeclaration","scope":13074,"src":"20127:28:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13068,"name":"string","nodeType":"ElementaryTypeName","src":"20127:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"20104:52:14"},"returnParameters":{"id":13073,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13072,"mutability":"mutable","name":"value","nameLocation":"20194:5:14","nodeType":"VariableDeclaration","scope":13074,"src":"20180:19:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":13071,"name":"string","nodeType":"ElementaryTypeName","src":"20180:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"20179:21:14"},"scope":15864,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13084,"nodeType":"FunctionDefinition","src":"20393:109:14","nodes":[],"documentation":{"id":13075,"nodeType":"StructuredDocumentation","src":"20207:181:14","text":"Gets the environment variable `name` and parses it as `bytes`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"b3e47705","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"20402:5:14","parameters":{"id":13080,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13077,"mutability":"mutable","name":"name","nameLocation":"20424:4:14","nodeType":"VariableDeclaration","scope":13084,"src":"20408:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13076,"name":"string","nodeType":"ElementaryTypeName","src":"20408:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13079,"mutability":"mutable","name":"defaultValue","nameLocation":"20445:12:14","nodeType":"VariableDeclaration","scope":13084,"src":"20430:27:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":13078,"name":"bytes","nodeType":"ElementaryTypeName","src":"20430:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"20407:51:14"},"returnParameters":{"id":13083,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13082,"mutability":"mutable","name":"value","nameLocation":"20495:5:14","nodeType":"VariableDeclaration","scope":13084,"src":"20482:18:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":13081,"name":"bytes","nodeType":"ElementaryTypeName","src":"20482:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"20481:20:14"},"scope":15864,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13098,"nodeType":"FunctionDefinition","src":"20727:158:14","nodes":[],"documentation":{"id":13085,"nodeType":"StructuredDocumentation","src":"20508:214:14","text":"Gets the environment variable `name` and parses it as an array of `bool`, delimited by `delim`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"eb85e83b","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"20736:5:14","parameters":{"id":13093,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13087,"mutability":"mutable","name":"name","nameLocation":"20758:4:14","nodeType":"VariableDeclaration","scope":13098,"src":"20742:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13086,"name":"string","nodeType":"ElementaryTypeName","src":"20742:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13089,"mutability":"mutable","name":"delim","nameLocation":"20780:5:14","nodeType":"VariableDeclaration","scope":13098,"src":"20764:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13088,"name":"string","nodeType":"ElementaryTypeName","src":"20764:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13092,"mutability":"mutable","name":"defaultValue","nameLocation":"20803:12:14","nodeType":"VariableDeclaration","scope":13098,"src":"20787:28:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":13090,"name":"bool","nodeType":"ElementaryTypeName","src":"20787:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":13091,"nodeType":"ArrayTypeName","src":"20787:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"src":"20741:75:14"},"returnParameters":{"id":13097,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13096,"mutability":"mutable","name":"value","nameLocation":"20878:5:14","nodeType":"VariableDeclaration","scope":13098,"src":"20864:19:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":13094,"name":"bool","nodeType":"ElementaryTypeName","src":"20864:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":13095,"nodeType":"ArrayTypeName","src":"20864:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"src":"20863:21:14"},"scope":15864,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13112,"nodeType":"FunctionDefinition","src":"21113:164:14","nodes":[],"documentation":{"id":13099,"nodeType":"StructuredDocumentation","src":"20891:217:14","text":"Gets the environment variable `name` and parses it as an array of `uint256`, delimited by `delim`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"74318528","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"21122:5:14","parameters":{"id":13107,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13101,"mutability":"mutable","name":"name","nameLocation":"21144:4:14","nodeType":"VariableDeclaration","scope":13112,"src":"21128:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13100,"name":"string","nodeType":"ElementaryTypeName","src":"21128:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13103,"mutability":"mutable","name":"delim","nameLocation":"21166:5:14","nodeType":"VariableDeclaration","scope":13112,"src":"21150:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13102,"name":"string","nodeType":"ElementaryTypeName","src":"21150:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13106,"mutability":"mutable","name":"defaultValue","nameLocation":"21192:12:14","nodeType":"VariableDeclaration","scope":13112,"src":"21173:31:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":13104,"name":"uint256","nodeType":"ElementaryTypeName","src":"21173:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":13105,"nodeType":"ArrayTypeName","src":"21173:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"21127:78:14"},"returnParameters":{"id":13111,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13110,"mutability":"mutable","name":"value","nameLocation":"21270:5:14","nodeType":"VariableDeclaration","scope":13112,"src":"21253:22:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":13108,"name":"uint256","nodeType":"ElementaryTypeName","src":"21253:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":13109,"nodeType":"ArrayTypeName","src":"21253:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"21252:24:14"},"scope":15864,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13126,"nodeType":"FunctionDefinition","src":"21504:162:14","nodes":[],"documentation":{"id":13113,"nodeType":"StructuredDocumentation","src":"21283:216:14","text":"Gets the environment variable `name` and parses it as an array of `int256`, delimited by `delim`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"4700d74b","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"21513:5:14","parameters":{"id":13121,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13115,"mutability":"mutable","name":"name","nameLocation":"21535:4:14","nodeType":"VariableDeclaration","scope":13126,"src":"21519:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13114,"name":"string","nodeType":"ElementaryTypeName","src":"21519:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13117,"mutability":"mutable","name":"delim","nameLocation":"21557:5:14","nodeType":"VariableDeclaration","scope":13126,"src":"21541:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13116,"name":"string","nodeType":"ElementaryTypeName","src":"21541:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13120,"mutability":"mutable","name":"defaultValue","nameLocation":"21582:12:14","nodeType":"VariableDeclaration","scope":13126,"src":"21564:30:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":13118,"name":"int256","nodeType":"ElementaryTypeName","src":"21564:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":13119,"nodeType":"ArrayTypeName","src":"21564:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"}],"src":"21518:77:14"},"returnParameters":{"id":13125,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13124,"mutability":"mutable","name":"value","nameLocation":"21659:5:14","nodeType":"VariableDeclaration","scope":13126,"src":"21643:21:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_memory_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":13122,"name":"int256","nodeType":"ElementaryTypeName","src":"21643:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":13123,"nodeType":"ArrayTypeName","src":"21643:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"}],"src":"21642:23:14"},"scope":15864,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13134,"nodeType":"FunctionDefinition","src":"21814:85:14","nodes":[],"documentation":{"id":13127,"nodeType":"StructuredDocumentation","src":"21672:137:14","text":"Gets the environment variable `name` and parses it as `string`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"f877cb19","implemented":false,"kind":"function","modifiers":[],"name":"envString","nameLocation":"21823:9:14","parameters":{"id":13130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13129,"mutability":"mutable","name":"name","nameLocation":"21849:4:14","nodeType":"VariableDeclaration","scope":13134,"src":"21833:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13128,"name":"string","nodeType":"ElementaryTypeName","src":"21833:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"21832:22:14"},"returnParameters":{"id":13133,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13132,"mutability":"mutable","name":"value","nameLocation":"21892:5:14","nodeType":"VariableDeclaration","scope":13134,"src":"21878:19:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":13131,"name":"string","nodeType":"ElementaryTypeName","src":"21878:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"21877:21:14"},"scope":15864,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13145,"nodeType":"FunctionDefinition","src":"22081:110:14","nodes":[],"documentation":{"id":13135,"nodeType":"StructuredDocumentation","src":"21905:171:14","text":"Gets the environment variable `name` and parses it as an array of `string`, delimited by `delim`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"14b02bc9","implemented":false,"kind":"function","modifiers":[],"name":"envString","nameLocation":"22090:9:14","parameters":{"id":13140,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13137,"mutability":"mutable","name":"name","nameLocation":"22116:4:14","nodeType":"VariableDeclaration","scope":13145,"src":"22100:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13136,"name":"string","nodeType":"ElementaryTypeName","src":"22100:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13139,"mutability":"mutable","name":"delim","nameLocation":"22138:5:14","nodeType":"VariableDeclaration","scope":13145,"src":"22122:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13138,"name":"string","nodeType":"ElementaryTypeName","src":"22122:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"22099:45:14"},"returnParameters":{"id":13144,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13143,"mutability":"mutable","name":"value","nameLocation":"22184:5:14","nodeType":"VariableDeclaration","scope":13145,"src":"22168:21:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":13141,"name":"string","nodeType":"ElementaryTypeName","src":"22168:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":13142,"nodeType":"ArrayTypeName","src":"22168:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"22167:23:14"},"scope":15864,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13153,"nodeType":"FunctionDefinition","src":"22340:77:14","nodes":[],"documentation":{"id":13146,"nodeType":"StructuredDocumentation","src":"22197:138:14","text":"Gets the environment variable `name` and parses it as `uint256`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"c1978d1f","implemented":false,"kind":"function","modifiers":[],"name":"envUint","nameLocation":"22349:7:14","parameters":{"id":13149,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13148,"mutability":"mutable","name":"name","nameLocation":"22373:4:14","nodeType":"VariableDeclaration","scope":13153,"src":"22357:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13147,"name":"string","nodeType":"ElementaryTypeName","src":"22357:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"22356:22:14"},"returnParameters":{"id":13152,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13151,"mutability":"mutable","name":"value","nameLocation":"22410:5:14","nodeType":"VariableDeclaration","scope":13153,"src":"22402:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13150,"name":"uint256","nodeType":"ElementaryTypeName","src":"22402:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"22401:15:14"},"scope":15864,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13164,"nodeType":"FunctionDefinition","src":"22600:109:14","nodes":[],"documentation":{"id":13154,"nodeType":"StructuredDocumentation","src":"22423:172:14","text":"Gets the environment variable `name` and parses it as an array of `uint256`, delimited by `delim`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"f3dec099","implemented":false,"kind":"function","modifiers":[],"name":"envUint","nameLocation":"22609:7:14","parameters":{"id":13159,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13156,"mutability":"mutable","name":"name","nameLocation":"22633:4:14","nodeType":"VariableDeclaration","scope":13164,"src":"22617:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13155,"name":"string","nodeType":"ElementaryTypeName","src":"22617:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13158,"mutability":"mutable","name":"delim","nameLocation":"22655:5:14","nodeType":"VariableDeclaration","scope":13164,"src":"22639:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13157,"name":"string","nodeType":"ElementaryTypeName","src":"22639:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"22616:45:14"},"returnParameters":{"id":13163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13162,"mutability":"mutable","name":"value","nameLocation":"22702:5:14","nodeType":"VariableDeclaration","scope":13164,"src":"22685:22:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":13160,"name":"uint256","nodeType":"ElementaryTypeName","src":"22685:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":13161,"nodeType":"ArrayTypeName","src":"22685:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"22684:24:14"},"scope":15864,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13173,"nodeType":"FunctionDefinition","src":"22786:77:14","nodes":[],"documentation":{"id":13165,"nodeType":"StructuredDocumentation","src":"22715:66:14","text":"Returns true if `forge` command was executed in given context."},"functionSelector":"64af255d","implemented":false,"kind":"function","modifiers":[],"name":"isContext","nameLocation":"22795:9:14","parameters":{"id":13169,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13168,"mutability":"mutable","name":"context","nameLocation":"22818:7:14","nodeType":"VariableDeclaration","scope":13173,"src":"22805:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_ForgeContext_$12510","typeString":"enum VmSafe.ForgeContext"},"typeName":{"id":13167,"nodeType":"UserDefinedTypeName","pathNode":{"id":13166,"name":"ForgeContext","nameLocations":["22805:12:14"],"nodeType":"IdentifierPath","referencedDeclaration":12510,"src":"22805:12:14"},"referencedDeclaration":12510,"src":"22805:12:14","typeDescriptions":{"typeIdentifier":"t_enum$_ForgeContext_$12510","typeString":"enum VmSafe.ForgeContext"}},"visibility":"internal"}],"src":"22804:22:14"},"returnParameters":{"id":13172,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13171,"mutability":"mutable","name":"result","nameLocation":"22855:6:14","nodeType":"VariableDeclaration","scope":13173,"src":"22850:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":13170,"name":"bool","nodeType":"ElementaryTypeName","src":"22850:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"22849:13:14"},"scope":15864,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13181,"nodeType":"FunctionDefinition","src":"22905:70:14","nodes":[],"documentation":{"id":13174,"nodeType":"StructuredDocumentation","src":"22869:31:14","text":"Sets environment variables."},"functionSelector":"3d5923ee","implemented":false,"kind":"function","modifiers":[],"name":"setEnv","nameLocation":"22914:6:14","parameters":{"id":13179,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13176,"mutability":"mutable","name":"name","nameLocation":"22937:4:14","nodeType":"VariableDeclaration","scope":13181,"src":"22921:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13175,"name":"string","nodeType":"ElementaryTypeName","src":"22921:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13178,"mutability":"mutable","name":"value","nameLocation":"22959:5:14","nodeType":"VariableDeclaration","scope":13181,"src":"22943:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13177,"name":"string","nodeType":"ElementaryTypeName","src":"22943:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"22920:45:14"},"returnParameters":{"id":13180,"nodeType":"ParameterList","parameters":[],"src":"22974:0:14"},"scope":15864,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13193,"nodeType":"FunctionDefinition","src":"23107:109:14","nodes":[],"documentation":{"id":13182,"nodeType":"StructuredDocumentation","src":"23011:91:14","text":"Gets all accessed reads and write slot from a `vm.record` session, for a given address."},"functionSelector":"65bc9481","implemented":false,"kind":"function","modifiers":[],"name":"accesses","nameLocation":"23116:8:14","parameters":{"id":13185,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13184,"mutability":"mutable","name":"target","nameLocation":"23133:6:14","nodeType":"VariableDeclaration","scope":13193,"src":"23125:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":13183,"name":"address","nodeType":"ElementaryTypeName","src":"23125:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"23124:16:14"},"returnParameters":{"id":13192,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13188,"mutability":"mutable","name":"readSlots","nameLocation":"23176:9:14","nodeType":"VariableDeclaration","scope":13193,"src":"23159:26:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":13186,"name":"bytes32","nodeType":"ElementaryTypeName","src":"23159:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":13187,"nodeType":"ArrayTypeName","src":"23159:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":13191,"mutability":"mutable","name":"writeSlots","nameLocation":"23204:10:14","nodeType":"VariableDeclaration","scope":13193,"src":"23187:27:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":13189,"name":"bytes32","nodeType":"ElementaryTypeName","src":"23187:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":13190,"nodeType":"ArrayTypeName","src":"23187:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"23158:57:14"},"scope":15864,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13201,"nodeType":"FunctionDefinition","src":"23272:74:14","nodes":[],"documentation":{"id":13194,"nodeType":"StructuredDocumentation","src":"23222:45:14","text":"Gets the address for a given private key."},"functionSelector":"ffa18649","implemented":false,"kind":"function","modifiers":[],"name":"addr","nameLocation":"23281:4:14","parameters":{"id":13197,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13196,"mutability":"mutable","name":"privateKey","nameLocation":"23294:10:14","nodeType":"VariableDeclaration","scope":13201,"src":"23286:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13195,"name":"uint256","nodeType":"ElementaryTypeName","src":"23286:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23285:20:14"},"returnParameters":{"id":13200,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13199,"mutability":"mutable","name":"keyAddr","nameLocation":"23337:7:14","nodeType":"VariableDeclaration","scope":13201,"src":"23329:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":13198,"name":"address","nodeType":"ElementaryTypeName","src":"23329:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"23328:17:14"},"scope":15864,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13218,"nodeType":"FunctionDefinition","src":"23409:160:14","nodes":[],"documentation":{"id":13202,"nodeType":"StructuredDocumentation","src":"23352:52:14","text":"Gets all the logs according to specified filter."},"functionSelector":"35e1349b","implemented":false,"kind":"function","modifiers":[],"name":"eth_getLogs","nameLocation":"23418:11:14","parameters":{"id":13212,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13204,"mutability":"mutable","name":"fromBlock","nameLocation":"23438:9:14","nodeType":"VariableDeclaration","scope":13218,"src":"23430:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13203,"name":"uint256","nodeType":"ElementaryTypeName","src":"23430:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13206,"mutability":"mutable","name":"toBlock","nameLocation":"23457:7:14","nodeType":"VariableDeclaration","scope":13218,"src":"23449:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13205,"name":"uint256","nodeType":"ElementaryTypeName","src":"23449:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13208,"mutability":"mutable","name":"target","nameLocation":"23474:6:14","nodeType":"VariableDeclaration","scope":13218,"src":"23466:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":13207,"name":"address","nodeType":"ElementaryTypeName","src":"23466:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":13211,"mutability":"mutable","name":"topics","nameLocation":"23501:6:14","nodeType":"VariableDeclaration","scope":13218,"src":"23482:25:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":13209,"name":"bytes32","nodeType":"ElementaryTypeName","src":"23482:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":13210,"nodeType":"ArrayTypeName","src":"23482:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"23429:79:14"},"returnParameters":{"id":13217,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13216,"mutability":"mutable","name":"logs","nameLocation":"23563:4:14","nodeType":"VariableDeclaration","scope":13218,"src":"23543:24:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_EthGetLogs_$12546_memory_ptr_$dyn_memory_ptr","typeString":"struct VmSafe.EthGetLogs[]"},"typeName":{"baseType":{"id":13214,"nodeType":"UserDefinedTypeName","pathNode":{"id":13213,"name":"EthGetLogs","nameLocations":["23543:10:14"],"nodeType":"IdentifierPath","referencedDeclaration":12546,"src":"23543:10:14"},"referencedDeclaration":12546,"src":"23543:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_EthGetLogs_$12546_storage_ptr","typeString":"struct VmSafe.EthGetLogs"}},"id":13215,"nodeType":"ArrayTypeName","src":"23543:12:14","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_EthGetLogs_$12546_storage_$dyn_storage_ptr","typeString":"struct VmSafe.EthGetLogs[]"}},"visibility":"internal"}],"src":"23542:26:14"},"scope":15864,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13224,"nodeType":"FunctionDefinition","src":"23906:70:14","nodes":[],"documentation":{"id":13219,"nodeType":"StructuredDocumentation","src":"23575:326:14","text":"Gets the current `block.blobbasefee`.\n You should use this instead of `block.blobbasefee` if you use `vm.blobBaseFee`, as `block.blobbasefee` is assumed to be constant across a transaction,\n and as a result will get optimized out by the compiler.\n See https://github.com/foundry-rs/foundry/issues/6180"},"functionSelector":"1f6d6ef7","implemented":false,"kind":"function","modifiers":[],"name":"getBlobBaseFee","nameLocation":"23915:14:14","parameters":{"id":13220,"nodeType":"ParameterList","parameters":[],"src":"23929:2:14"},"returnParameters":{"id":13223,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13222,"mutability":"mutable","name":"blobBaseFee","nameLocation":"23963:11:14","nodeType":"VariableDeclaration","scope":13224,"src":"23955:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13221,"name":"uint256","nodeType":"ElementaryTypeName","src":"23955:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23954:21:14"},"scope":15864,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13230,"nodeType":"FunctionDefinition","src":"24291:65:14","nodes":[],"documentation":{"id":13225,"nodeType":"StructuredDocumentation","src":"23982:304:14","text":"Gets the current `block.number`.\n You should use this instead of `block.number` if you use `vm.roll`, as `block.number` is assumed to be constant across a transaction,\n and as a result will get optimized out by the compiler.\n See https://github.com/foundry-rs/foundry/issues/6180"},"functionSelector":"42cbb15c","implemented":false,"kind":"function","modifiers":[],"name":"getBlockNumber","nameLocation":"24300:14:14","parameters":{"id":13226,"nodeType":"ParameterList","parameters":[],"src":"24314:2:14"},"returnParameters":{"id":13229,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13228,"mutability":"mutable","name":"height","nameLocation":"24348:6:14","nodeType":"VariableDeclaration","scope":13230,"src":"24340:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13227,"name":"uint256","nodeType":"ElementaryTypeName","src":"24340:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"24339:16:14"},"scope":15864,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13236,"nodeType":"FunctionDefinition","src":"24680:71:14","nodes":[],"documentation":{"id":13231,"nodeType":"StructuredDocumentation","src":"24362:313:14","text":"Gets the current `block.timestamp`.\n You should use this instead of `block.timestamp` if you use `vm.warp`, as `block.timestamp` is assumed to be constant across a transaction,\n and as a result will get optimized out by the compiler.\n See https://github.com/foundry-rs/foundry/issues/6180"},"functionSelector":"796b89b9","implemented":false,"kind":"function","modifiers":[],"name":"getBlockTimestamp","nameLocation":"24689:17:14","parameters":{"id":13232,"nodeType":"ParameterList","parameters":[],"src":"24706:2:14"},"returnParameters":{"id":13235,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13234,"mutability":"mutable","name":"timestamp","nameLocation":"24740:9:14","nodeType":"VariableDeclaration","scope":13236,"src":"24732:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13233,"name":"uint256","nodeType":"ElementaryTypeName","src":"24732:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"24731:19:14"},"scope":15864,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13250,"nodeType":"FunctionDefinition","src":"24844:146:14","nodes":[],"documentation":{"id":13237,"nodeType":"StructuredDocumentation","src":"24757:82:14","text":"Gets the map key and parent of a mapping at a given slot, for a given address."},"functionSelector":"876e24e6","implemented":false,"kind":"function","modifiers":[],"name":"getMappingKeyAndParentOf","nameLocation":"24853:24:14","parameters":{"id":13242,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13239,"mutability":"mutable","name":"target","nameLocation":"24886:6:14","nodeType":"VariableDeclaration","scope":13250,"src":"24878:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":13238,"name":"address","nodeType":"ElementaryTypeName","src":"24878:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":13241,"mutability":"mutable","name":"elementSlot","nameLocation":"24902:11:14","nodeType":"VariableDeclaration","scope":13250,"src":"24894:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13240,"name":"bytes32","nodeType":"ElementaryTypeName","src":"24894:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"24877:37:14"},"returnParameters":{"id":13249,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13244,"mutability":"mutable","name":"found","nameLocation":"24954:5:14","nodeType":"VariableDeclaration","scope":13250,"src":"24949:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":13243,"name":"bool","nodeType":"ElementaryTypeName","src":"24949:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":13246,"mutability":"mutable","name":"key","nameLocation":"24969:3:14","nodeType":"VariableDeclaration","scope":13250,"src":"24961:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13245,"name":"bytes32","nodeType":"ElementaryTypeName","src":"24961:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":13248,"mutability":"mutable","name":"parent","nameLocation":"24982:6:14","nodeType":"VariableDeclaration","scope":13250,"src":"24974:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13247,"name":"bytes32","nodeType":"ElementaryTypeName","src":"24974:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"24948:41:14"},"scope":15864,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13260,"nodeType":"FunctionDefinition","src":"25087:97:14","nodes":[],"documentation":{"id":13251,"nodeType":"StructuredDocumentation","src":"24996:86:14","text":"Gets the number of elements in the mapping at the given slot, for a given address."},"functionSelector":"2f2fd63f","implemented":false,"kind":"function","modifiers":[],"name":"getMappingLength","nameLocation":"25096:16:14","parameters":{"id":13256,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13253,"mutability":"mutable","name":"target","nameLocation":"25121:6:14","nodeType":"VariableDeclaration","scope":13260,"src":"25113:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":13252,"name":"address","nodeType":"ElementaryTypeName","src":"25113:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":13255,"mutability":"mutable","name":"mappingSlot","nameLocation":"25137:11:14","nodeType":"VariableDeclaration","scope":13260,"src":"25129:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13254,"name":"bytes32","nodeType":"ElementaryTypeName","src":"25129:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"25112:37:14"},"returnParameters":{"id":13259,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13258,"mutability":"mutable","name":"length","nameLocation":"25176:6:14","nodeType":"VariableDeclaration","scope":13260,"src":"25168:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13257,"name":"uint256","nodeType":"ElementaryTypeName","src":"25168:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25167:16:14"},"scope":15864,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13272,"nodeType":"FunctionDefinition","src":"25388:109:14","nodes":[],"documentation":{"id":13261,"nodeType":"StructuredDocumentation","src":"25190:193:14","text":"Gets the elements at index idx of the mapping at the given slot, for a given address. The\n index must be less than the length of the mapping (i.e. the number of keys in the mapping)."},"functionSelector":"ebc73ab4","implemented":false,"kind":"function","modifiers":[],"name":"getMappingSlotAt","nameLocation":"25397:16:14","parameters":{"id":13268,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13263,"mutability":"mutable","name":"target","nameLocation":"25422:6:14","nodeType":"VariableDeclaration","scope":13272,"src":"25414:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":13262,"name":"address","nodeType":"ElementaryTypeName","src":"25414:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":13265,"mutability":"mutable","name":"mappingSlot","nameLocation":"25438:11:14","nodeType":"VariableDeclaration","scope":13272,"src":"25430:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13264,"name":"bytes32","nodeType":"ElementaryTypeName","src":"25430:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":13267,"mutability":"mutable","name":"idx","nameLocation":"25459:3:14","nodeType":"VariableDeclaration","scope":13272,"src":"25451:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13266,"name":"uint256","nodeType":"ElementaryTypeName","src":"25451:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25413:50:14"},"returnParameters":{"id":13271,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13270,"mutability":"mutable","name":"value","nameLocation":"25490:5:14","nodeType":"VariableDeclaration","scope":13272,"src":"25482:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13269,"name":"bytes32","nodeType":"ElementaryTypeName","src":"25482:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"25481:15:14"},"scope":15864,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13280,"nodeType":"FunctionDefinition","src":"25541:72:14","nodes":[],"documentation":{"id":13273,"nodeType":"StructuredDocumentation","src":"25503:33:14","text":"Gets the nonce of an account."},"functionSelector":"2d0335ab","implemented":false,"kind":"function","modifiers":[],"name":"getNonce","nameLocation":"25550:8:14","parameters":{"id":13276,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13275,"mutability":"mutable","name":"account","nameLocation":"25567:7:14","nodeType":"VariableDeclaration","scope":13280,"src":"25559:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":13274,"name":"address","nodeType":"ElementaryTypeName","src":"25559:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"25558:17:14"},"returnParameters":{"id":13279,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13278,"mutability":"mutable","name":"nonce","nameLocation":"25606:5:14","nodeType":"VariableDeclaration","scope":13280,"src":"25599:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":13277,"name":"uint64","nodeType":"ElementaryTypeName","src":"25599:6:14","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"25598:14:14"},"scope":15864,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13289,"nodeType":"FunctionDefinition","src":"25656:74:14","nodes":[],"documentation":{"id":13281,"nodeType":"StructuredDocumentation","src":"25619:32:14","text":"Get the nonce of a `Wallet`."},"functionSelector":"a5748aad","implemented":false,"kind":"function","modifiers":[],"name":"getNonce","nameLocation":"25665:8:14","parameters":{"id":13285,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13284,"mutability":"mutable","name":"wallet","nameLocation":"25690:6:14","nodeType":"VariableDeclaration","scope":13289,"src":"25674:22:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$12584_calldata_ptr","typeString":"struct VmSafe.Wallet"},"typeName":{"id":13283,"nodeType":"UserDefinedTypeName","pathNode":{"id":13282,"name":"Wallet","nameLocations":["25674:6:14"],"nodeType":"IdentifierPath","referencedDeclaration":12584,"src":"25674:6:14"},"referencedDeclaration":12584,"src":"25674:6:14","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$12584_storage_ptr","typeString":"struct VmSafe.Wallet"}},"visibility":"internal"}],"src":"25673:24:14"},"returnParameters":{"id":13288,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13287,"mutability":"mutable","name":"nonce","nameLocation":"25723:5:14","nodeType":"VariableDeclaration","scope":13289,"src":"25716:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":13286,"name":"uint64","nodeType":"ElementaryTypeName","src":"25716:6:14","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"25715:14:14"},"scope":15864,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13297,"nodeType":"FunctionDefinition","src":"25772:64:14","nodes":[],"documentation":{"id":13290,"nodeType":"StructuredDocumentation","src":"25736:31:14","text":"Gets all the recorded logs."},"functionSelector":"191553a4","implemented":false,"kind":"function","modifiers":[],"name":"getRecordedLogs","nameLocation":"25781:15:14","parameters":{"id":13291,"nodeType":"ParameterList","parameters":[],"src":"25796:2:14"},"returnParameters":{"id":13296,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13295,"mutability":"mutable","name":"logs","nameLocation":"25830:4:14","nodeType":"VariableDeclaration","scope":13297,"src":"25817:17:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Log_$12519_memory_ptr_$dyn_memory_ptr","typeString":"struct VmSafe.Log[]"},"typeName":{"baseType":{"id":13293,"nodeType":"UserDefinedTypeName","pathNode":{"id":13292,"name":"Log","nameLocations":["25817:3:14"],"nodeType":"IdentifierPath","referencedDeclaration":12519,"src":"25817:3:14"},"referencedDeclaration":12519,"src":"25817:3:14","typeDescriptions":{"typeIdentifier":"t_struct$_Log_$12519_storage_ptr","typeString":"struct VmSafe.Log"}},"id":13294,"nodeType":"ArrayTypeName","src":"25817:5:14","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Log_$12519_storage_$dyn_storage_ptr","typeString":"struct VmSafe.Log[]"}},"visibility":"internal"}],"src":"25816:19:14"},"scope":15864,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13304,"nodeType":"FunctionDefinition","src":"25886:62:14","nodes":[],"documentation":{"id":13298,"nodeType":"StructuredDocumentation","src":"25842:39:14","text":"Gets the gas used in the last call."},"functionSelector":"2b589b28","implemented":false,"kind":"function","modifiers":[],"name":"lastCallGas","nameLocation":"25895:11:14","parameters":{"id":13299,"nodeType":"ParameterList","parameters":[],"src":"25906:2:14"},"returnParameters":{"id":13303,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13302,"mutability":"mutable","name":"gas","nameLocation":"25943:3:14","nodeType":"VariableDeclaration","scope":13304,"src":"25932:14:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Gas_$12656_memory_ptr","typeString":"struct VmSafe.Gas"},"typeName":{"id":13301,"nodeType":"UserDefinedTypeName","pathNode":{"id":13300,"name":"Gas","nameLocations":["25932:3:14"],"nodeType":"IdentifierPath","referencedDeclaration":12656,"src":"25932:3:14"},"referencedDeclaration":12656,"src":"25932:3:14","typeDescriptions":{"typeIdentifier":"t_struct$_Gas_$12656_storage_ptr","typeString":"struct VmSafe.Gas"}},"visibility":"internal"}],"src":"25931:16:14"},"scope":15864,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13314,"nodeType":"FunctionDefinition","src":"26000:81:14","nodes":[],"documentation":{"id":13305,"nodeType":"StructuredDocumentation","src":"25954:41:14","text":"Loads a storage slot from an address."},"functionSelector":"667f9d70","implemented":false,"kind":"function","modifiers":[],"name":"load","nameLocation":"26009:4:14","parameters":{"id":13310,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13307,"mutability":"mutable","name":"target","nameLocation":"26022:6:14","nodeType":"VariableDeclaration","scope":13314,"src":"26014:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":13306,"name":"address","nodeType":"ElementaryTypeName","src":"26014:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":13309,"mutability":"mutable","name":"slot","nameLocation":"26038:4:14","nodeType":"VariableDeclaration","scope":13314,"src":"26030:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13308,"name":"bytes32","nodeType":"ElementaryTypeName","src":"26030:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"26013:30:14"},"returnParameters":{"id":13313,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13312,"mutability":"mutable","name":"data","nameLocation":"26075:4:14","nodeType":"VariableDeclaration","scope":13314,"src":"26067:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13311,"name":"bytes32","nodeType":"ElementaryTypeName","src":"26067:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"26066:14:14"},"scope":15864,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13318,"nodeType":"FunctionDefinition","src":"26172:37:14","nodes":[],"documentation":{"id":13315,"nodeType":"StructuredDocumentation","src":"26087:80:14","text":"Pauses gas metering (i.e. gas usage is not counted). Noop if already paused."},"functionSelector":"d1a5b36f","implemented":false,"kind":"function","modifiers":[],"name":"pauseGasMetering","nameLocation":"26181:16:14","parameters":{"id":13316,"nodeType":"ParameterList","parameters":[],"src":"26197:2:14"},"returnParameters":{"id":13317,"nodeType":"ParameterList","parameters":[],"src":"26208:0:14"},"scope":15864,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13322,"nodeType":"FunctionDefinition","src":"26261:27:14","nodes":[],"documentation":{"id":13319,"nodeType":"StructuredDocumentation","src":"26215:41:14","text":"Records all storage reads and writes."},"functionSelector":"266cf109","implemented":false,"kind":"function","modifiers":[],"name":"record","nameLocation":"26270:6:14","parameters":{"id":13320,"nodeType":"ParameterList","parameters":[],"src":"26276:2:14"},"returnParameters":{"id":13321,"nodeType":"ParameterList","parameters":[],"src":"26287:0:14"},"scope":15864,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13326,"nodeType":"FunctionDefinition","src":"26335:31:14","nodes":[],"documentation":{"id":13323,"nodeType":"StructuredDocumentation","src":"26294:36:14","text":"Record all the transaction logs."},"functionSelector":"41af2f52","implemented":false,"kind":"function","modifiers":[],"name":"recordLogs","nameLocation":"26344:10:14","parameters":{"id":13324,"nodeType":"ParameterList","parameters":[],"src":"26354:2:14"},"returnParameters":{"id":13325,"nodeType":"ParameterList","parameters":[],"src":"26365:0:14"},"scope":15864,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13330,"nodeType":"FunctionDefinition","src":"26456:38:14","nodes":[],"documentation":{"id":13327,"nodeType":"StructuredDocumentation","src":"26372:79:14","text":"Resumes gas metering (i.e. gas usage is counted again). Noop if already on."},"functionSelector":"2bcd50e0","implemented":false,"kind":"function","modifiers":[],"name":"resumeGasMetering","nameLocation":"26465:17:14","parameters":{"id":13328,"nodeType":"ParameterList","parameters":[],"src":"26482:2:14"},"returnParameters":{"id":13329,"nodeType":"ParameterList","parameters":[],"src":"26493:0:14"},"scope":15864,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13340,"nodeType":"FunctionDefinition","src":"26571:98:14","nodes":[],"documentation":{"id":13331,"nodeType":"StructuredDocumentation","src":"26500:66:14","text":"Performs an Ethereum JSON-RPC request to the current fork URL."},"functionSelector":"1206c8a8","implemented":false,"kind":"function","modifiers":[],"name":"rpc","nameLocation":"26580:3:14","parameters":{"id":13336,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13333,"mutability":"mutable","name":"method","nameLocation":"26600:6:14","nodeType":"VariableDeclaration","scope":13340,"src":"26584:22:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13332,"name":"string","nodeType":"ElementaryTypeName","src":"26584:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13335,"mutability":"mutable","name":"params","nameLocation":"26624:6:14","nodeType":"VariableDeclaration","scope":13340,"src":"26608:22:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13334,"name":"string","nodeType":"ElementaryTypeName","src":"26608:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"26583:48:14"},"returnParameters":{"id":13339,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13338,"mutability":"mutable","name":"data","nameLocation":"26663:4:14","nodeType":"VariableDeclaration","scope":13340,"src":"26650:17:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":13337,"name":"bytes","nodeType":"ElementaryTypeName","src":"26650:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"26649:19:14"},"scope":15864,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13352,"nodeType":"FunctionDefinition","src":"26744:142:14","nodes":[],"documentation":{"id":13341,"nodeType":"StructuredDocumentation","src":"26675:64:14","text":"Performs an Ethereum JSON-RPC request to the given endpoint."},"functionSelector":"0199a220","implemented":false,"kind":"function","modifiers":[],"name":"rpc","nameLocation":"26753:3:14","parameters":{"id":13348,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13343,"mutability":"mutable","name":"urlOrAlias","nameLocation":"26773:10:14","nodeType":"VariableDeclaration","scope":13352,"src":"26757:26:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13342,"name":"string","nodeType":"ElementaryTypeName","src":"26757:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13345,"mutability":"mutable","name":"method","nameLocation":"26801:6:14","nodeType":"VariableDeclaration","scope":13352,"src":"26785:22:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13344,"name":"string","nodeType":"ElementaryTypeName","src":"26785:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13347,"mutability":"mutable","name":"params","nameLocation":"26825:6:14","nodeType":"VariableDeclaration","scope":13352,"src":"26809:22:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13346,"name":"string","nodeType":"ElementaryTypeName","src":"26809:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"26756:76:14"},"returnParameters":{"id":13351,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13350,"mutability":"mutable","name":"data","nameLocation":"26880:4:14","nodeType":"VariableDeclaration","scope":13352,"src":"26867:17:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":13349,"name":"bytes","nodeType":"ElementaryTypeName","src":"26867:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"26866:19:14"},"scope":15864,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13356,"nodeType":"FunctionDefinition","src":"26954:42:14","nodes":[],"documentation":{"id":13353,"nodeType":"StructuredDocumentation","src":"26892:57:14","text":"Starts recording all map SSTOREs for later retrieval."},"functionSelector":"3e9705c0","implemented":false,"kind":"function","modifiers":[],"name":"startMappingRecording","nameLocation":"26963:21:14","parameters":{"id":13354,"nodeType":"ParameterList","parameters":[],"src":"26984:2:14"},"returnParameters":{"id":13355,"nodeType":"ParameterList","parameters":[],"src":"26995:0:14"},"scope":15864,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13360,"nodeType":"FunctionDefinition","src":"27140:44:14","nodes":[],"documentation":{"id":13357,"nodeType":"StructuredDocumentation","src":"27002:133:14","text":"Record all account accesses as part of CREATE, CALL or SELFDESTRUCT opcodes in order,\n along with the context of the calls"},"functionSelector":"cf22e3c9","implemented":false,"kind":"function","modifiers":[],"name":"startStateDiffRecording","nameLocation":"27149:23:14","parameters":{"id":13358,"nodeType":"ParameterList","parameters":[],"src":"27172:2:14"},"returnParameters":{"id":13359,"nodeType":"ParameterList","parameters":[],"src":"27183:0:14"},"scope":15864,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13368,"nodeType":"FunctionDefinition","src":"27292:92:14","nodes":[],"documentation":{"id":13361,"nodeType":"StructuredDocumentation","src":"27190:97:14","text":"Returns an ordered array of all account accesses from a `vm.startStateDiffRecording` session."},"functionSelector":"aa5cf90e","implemented":false,"kind":"function","modifiers":[],"name":"stopAndReturnStateDiff","nameLocation":"27301:22:14","parameters":{"id":13362,"nodeType":"ParameterList","parameters":[],"src":"27323:2:14"},"returnParameters":{"id":13367,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13366,"mutability":"mutable","name":"accountAccesses","nameLocation":"27367:15:14","nodeType":"VariableDeclaration","scope":13368,"src":"27344:38:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AccountAccess_$12630_memory_ptr_$dyn_memory_ptr","typeString":"struct VmSafe.AccountAccess[]"},"typeName":{"baseType":{"id":13364,"nodeType":"UserDefinedTypeName","pathNode":{"id":13363,"name":"AccountAccess","nameLocations":["27344:13:14"],"nodeType":"IdentifierPath","referencedDeclaration":12630,"src":"27344:13:14"},"referencedDeclaration":12630,"src":"27344:13:14","typeDescriptions":{"typeIdentifier":"t_struct$_AccountAccess_$12630_storage_ptr","typeString":"struct VmSafe.AccountAccess"}},"id":13365,"nodeType":"ArrayTypeName","src":"27344:15:14","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AccountAccess_$12630_storage_$dyn_storage_ptr","typeString":"struct VmSafe.AccountAccess[]"}},"visibility":"internal"}],"src":"27343:40:14"},"scope":15864,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13372,"nodeType":"FunctionDefinition","src":"27480:41:14","nodes":[],"documentation":{"id":13369,"nodeType":"StructuredDocumentation","src":"27390:85:14","text":"Stops recording all map SSTOREs for later retrieval and clears the recorded data."},"functionSelector":"0d4aae9b","implemented":false,"kind":"function","modifiers":[],"name":"stopMappingRecording","nameLocation":"27489:20:14","parameters":{"id":13370,"nodeType":"ParameterList","parameters":[],"src":"27509:2:14"},"returnParameters":{"id":13371,"nodeType":"ParameterList","parameters":[],"src":"27520:0:14"},"scope":15864,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13378,"nodeType":"FunctionDefinition","src":"27720:50:14","nodes":[],"documentation":{"id":13373,"nodeType":"StructuredDocumentation","src":"27564:151:14","text":"Closes file for reading, resetting the offset and allowing to read it from beginning with readLine.\n `path` is relative to the project root."},"functionSelector":"48c3241f","implemented":false,"kind":"function","modifiers":[],"name":"closeFile","nameLocation":"27729:9:14","parameters":{"id":13376,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13375,"mutability":"mutable","name":"path","nameLocation":"27755:4:14","nodeType":"VariableDeclaration","scope":13378,"src":"27739:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13374,"name":"string","nodeType":"ElementaryTypeName","src":"27739:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"27738:22:14"},"returnParameters":{"id":13377,"nodeType":"ParameterList","parameters":[],"src":"27769:0:14"},"scope":15864,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13388,"nodeType":"FunctionDefinition","src":"28085:93:14","nodes":[],"documentation":{"id":13379,"nodeType":"StructuredDocumentation","src":"27776:304:14","text":"Copies the contents of one file to another. This function will **overwrite** the contents of `to`.\n On success, the total number of bytes copied is returned and it is equal to the length of the `to` file as reported by `metadata`.\n Both `from` and `to` are relative to the project root."},"functionSelector":"a54a87d8","implemented":false,"kind":"function","modifiers":[],"name":"copyFile","nameLocation":"28094:8:14","parameters":{"id":13384,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13381,"mutability":"mutable","name":"from","nameLocation":"28119:4:14","nodeType":"VariableDeclaration","scope":13388,"src":"28103:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13380,"name":"string","nodeType":"ElementaryTypeName","src":"28103:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13383,"mutability":"mutable","name":"to","nameLocation":"28141:2:14","nodeType":"VariableDeclaration","scope":13388,"src":"28125:18:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13382,"name":"string","nodeType":"ElementaryTypeName","src":"28125:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"28102:42:14"},"returnParameters":{"id":13387,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13386,"mutability":"mutable","name":"copied","nameLocation":"28170:6:14","nodeType":"VariableDeclaration","scope":13388,"src":"28163:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":13385,"name":"uint64","nodeType":"ElementaryTypeName","src":"28163:6:14","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"28162:15:14"},"scope":15864,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13396,"nodeType":"FunctionDefinition","src":"28583:66:14","nodes":[],"documentation":{"id":13389,"nodeType":"StructuredDocumentation","src":"28184:394:14","text":"Creates a new, empty directory at the provided path.\n This cheatcode will revert in the following situations, but is not limited to just these cases:\n - User lacks permissions to modify `path`.\n - A parent of the given path doesn't exist and `recursive` is false.\n - `path` already exists and `recursive` is false.\n `path` is relative to the project root."},"functionSelector":"168b64d3","implemented":false,"kind":"function","modifiers":[],"name":"createDir","nameLocation":"28592:9:14","parameters":{"id":13394,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13391,"mutability":"mutable","name":"path","nameLocation":"28618:4:14","nodeType":"VariableDeclaration","scope":13396,"src":"28602:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13390,"name":"string","nodeType":"ElementaryTypeName","src":"28602:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13393,"mutability":"mutable","name":"recursive","nameLocation":"28629:9:14","nodeType":"VariableDeclaration","scope":13396,"src":"28624:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":13392,"name":"bool","nodeType":"ElementaryTypeName","src":"28624:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"28601:38:14"},"returnParameters":{"id":13395,"nodeType":"ParameterList","parameters":[],"src":"28648:0:14"},"scope":15864,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13404,"nodeType":"FunctionDefinition","src":"28879:93:14","nodes":[],"documentation":{"id":13397,"nodeType":"StructuredDocumentation","src":"28655:219:14","text":"Deploys a contract from an artifact file. Takes in the relative path to the json file or the path to the\n artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional."},"functionSelector":"9a8325a0","implemented":false,"kind":"function","modifiers":[],"name":"deployCode","nameLocation":"28888:10:14","parameters":{"id":13400,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13399,"mutability":"mutable","name":"artifactPath","nameLocation":"28915:12:14","nodeType":"VariableDeclaration","scope":13404,"src":"28899:28:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13398,"name":"string","nodeType":"ElementaryTypeName","src":"28899:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"28898:30:14"},"returnParameters":{"id":13403,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13402,"mutability":"mutable","name":"deployedAddress","nameLocation":"28955:15:14","nodeType":"VariableDeclaration","scope":13404,"src":"28947:23:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":13401,"name":"address","nodeType":"ElementaryTypeName","src":"28947:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"28946:25:14"},"scope":15864,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13414,"nodeType":"FunctionDefinition","src":"29265:141:14","nodes":[],"documentation":{"id":13405,"nodeType":"StructuredDocumentation","src":"28978:282:14","text":"Deploys a contract from an artifact file. Takes in the relative path to the json file or the path to the\n artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional.\n Additionaly accepts abi-encoded constructor arguments."},"functionSelector":"29ce9dde","implemented":false,"kind":"function","modifiers":[],"name":"deployCode","nameLocation":"29274:10:14","parameters":{"id":13410,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13407,"mutability":"mutable","name":"artifactPath","nameLocation":"29301:12:14","nodeType":"VariableDeclaration","scope":13414,"src":"29285:28:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13406,"name":"string","nodeType":"ElementaryTypeName","src":"29285:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13409,"mutability":"mutable","name":"constructorArgs","nameLocation":"29330:15:14","nodeType":"VariableDeclaration","scope":13414,"src":"29315:30:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":13408,"name":"bytes","nodeType":"ElementaryTypeName","src":"29315:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"29284:62:14"},"returnParameters":{"id":13413,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13412,"mutability":"mutable","name":"deployedAddress","nameLocation":"29389:15:14","nodeType":"VariableDeclaration","scope":13414,"src":"29381:23:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":13411,"name":"address","nodeType":"ElementaryTypeName","src":"29381:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"29380:25:14"},"scope":15864,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13422,"nodeType":"FunctionDefinition","src":"29501:69:14","nodes":[],"documentation":{"id":13415,"nodeType":"StructuredDocumentation","src":"29412:84:14","text":"Returns true if the given path points to an existing entity, else returns false."},"functionSelector":"261a323e","implemented":false,"kind":"function","modifiers":[],"name":"exists","nameLocation":"29510:6:14","parameters":{"id":13418,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13417,"mutability":"mutable","name":"path","nameLocation":"29533:4:14","nodeType":"VariableDeclaration","scope":13422,"src":"29517:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13416,"name":"string","nodeType":"ElementaryTypeName","src":"29517:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"29516:22:14"},"returnParameters":{"id":13421,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13420,"mutability":"mutable","name":"result","nameLocation":"29562:6:14","nodeType":"VariableDeclaration","scope":13422,"src":"29557:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":13419,"name":"bool","nodeType":"ElementaryTypeName","src":"29557:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"29556:13:14"},"scope":15864,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13431,"nodeType":"FunctionDefinition","src":"29635:84:14","nodes":[],"documentation":{"id":13423,"nodeType":"StructuredDocumentation","src":"29576:54:14","text":"Performs a foreign function call via the terminal."},"functionSelector":"89160467","implemented":false,"kind":"function","modifiers":[],"name":"ffi","nameLocation":"29644:3:14","parameters":{"id":13427,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13426,"mutability":"mutable","name":"commandInput","nameLocation":"29666:12:14","nodeType":"VariableDeclaration","scope":13431,"src":"29648:30:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":13424,"name":"string","nodeType":"ElementaryTypeName","src":"29648:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":13425,"nodeType":"ArrayTypeName","src":"29648:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"29647:32:14"},"returnParameters":{"id":13430,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13429,"mutability":"mutable","name":"result","nameLocation":"29711:6:14","nodeType":"VariableDeclaration","scope":13431,"src":"29698:19:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":13428,"name":"bytes","nodeType":"ElementaryTypeName","src":"29698:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"29697:21:14"},"scope":15864,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13440,"nodeType":"FunctionDefinition","src":"29818:93:14","nodes":[],"documentation":{"id":13432,"nodeType":"StructuredDocumentation","src":"29725:88:14","text":"Given a path, query the file system to get information about a file, directory, etc."},"functionSelector":"af368a08","implemented":false,"kind":"function","modifiers":[],"name":"fsMetadata","nameLocation":"29827:10:14","parameters":{"id":13435,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13434,"mutability":"mutable","name":"path","nameLocation":"29854:4:14","nodeType":"VariableDeclaration","scope":13440,"src":"29838:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13433,"name":"string","nodeType":"ElementaryTypeName","src":"29838:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"29837:22:14"},"returnParameters":{"id":13439,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13438,"mutability":"mutable","name":"metadata","nameLocation":"29901:8:14","nodeType":"VariableDeclaration","scope":13440,"src":"29883:26:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_FsMetadata_$12574_memory_ptr","typeString":"struct VmSafe.FsMetadata"},"typeName":{"id":13437,"nodeType":"UserDefinedTypeName","pathNode":{"id":13436,"name":"FsMetadata","nameLocations":["29883:10:14"],"nodeType":"IdentifierPath","referencedDeclaration":12574,"src":"29883:10:14"},"referencedDeclaration":12574,"src":"29883:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_FsMetadata_$12574_storage_ptr","typeString":"struct VmSafe.FsMetadata"}},"visibility":"internal"}],"src":"29882:28:14"},"scope":15864,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13448,"nodeType":"FunctionDefinition","src":"30149:101:14","nodes":[],"documentation":{"id":13441,"nodeType":"StructuredDocumentation","src":"29917:227:14","text":"Gets the creation bytecode from an artifact file. Takes in the relative path to the json file or the path to the\n artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional."},"functionSelector":"8d1cc925","implemented":false,"kind":"function","modifiers":[],"name":"getCode","nameLocation":"30158:7:14","parameters":{"id":13444,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13443,"mutability":"mutable","name":"artifactPath","nameLocation":"30182:12:14","nodeType":"VariableDeclaration","scope":13448,"src":"30166:28:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13442,"name":"string","nodeType":"ElementaryTypeName","src":"30166:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"30165:30:14"},"returnParameters":{"id":13447,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13446,"mutability":"mutable","name":"creationBytecode","nameLocation":"30232:16:14","nodeType":"VariableDeclaration","scope":13448,"src":"30219:29:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":13445,"name":"bytes","nodeType":"ElementaryTypeName","src":"30219:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"30218:31:14"},"scope":15864,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13456,"nodeType":"FunctionDefinition","src":"30488:108:14","nodes":[],"documentation":{"id":13449,"nodeType":"StructuredDocumentation","src":"30256:227:14","text":"Gets the deployed bytecode from an artifact file. Takes in the relative path to the json file or the path to the\n artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional."},"functionSelector":"3ebf73b4","implemented":false,"kind":"function","modifiers":[],"name":"getDeployedCode","nameLocation":"30497:15:14","parameters":{"id":13452,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13451,"mutability":"mutable","name":"artifactPath","nameLocation":"30529:12:14","nodeType":"VariableDeclaration","scope":13456,"src":"30513:28:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13450,"name":"string","nodeType":"ElementaryTypeName","src":"30513:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"30512:30:14"},"returnParameters":{"id":13455,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13454,"mutability":"mutable","name":"runtimeBytecode","nameLocation":"30579:15:14","nodeType":"VariableDeclaration","scope":13456,"src":"30566:28:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":13453,"name":"bytes","nodeType":"ElementaryTypeName","src":"30566:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"30565:30:14"},"scope":15864,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13464,"nodeType":"FunctionDefinition","src":"30702:68:14","nodes":[],"documentation":{"id":13457,"nodeType":"StructuredDocumentation","src":"30602:95:14","text":"Returns true if the path exists on disk and is pointing at a directory, else returns false."},"functionSelector":"7d15d019","implemented":false,"kind":"function","modifiers":[],"name":"isDir","nameLocation":"30711:5:14","parameters":{"id":13460,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13459,"mutability":"mutable","name":"path","nameLocation":"30733:4:14","nodeType":"VariableDeclaration","scope":13464,"src":"30717:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13458,"name":"string","nodeType":"ElementaryTypeName","src":"30717:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"30716:22:14"},"returnParameters":{"id":13463,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13462,"mutability":"mutable","name":"result","nameLocation":"30762:6:14","nodeType":"VariableDeclaration","scope":13464,"src":"30757:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":13461,"name":"bool","nodeType":"ElementaryTypeName","src":"30757:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"30756:13:14"},"scope":15864,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13472,"nodeType":"FunctionDefinition","src":"30879:69:14","nodes":[],"documentation":{"id":13465,"nodeType":"StructuredDocumentation","src":"30776:98:14","text":"Returns true if the path exists on disk and is pointing at a regular file, else returns false."},"functionSelector":"e0eb04d4","implemented":false,"kind":"function","modifiers":[],"name":"isFile","nameLocation":"30888:6:14","parameters":{"id":13468,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13467,"mutability":"mutable","name":"path","nameLocation":"30911:4:14","nodeType":"VariableDeclaration","scope":13472,"src":"30895:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13466,"name":"string","nodeType":"ElementaryTypeName","src":"30895:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"30894:22:14"},"returnParameters":{"id":13471,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13470,"mutability":"mutable","name":"result","nameLocation":"30940:6:14","nodeType":"VariableDeclaration","scope":13472,"src":"30935:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":13469,"name":"bool","nodeType":"ElementaryTypeName","src":"30935:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"30934:13:14"},"scope":15864,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13478,"nodeType":"FunctionDefinition","src":"31004:66:14","nodes":[],"documentation":{"id":13473,"nodeType":"StructuredDocumentation","src":"30954:45:14","text":"Get the path of the current project root."},"functionSelector":"d930a0e6","implemented":false,"kind":"function","modifiers":[],"name":"projectRoot","nameLocation":"31013:11:14","parameters":{"id":13474,"nodeType":"ParameterList","parameters":[],"src":"31024:2:14"},"returnParameters":{"id":13477,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13476,"mutability":"mutable","name":"path","nameLocation":"31064:4:14","nodeType":"VariableDeclaration","scope":13478,"src":"31050:18:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":13475,"name":"string","nodeType":"ElementaryTypeName","src":"31050:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"31049:20:14"},"scope":15864,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13486,"nodeType":"FunctionDefinition","src":"31137:83:14","nodes":[],"documentation":{"id":13479,"nodeType":"StructuredDocumentation","src":"31076:56:14","text":"Prompts the user for a string value in the terminal."},"functionSelector":"47eaf474","implemented":false,"kind":"function","modifiers":[],"name":"prompt","nameLocation":"31146:6:14","parameters":{"id":13482,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13481,"mutability":"mutable","name":"promptText","nameLocation":"31169:10:14","nodeType":"VariableDeclaration","scope":13486,"src":"31153:26:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13480,"name":"string","nodeType":"ElementaryTypeName","src":"31153:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"31152:28:14"},"returnParameters":{"id":13485,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13484,"mutability":"mutable","name":"input","nameLocation":"31213:5:14","nodeType":"VariableDeclaration","scope":13486,"src":"31199:19:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":13483,"name":"string","nodeType":"ElementaryTypeName","src":"31199:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"31198:21:14"},"scope":15864,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13494,"nodeType":"FunctionDefinition","src":"31283:78:14","nodes":[],"documentation":{"id":13487,"nodeType":"StructuredDocumentation","src":"31226:52:14","text":"Prompts the user for an address in the terminal."},"functionSelector":"62ee05f4","implemented":false,"kind":"function","modifiers":[],"name":"promptAddress","nameLocation":"31292:13:14","parameters":{"id":13490,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13489,"mutability":"mutable","name":"promptText","nameLocation":"31322:10:14","nodeType":"VariableDeclaration","scope":13494,"src":"31306:26:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13488,"name":"string","nodeType":"ElementaryTypeName","src":"31306:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"31305:28:14"},"returnParameters":{"id":13493,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13492,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":13494,"src":"31352:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":13491,"name":"address","nodeType":"ElementaryTypeName","src":"31352:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"31351:9:14"},"scope":15864,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13502,"nodeType":"FunctionDefinition","src":"31435:89:14","nodes":[],"documentation":{"id":13495,"nodeType":"StructuredDocumentation","src":"31367:63:14","text":"Prompts the user for a hidden string value in the terminal."},"functionSelector":"1e279d41","implemented":false,"kind":"function","modifiers":[],"name":"promptSecret","nameLocation":"31444:12:14","parameters":{"id":13498,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13497,"mutability":"mutable","name":"promptText","nameLocation":"31473:10:14","nodeType":"VariableDeclaration","scope":13502,"src":"31457:26:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13496,"name":"string","nodeType":"ElementaryTypeName","src":"31457:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"31456:28:14"},"returnParameters":{"id":13501,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13500,"mutability":"mutable","name":"input","nameLocation":"31517:5:14","nodeType":"VariableDeclaration","scope":13502,"src":"31503:19:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":13499,"name":"string","nodeType":"ElementaryTypeName","src":"31503:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"31502:21:14"},"scope":15864,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13510,"nodeType":"FunctionDefinition","src":"31604:81:14","nodes":[],"documentation":{"id":13503,"nodeType":"StructuredDocumentation","src":"31530:69:14","text":"Prompts the user for hidden uint256 in the terminal (usually pk)."},"functionSelector":"69ca02b7","implemented":false,"kind":"function","modifiers":[],"name":"promptSecretUint","nameLocation":"31613:16:14","parameters":{"id":13506,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13505,"mutability":"mutable","name":"promptText","nameLocation":"31646:10:14","nodeType":"VariableDeclaration","scope":13510,"src":"31630:26:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13504,"name":"string","nodeType":"ElementaryTypeName","src":"31630:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"31629:28:14"},"returnParameters":{"id":13509,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13508,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":13510,"src":"31676:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13507,"name":"uint256","nodeType":"ElementaryTypeName","src":"31676:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"31675:9:14"},"scope":15864,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13518,"nodeType":"FunctionDefinition","src":"31745:75:14","nodes":[],"documentation":{"id":13511,"nodeType":"StructuredDocumentation","src":"31691:49:14","text":"Prompts the user for uint256 in the terminal."},"functionSelector":"652fd489","implemented":false,"kind":"function","modifiers":[],"name":"promptUint","nameLocation":"31754:10:14","parameters":{"id":13514,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13513,"mutability":"mutable","name":"promptText","nameLocation":"31781:10:14","nodeType":"VariableDeclaration","scope":13518,"src":"31765:26:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13512,"name":"string","nodeType":"ElementaryTypeName","src":"31765:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"31764:28:14"},"returnParameters":{"id":13517,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13516,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":13518,"src":"31811:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13515,"name":"uint256","nodeType":"ElementaryTypeName","src":"31811:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"31810:9:14"},"scope":15864,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13528,"nodeType":"FunctionDefinition","src":"32068:89:14","nodes":[],"documentation":{"id":13519,"nodeType":"StructuredDocumentation","src":"31826:237:14","text":"Reads the directory at the given path recursively, up to `maxDepth`.\n `maxDepth` defaults to 1, meaning only the direct children of the given directory will be returned.\n Follows symbolic links if `followLinks` is true."},"functionSelector":"c4bc59e0","implemented":false,"kind":"function","modifiers":[],"name":"readDir","nameLocation":"32077:7:14","parameters":{"id":13522,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13521,"mutability":"mutable","name":"path","nameLocation":"32101:4:14","nodeType":"VariableDeclaration","scope":13528,"src":"32085:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13520,"name":"string","nodeType":"ElementaryTypeName","src":"32085:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"32084:22:14"},"returnParameters":{"id":13527,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13526,"mutability":"mutable","name":"entries","nameLocation":"32148:7:14","nodeType":"VariableDeclaration","scope":13528,"src":"32130:25:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DirEntry_$12558_memory_ptr_$dyn_memory_ptr","typeString":"struct VmSafe.DirEntry[]"},"typeName":{"baseType":{"id":13524,"nodeType":"UserDefinedTypeName","pathNode":{"id":13523,"name":"DirEntry","nameLocations":["32130:8:14"],"nodeType":"IdentifierPath","referencedDeclaration":12558,"src":"32130:8:14"},"referencedDeclaration":12558,"src":"32130:8:14","typeDescriptions":{"typeIdentifier":"t_struct$_DirEntry_$12558_storage_ptr","typeString":"struct VmSafe.DirEntry"}},"id":13525,"nodeType":"ArrayTypeName","src":"32130:10:14","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DirEntry_$12558_storage_$dyn_storage_ptr","typeString":"struct VmSafe.DirEntry[]"}},"visibility":"internal"}],"src":"32129:27:14"},"scope":15864,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13540,"nodeType":"FunctionDefinition","src":"32194:106:14","nodes":[],"documentation":{"id":13529,"nodeType":"StructuredDocumentation","src":"32163:26:14","text":"See `readDir(string)`."},"functionSelector":"1497876c","implemented":false,"kind":"function","modifiers":[],"name":"readDir","nameLocation":"32203:7:14","parameters":{"id":13534,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13531,"mutability":"mutable","name":"path","nameLocation":"32227:4:14","nodeType":"VariableDeclaration","scope":13540,"src":"32211:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13530,"name":"string","nodeType":"ElementaryTypeName","src":"32211:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13533,"mutability":"mutable","name":"maxDepth","nameLocation":"32240:8:14","nodeType":"VariableDeclaration","scope":13540,"src":"32233:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":13532,"name":"uint64","nodeType":"ElementaryTypeName","src":"32233:6:14","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"32210:39:14"},"returnParameters":{"id":13539,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13538,"mutability":"mutable","name":"entries","nameLocation":"32291:7:14","nodeType":"VariableDeclaration","scope":13540,"src":"32273:25:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DirEntry_$12558_memory_ptr_$dyn_memory_ptr","typeString":"struct VmSafe.DirEntry[]"},"typeName":{"baseType":{"id":13536,"nodeType":"UserDefinedTypeName","pathNode":{"id":13535,"name":"DirEntry","nameLocations":["32273:8:14"],"nodeType":"IdentifierPath","referencedDeclaration":12558,"src":"32273:8:14"},"referencedDeclaration":12558,"src":"32273:8:14","typeDescriptions":{"typeIdentifier":"t_struct$_DirEntry_$12558_storage_ptr","typeString":"struct VmSafe.DirEntry"}},"id":13537,"nodeType":"ArrayTypeName","src":"32273:10:14","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DirEntry_$12558_storage_$dyn_storage_ptr","typeString":"struct VmSafe.DirEntry[]"}},"visibility":"internal"}],"src":"32272:27:14"},"scope":15864,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13554,"nodeType":"FunctionDefinition","src":"32337:148:14","nodes":[],"documentation":{"id":13541,"nodeType":"StructuredDocumentation","src":"32306:26:14","text":"See `readDir(string)`."},"functionSelector":"8102d70d","implemented":false,"kind":"function","modifiers":[],"name":"readDir","nameLocation":"32346:7:14","parameters":{"id":13548,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13543,"mutability":"mutable","name":"path","nameLocation":"32370:4:14","nodeType":"VariableDeclaration","scope":13554,"src":"32354:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13542,"name":"string","nodeType":"ElementaryTypeName","src":"32354:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13545,"mutability":"mutable","name":"maxDepth","nameLocation":"32383:8:14","nodeType":"VariableDeclaration","scope":13554,"src":"32376:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":13544,"name":"uint64","nodeType":"ElementaryTypeName","src":"32376:6:14","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":13547,"mutability":"mutable","name":"followLinks","nameLocation":"32398:11:14","nodeType":"VariableDeclaration","scope":13554,"src":"32393:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":13546,"name":"bool","nodeType":"ElementaryTypeName","src":"32393:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"32353:57:14"},"returnParameters":{"id":13553,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13552,"mutability":"mutable","name":"entries","nameLocation":"32476:7:14","nodeType":"VariableDeclaration","scope":13554,"src":"32458:25:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DirEntry_$12558_memory_ptr_$dyn_memory_ptr","typeString":"struct VmSafe.DirEntry[]"},"typeName":{"baseType":{"id":13550,"nodeType":"UserDefinedTypeName","pathNode":{"id":13549,"name":"DirEntry","nameLocations":["32458:8:14"],"nodeType":"IdentifierPath","referencedDeclaration":12558,"src":"32458:8:14"},"referencedDeclaration":12558,"src":"32458:8:14","typeDescriptions":{"typeIdentifier":"t_struct$_DirEntry_$12558_storage_ptr","typeString":"struct VmSafe.DirEntry"}},"id":13551,"nodeType":"ArrayTypeName","src":"32458:10:14","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DirEntry_$12558_storage_$dyn_storage_ptr","typeString":"struct VmSafe.DirEntry[]"}},"visibility":"internal"}],"src":"32457:27:14"},"scope":15864,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13562,"nodeType":"FunctionDefinition","src":"32583:83:14","nodes":[],"documentation":{"id":13555,"nodeType":"StructuredDocumentation","src":"32491:87:14","text":"Reads the entire content of file to string. `path` is relative to the project root."},"functionSelector":"60f9bb11","implemented":false,"kind":"function","modifiers":[],"name":"readFile","nameLocation":"32592:8:14","parameters":{"id":13558,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13557,"mutability":"mutable","name":"path","nameLocation":"32617:4:14","nodeType":"VariableDeclaration","scope":13562,"src":"32601:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13556,"name":"string","nodeType":"ElementaryTypeName","src":"32601:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"32600:22:14"},"returnParameters":{"id":13561,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13560,"mutability":"mutable","name":"data","nameLocation":"32660:4:14","nodeType":"VariableDeclaration","scope":13562,"src":"32646:18:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":13559,"name":"string","nodeType":"ElementaryTypeName","src":"32646:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"32645:20:14"},"scope":15864,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13570,"nodeType":"FunctionDefinition","src":"32764:88:14","nodes":[],"documentation":{"id":13563,"nodeType":"StructuredDocumentation","src":"32672:87:14","text":"Reads the entire content of file as binary. `path` is relative to the project root."},"functionSelector":"16ed7bc4","implemented":false,"kind":"function","modifiers":[],"name":"readFileBinary","nameLocation":"32773:14:14","parameters":{"id":13566,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13565,"mutability":"mutable","name":"path","nameLocation":"32804:4:14","nodeType":"VariableDeclaration","scope":13570,"src":"32788:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13564,"name":"string","nodeType":"ElementaryTypeName","src":"32788:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"32787:22:14"},"returnParameters":{"id":13569,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13568,"mutability":"mutable","name":"data","nameLocation":"32846:4:14","nodeType":"VariableDeclaration","scope":13570,"src":"32833:17:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":13567,"name":"bytes","nodeType":"ElementaryTypeName","src":"32833:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"32832:19:14"},"scope":15864,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13578,"nodeType":"FunctionDefinition","src":"32901:83:14","nodes":[],"documentation":{"id":13571,"nodeType":"StructuredDocumentation","src":"32858:38:14","text":"Reads next line of file to string."},"functionSelector":"70f55728","implemented":false,"kind":"function","modifiers":[],"name":"readLine","nameLocation":"32910:8:14","parameters":{"id":13574,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13573,"mutability":"mutable","name":"path","nameLocation":"32935:4:14","nodeType":"VariableDeclaration","scope":13578,"src":"32919:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13572,"name":"string","nodeType":"ElementaryTypeName","src":"32919:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"32918:22:14"},"returnParameters":{"id":13577,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13576,"mutability":"mutable","name":"line","nameLocation":"32978:4:14","nodeType":"VariableDeclaration","scope":13578,"src":"32964:18:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":13575,"name":"string","nodeType":"ElementaryTypeName","src":"32964:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"32963:20:14"},"scope":15864,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13586,"nodeType":"FunctionDefinition","src":"33243:93:14","nodes":[],"documentation":{"id":13579,"nodeType":"StructuredDocumentation","src":"32990:248:14","text":"Reads a symbolic link, returning the path that the link points to.\n This cheatcode will revert in the following situations, but is not limited to just these cases:\n - `path` is not a symbolic link.\n - `path` does not exist."},"functionSelector":"9f5684a2","implemented":false,"kind":"function","modifiers":[],"name":"readLink","nameLocation":"33252:8:14","parameters":{"id":13582,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13581,"mutability":"mutable","name":"linkPath","nameLocation":"33277:8:14","nodeType":"VariableDeclaration","scope":13586,"src":"33261:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13580,"name":"string","nodeType":"ElementaryTypeName","src":"33261:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"33260:26:14"},"returnParameters":{"id":13585,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13584,"mutability":"mutable","name":"targetPath","nameLocation":"33324:10:14","nodeType":"VariableDeclaration","scope":13586,"src":"33310:24:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":13583,"name":"string","nodeType":"ElementaryTypeName","src":"33310:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"33309:26:14"},"scope":15864,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13594,"nodeType":"FunctionDefinition","src":"33726:66:14","nodes":[],"documentation":{"id":13587,"nodeType":"StructuredDocumentation","src":"33342:379:14","text":"Removes a directory at the provided path.\n This cheatcode will revert in the following situations, but is not limited to just these cases:\n - `path` doesn't exist.\n - `path` isn't a directory.\n - User lacks permissions to modify `path`.\n - The directory is not empty and `recursive` is false.\n `path` is relative to the project root."},"functionSelector":"45c62011","implemented":false,"kind":"function","modifiers":[],"name":"removeDir","nameLocation":"33735:9:14","parameters":{"id":13592,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13589,"mutability":"mutable","name":"path","nameLocation":"33761:4:14","nodeType":"VariableDeclaration","scope":13594,"src":"33745:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13588,"name":"string","nodeType":"ElementaryTypeName","src":"33745:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13591,"mutability":"mutable","name":"recursive","nameLocation":"33772:9:14","nodeType":"VariableDeclaration","scope":13594,"src":"33767:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":13590,"name":"bool","nodeType":"ElementaryTypeName","src":"33767:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"33744:38:14"},"returnParameters":{"id":13593,"nodeType":"ParameterList","parameters":[],"src":"33791:0:14"},"scope":15864,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13600,"nodeType":"FunctionDefinition","src":"34125:51:14","nodes":[],"documentation":{"id":13595,"nodeType":"StructuredDocumentation","src":"33798:322:14","text":"Removes a file from the filesystem.\n This cheatcode will revert in the following situations, but is not limited to just these cases:\n - `path` points to a directory.\n - The file doesn't exist.\n - The user lacks permissions to remove the file.\n `path` is relative to the project root."},"functionSelector":"f1afe04d","implemented":false,"kind":"function","modifiers":[],"name":"removeFile","nameLocation":"34134:10:14","parameters":{"id":13598,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13597,"mutability":"mutable","name":"path","nameLocation":"34161:4:14","nodeType":"VariableDeclaration","scope":13600,"src":"34145:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13596,"name":"string","nodeType":"ElementaryTypeName","src":"34145:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"34144:22:14"},"returnParameters":{"id":13599,"nodeType":"ParameterList","parameters":[],"src":"34175:0:14"},"scope":15864,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13610,"nodeType":"FunctionDefinition","src":"34283:91:14","nodes":[],"documentation":{"id":13601,"nodeType":"StructuredDocumentation","src":"34182:96:14","text":"Performs a foreign function call via terminal and returns the exit code, stdout, and stderr."},"functionSelector":"f45c1ce7","implemented":false,"kind":"function","modifiers":[],"name":"tryFfi","nameLocation":"34292:6:14","parameters":{"id":13605,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13604,"mutability":"mutable","name":"commandInput","nameLocation":"34317:12:14","nodeType":"VariableDeclaration","scope":13610,"src":"34299:30:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":13602,"name":"string","nodeType":"ElementaryTypeName","src":"34299:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":13603,"nodeType":"ArrayTypeName","src":"34299:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"34298:32:14"},"returnParameters":{"id":13609,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13608,"mutability":"mutable","name":"result","nameLocation":"34366:6:14","nodeType":"VariableDeclaration","scope":13610,"src":"34349:23:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_FfiResult_$12592_memory_ptr","typeString":"struct VmSafe.FfiResult"},"typeName":{"id":13607,"nodeType":"UserDefinedTypeName","pathNode":{"id":13606,"name":"FfiResult","nameLocations":["34349:9:14"],"nodeType":"IdentifierPath","referencedDeclaration":12592,"src":"34349:9:14"},"referencedDeclaration":12592,"src":"34349:9:14","typeDescriptions":{"typeIdentifier":"t_struct$_FfiResult_$12592_storage_ptr","typeString":"struct VmSafe.FfiResult"}},"visibility":"internal"}],"src":"34348:25:14"},"scope":15864,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13616,"nodeType":"FunctionDefinition","src":"34439:60:14","nodes":[],"documentation":{"id":13611,"nodeType":"StructuredDocumentation","src":"34380:54:14","text":"Returns the time since unix epoch in milliseconds."},"functionSelector":"625387dc","implemented":false,"kind":"function","modifiers":[],"name":"unixTime","nameLocation":"34448:8:14","parameters":{"id":13612,"nodeType":"ParameterList","parameters":[],"src":"34456:2:14"},"returnParameters":{"id":13615,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13614,"mutability":"mutable","name":"milliseconds","nameLocation":"34485:12:14","nodeType":"VariableDeclaration","scope":13616,"src":"34477:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13613,"name":"uint256","nodeType":"ElementaryTypeName","src":"34477:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34476:22:14"},"scope":15864,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13624,"nodeType":"FunctionDefinition","src":"34668:72:14","nodes":[],"documentation":{"id":13617,"nodeType":"StructuredDocumentation","src":"34505:158:14","text":"Writes data to file, creating a file if it does not exist, and entirely replacing its contents if it does.\n `path` is relative to the project root."},"functionSelector":"897e0a97","implemented":false,"kind":"function","modifiers":[],"name":"writeFile","nameLocation":"34677:9:14","parameters":{"id":13622,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13619,"mutability":"mutable","name":"path","nameLocation":"34703:4:14","nodeType":"VariableDeclaration","scope":13624,"src":"34687:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13618,"name":"string","nodeType":"ElementaryTypeName","src":"34687:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13621,"mutability":"mutable","name":"data","nameLocation":"34725:4:14","nodeType":"VariableDeclaration","scope":13624,"src":"34709:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13620,"name":"string","nodeType":"ElementaryTypeName","src":"34709:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"34686:44:14"},"returnParameters":{"id":13623,"nodeType":"ParameterList","parameters":[],"src":"34739:0:14"},"scope":15864,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13632,"nodeType":"FunctionDefinition","src":"34918:77:14","nodes":[],"documentation":{"id":13625,"nodeType":"StructuredDocumentation","src":"34746:167:14","text":"Writes binary data to a file, creating a file if it does not exist, and entirely replacing its contents if it does.\n `path` is relative to the project root."},"functionSelector":"1f21fc80","implemented":false,"kind":"function","modifiers":[],"name":"writeFileBinary","nameLocation":"34927:15:14","parameters":{"id":13630,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13627,"mutability":"mutable","name":"path","nameLocation":"34959:4:14","nodeType":"VariableDeclaration","scope":13632,"src":"34943:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13626,"name":"string","nodeType":"ElementaryTypeName","src":"34943:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13629,"mutability":"mutable","name":"data","nameLocation":"34980:4:14","nodeType":"VariableDeclaration","scope":13632,"src":"34965:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":13628,"name":"bytes","nodeType":"ElementaryTypeName","src":"34965:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"34942:43:14"},"returnParameters":{"id":13631,"nodeType":"ParameterList","parameters":[],"src":"34994:0:14"},"scope":15864,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13640,"nodeType":"FunctionDefinition","src":"35116:72:14","nodes":[],"documentation":{"id":13633,"nodeType":"StructuredDocumentation","src":"35001:110:14","text":"Writes line to file, creating a file if it does not exist.\n `path` is relative to the project root."},"functionSelector":"619d897f","implemented":false,"kind":"function","modifiers":[],"name":"writeLine","nameLocation":"35125:9:14","parameters":{"id":13638,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13635,"mutability":"mutable","name":"path","nameLocation":"35151:4:14","nodeType":"VariableDeclaration","scope":13640,"src":"35135:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13634,"name":"string","nodeType":"ElementaryTypeName","src":"35135:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13637,"mutability":"mutable","name":"data","nameLocation":"35173:4:14","nodeType":"VariableDeclaration","scope":13640,"src":"35157:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13636,"name":"string","nodeType":"ElementaryTypeName","src":"35157:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"35134:44:14"},"returnParameters":{"id":13639,"nodeType":"ParameterList","parameters":[],"src":"35187:0:14"},"scope":15864,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13650,"nodeType":"FunctionDefinition","src":"35381:91:14","nodes":[],"documentation":{"id":13641,"nodeType":"StructuredDocumentation","src":"35225:151:14","text":"Checks if `key` exists in a JSON object\n `keyExists` is being deprecated in favor of `keyExistsJson`. It will be removed in future versions."},"functionSelector":"528a683c","implemented":false,"kind":"function","modifiers":[],"name":"keyExists","nameLocation":"35390:9:14","parameters":{"id":13646,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13643,"mutability":"mutable","name":"json","nameLocation":"35416:4:14","nodeType":"VariableDeclaration","scope":13650,"src":"35400:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13642,"name":"string","nodeType":"ElementaryTypeName","src":"35400:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13645,"mutability":"mutable","name":"key","nameLocation":"35438:3:14","nodeType":"VariableDeclaration","scope":13650,"src":"35422:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13644,"name":"string","nodeType":"ElementaryTypeName","src":"35422:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"35399:43:14"},"returnParameters":{"id":13649,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13648,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":13650,"src":"35466:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":13647,"name":"bool","nodeType":"ElementaryTypeName","src":"35466:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"35465:6:14"},"scope":15864,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13660,"nodeType":"FunctionDefinition","src":"35527:95:14","nodes":[],"documentation":{"id":13651,"nodeType":"StructuredDocumentation","src":"35478:44:14","text":"Checks if `key` exists in a JSON object."},"functionSelector":"db4235f6","implemented":false,"kind":"function","modifiers":[],"name":"keyExistsJson","nameLocation":"35536:13:14","parameters":{"id":13656,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13653,"mutability":"mutable","name":"json","nameLocation":"35566:4:14","nodeType":"VariableDeclaration","scope":13660,"src":"35550:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13652,"name":"string","nodeType":"ElementaryTypeName","src":"35550:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13655,"mutability":"mutable","name":"key","nameLocation":"35588:3:14","nodeType":"VariableDeclaration","scope":13660,"src":"35572:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13654,"name":"string","nodeType":"ElementaryTypeName","src":"35572:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"35549:43:14"},"returnParameters":{"id":13659,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13658,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":13660,"src":"35616:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":13657,"name":"bool","nodeType":"ElementaryTypeName","src":"35616:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"35615:6:14"},"scope":15864,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13670,"nodeType":"FunctionDefinition","src":"35703:101:14","nodes":[],"documentation":{"id":13661,"nodeType":"StructuredDocumentation","src":"35628:70:14","text":"Parses a string of JSON data at `key` and coerces it to `address`."},"functionSelector":"1e19e657","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonAddress","nameLocation":"35712:16:14","parameters":{"id":13666,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13663,"mutability":"mutable","name":"json","nameLocation":"35745:4:14","nodeType":"VariableDeclaration","scope":13670,"src":"35729:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13662,"name":"string","nodeType":"ElementaryTypeName","src":"35729:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13665,"mutability":"mutable","name":"key","nameLocation":"35767:3:14","nodeType":"VariableDeclaration","scope":13670,"src":"35751:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13664,"name":"string","nodeType":"ElementaryTypeName","src":"35751:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"35728:43:14"},"returnParameters":{"id":13669,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13668,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":13670,"src":"35795:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":13667,"name":"address","nodeType":"ElementaryTypeName","src":"35795:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"35794:9:14"},"scope":15864,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13681,"nodeType":"FunctionDefinition","src":"35887:139:14","nodes":[],"documentation":{"id":13671,"nodeType":"StructuredDocumentation","src":"35810:72:14","text":"Parses a string of JSON data at `key` and coerces it to `address[]`."},"functionSelector":"2fce7883","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonAddressArray","nameLocation":"35896:21:14","parameters":{"id":13676,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13673,"mutability":"mutable","name":"json","nameLocation":"35934:4:14","nodeType":"VariableDeclaration","scope":13681,"src":"35918:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13672,"name":"string","nodeType":"ElementaryTypeName","src":"35918:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13675,"mutability":"mutable","name":"key","nameLocation":"35956:3:14","nodeType":"VariableDeclaration","scope":13681,"src":"35940:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13674,"name":"string","nodeType":"ElementaryTypeName","src":"35940:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"35917:43:14"},"returnParameters":{"id":13680,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13679,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":13681,"src":"36008:16:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":13677,"name":"address","nodeType":"ElementaryTypeName","src":"36008:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":13678,"nodeType":"ArrayTypeName","src":"36008:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"36007:18:14"},"scope":15864,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13691,"nodeType":"FunctionDefinition","src":"36104:95:14","nodes":[],"documentation":{"id":13682,"nodeType":"StructuredDocumentation","src":"36032:67:14","text":"Parses a string of JSON data at `key` and coerces it to `bool`."},"functionSelector":"9f86dc91","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonBool","nameLocation":"36113:13:14","parameters":{"id":13687,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13684,"mutability":"mutable","name":"json","nameLocation":"36143:4:14","nodeType":"VariableDeclaration","scope":13691,"src":"36127:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13683,"name":"string","nodeType":"ElementaryTypeName","src":"36127:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13686,"mutability":"mutable","name":"key","nameLocation":"36165:3:14","nodeType":"VariableDeclaration","scope":13691,"src":"36149:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13685,"name":"string","nodeType":"ElementaryTypeName","src":"36149:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"36126:43:14"},"returnParameters":{"id":13690,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13689,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":13691,"src":"36193:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":13688,"name":"bool","nodeType":"ElementaryTypeName","src":"36193:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"36192:6:14"},"scope":15864,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13702,"nodeType":"FunctionDefinition","src":"36279:109:14","nodes":[],"documentation":{"id":13692,"nodeType":"StructuredDocumentation","src":"36205:69:14","text":"Parses a string of JSON data at `key` and coerces it to `bool[]`."},"functionSelector":"91f3b94f","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonBoolArray","nameLocation":"36288:18:14","parameters":{"id":13697,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13694,"mutability":"mutable","name":"json","nameLocation":"36323:4:14","nodeType":"VariableDeclaration","scope":13702,"src":"36307:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13693,"name":"string","nodeType":"ElementaryTypeName","src":"36307:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13696,"mutability":"mutable","name":"key","nameLocation":"36345:3:14","nodeType":"VariableDeclaration","scope":13702,"src":"36329:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13695,"name":"string","nodeType":"ElementaryTypeName","src":"36329:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"36306:43:14"},"returnParameters":{"id":13701,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13700,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":13702,"src":"36373:13:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":13698,"name":"bool","nodeType":"ElementaryTypeName","src":"36373:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":13699,"nodeType":"ArrayTypeName","src":"36373:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"src":"36372:15:14"},"scope":15864,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13712,"nodeType":"FunctionDefinition","src":"36467:104:14","nodes":[],"documentation":{"id":13703,"nodeType":"StructuredDocumentation","src":"36394:68:14","text":"Parses a string of JSON data at `key` and coerces it to `bytes`."},"functionSelector":"fd921be8","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonBytes","nameLocation":"36476:14:14","parameters":{"id":13708,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13705,"mutability":"mutable","name":"json","nameLocation":"36507:4:14","nodeType":"VariableDeclaration","scope":13712,"src":"36491:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13704,"name":"string","nodeType":"ElementaryTypeName","src":"36491:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13707,"mutability":"mutable","name":"key","nameLocation":"36529:3:14","nodeType":"VariableDeclaration","scope":13712,"src":"36513:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13706,"name":"string","nodeType":"ElementaryTypeName","src":"36513:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"36490:43:14"},"returnParameters":{"id":13711,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13710,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":13712,"src":"36557:12:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":13709,"name":"bytes","nodeType":"ElementaryTypeName","src":"36557:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"36556:14:14"},"scope":15864,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13722,"nodeType":"FunctionDefinition","src":"36652:101:14","nodes":[],"documentation":{"id":13713,"nodeType":"StructuredDocumentation","src":"36577:70:14","text":"Parses a string of JSON data at `key` and coerces it to `bytes32`."},"functionSelector":"1777e59d","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonBytes32","nameLocation":"36661:16:14","parameters":{"id":13718,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13715,"mutability":"mutable","name":"json","nameLocation":"36694:4:14","nodeType":"VariableDeclaration","scope":13722,"src":"36678:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13714,"name":"string","nodeType":"ElementaryTypeName","src":"36678:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13717,"mutability":"mutable","name":"key","nameLocation":"36716:3:14","nodeType":"VariableDeclaration","scope":13722,"src":"36700:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13716,"name":"string","nodeType":"ElementaryTypeName","src":"36700:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"36677:43:14"},"returnParameters":{"id":13721,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13720,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":13722,"src":"36744:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13719,"name":"bytes32","nodeType":"ElementaryTypeName","src":"36744:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"36743:9:14"},"scope":15864,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13733,"nodeType":"FunctionDefinition","src":"36836:139:14","nodes":[],"documentation":{"id":13723,"nodeType":"StructuredDocumentation","src":"36759:72:14","text":"Parses a string of JSON data at `key` and coerces it to `bytes32[]`."},"functionSelector":"91c75bc3","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonBytes32Array","nameLocation":"36845:21:14","parameters":{"id":13728,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13725,"mutability":"mutable","name":"json","nameLocation":"36883:4:14","nodeType":"VariableDeclaration","scope":13733,"src":"36867:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13724,"name":"string","nodeType":"ElementaryTypeName","src":"36867:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13727,"mutability":"mutable","name":"key","nameLocation":"36905:3:14","nodeType":"VariableDeclaration","scope":13733,"src":"36889:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13726,"name":"string","nodeType":"ElementaryTypeName","src":"36889:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"36866:43:14"},"returnParameters":{"id":13732,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13731,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":13733,"src":"36957:16:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":13729,"name":"bytes32","nodeType":"ElementaryTypeName","src":"36957:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":13730,"nodeType":"ArrayTypeName","src":"36957:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"36956:18:14"},"scope":15864,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13744,"nodeType":"FunctionDefinition","src":"37056:111:14","nodes":[],"documentation":{"id":13734,"nodeType":"StructuredDocumentation","src":"36981:70:14","text":"Parses a string of JSON data at `key` and coerces it to `bytes[]`."},"functionSelector":"6631aa99","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonBytesArray","nameLocation":"37065:19:14","parameters":{"id":13739,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13736,"mutability":"mutable","name":"json","nameLocation":"37101:4:14","nodeType":"VariableDeclaration","scope":13744,"src":"37085:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13735,"name":"string","nodeType":"ElementaryTypeName","src":"37085:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13738,"mutability":"mutable","name":"key","nameLocation":"37123:3:14","nodeType":"VariableDeclaration","scope":13744,"src":"37107:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13737,"name":"string","nodeType":"ElementaryTypeName","src":"37107:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"37084:43:14"},"returnParameters":{"id":13743,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13742,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":13744,"src":"37151:14:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":13740,"name":"bytes","nodeType":"ElementaryTypeName","src":"37151:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":13741,"nodeType":"ArrayTypeName","src":"37151:7:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"37150:16:14"},"scope":15864,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13754,"nodeType":"FunctionDefinition","src":"37247:96:14","nodes":[],"documentation":{"id":13745,"nodeType":"StructuredDocumentation","src":"37173:69:14","text":"Parses a string of JSON data at `key` and coerces it to `int256`."},"functionSelector":"7b048ccd","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonInt","nameLocation":"37256:12:14","parameters":{"id":13750,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13747,"mutability":"mutable","name":"json","nameLocation":"37285:4:14","nodeType":"VariableDeclaration","scope":13754,"src":"37269:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13746,"name":"string","nodeType":"ElementaryTypeName","src":"37269:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13749,"mutability":"mutable","name":"key","nameLocation":"37307:3:14","nodeType":"VariableDeclaration","scope":13754,"src":"37291:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13748,"name":"string","nodeType":"ElementaryTypeName","src":"37291:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"37268:43:14"},"returnParameters":{"id":13753,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13752,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":13754,"src":"37335:6:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":13751,"name":"int256","nodeType":"ElementaryTypeName","src":"37335:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"37334:8:14"},"scope":15864,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13765,"nodeType":"FunctionDefinition","src":"37425:110:14","nodes":[],"documentation":{"id":13755,"nodeType":"StructuredDocumentation","src":"37349:71:14","text":"Parses a string of JSON data at `key` and coerces it to `int256[]`."},"functionSelector":"9983c28a","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonIntArray","nameLocation":"37434:17:14","parameters":{"id":13760,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13757,"mutability":"mutable","name":"json","nameLocation":"37468:4:14","nodeType":"VariableDeclaration","scope":13765,"src":"37452:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13756,"name":"string","nodeType":"ElementaryTypeName","src":"37452:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13759,"mutability":"mutable","name":"key","nameLocation":"37490:3:14","nodeType":"VariableDeclaration","scope":13765,"src":"37474:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13758,"name":"string","nodeType":"ElementaryTypeName","src":"37474:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"37451:43:14"},"returnParameters":{"id":13764,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13763,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":13765,"src":"37518:15:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_memory_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":13761,"name":"int256","nodeType":"ElementaryTypeName","src":"37518:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":13762,"nodeType":"ArrayTypeName","src":"37518:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"}],"src":"37517:17:14"},"scope":15864,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13776,"nodeType":"FunctionDefinition","src":"37600:111:14","nodes":[],"documentation":{"id":13766,"nodeType":"StructuredDocumentation","src":"37541:54:14","text":"Returns an array of all the keys in a JSON object."},"functionSelector":"213e4198","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonKeys","nameLocation":"37609:13:14","parameters":{"id":13771,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13768,"mutability":"mutable","name":"json","nameLocation":"37639:4:14","nodeType":"VariableDeclaration","scope":13776,"src":"37623:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13767,"name":"string","nodeType":"ElementaryTypeName","src":"37623:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13770,"mutability":"mutable","name":"key","nameLocation":"37661:3:14","nodeType":"VariableDeclaration","scope":13776,"src":"37645:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13769,"name":"string","nodeType":"ElementaryTypeName","src":"37645:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"37622:43:14"},"returnParameters":{"id":13775,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13774,"mutability":"mutable","name":"keys","nameLocation":"37705:4:14","nodeType":"VariableDeclaration","scope":13776,"src":"37689:20:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":13772,"name":"string","nodeType":"ElementaryTypeName","src":"37689:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":13773,"nodeType":"ArrayTypeName","src":"37689:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"37688:22:14"},"scope":15864,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13786,"nodeType":"FunctionDefinition","src":"37791:106:14","nodes":[],"documentation":{"id":13777,"nodeType":"StructuredDocumentation","src":"37717:69:14","text":"Parses a string of JSON data at `key` and coerces it to `string`."},"functionSelector":"49c4fac8","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonString","nameLocation":"37800:15:14","parameters":{"id":13782,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13779,"mutability":"mutable","name":"json","nameLocation":"37832:4:14","nodeType":"VariableDeclaration","scope":13786,"src":"37816:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13778,"name":"string","nodeType":"ElementaryTypeName","src":"37816:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13781,"mutability":"mutable","name":"key","nameLocation":"37854:3:14","nodeType":"VariableDeclaration","scope":13786,"src":"37838:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13780,"name":"string","nodeType":"ElementaryTypeName","src":"37838:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"37815:43:14"},"returnParameters":{"id":13785,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13784,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":13786,"src":"37882:13:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":13783,"name":"string","nodeType":"ElementaryTypeName","src":"37882:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"37881:15:14"},"scope":15864,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13797,"nodeType":"FunctionDefinition","src":"37979:113:14","nodes":[],"documentation":{"id":13787,"nodeType":"StructuredDocumentation","src":"37903:71:14","text":"Parses a string of JSON data at `key` and coerces it to `string[]`."},"functionSelector":"498fdcf4","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonStringArray","nameLocation":"37988:20:14","parameters":{"id":13792,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13789,"mutability":"mutable","name":"json","nameLocation":"38025:4:14","nodeType":"VariableDeclaration","scope":13797,"src":"38009:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13788,"name":"string","nodeType":"ElementaryTypeName","src":"38009:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13791,"mutability":"mutable","name":"key","nameLocation":"38047:3:14","nodeType":"VariableDeclaration","scope":13797,"src":"38031:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13790,"name":"string","nodeType":"ElementaryTypeName","src":"38031:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"38008:43:14"},"returnParameters":{"id":13796,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13795,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":13797,"src":"38075:15:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":13793,"name":"string","nodeType":"ElementaryTypeName","src":"38075:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":13794,"nodeType":"ArrayTypeName","src":"38075:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"38074:17:14"},"scope":15864,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13809,"nodeType":"FunctionDefinition","src":"38209:165:14","nodes":[],"documentation":{"id":13798,"nodeType":"StructuredDocumentation","src":"38098:106:14","text":"Parses a string of JSON data at `key` and coerces it to type array corresponding to `typeDescription`."},"functionSelector":"0175d535","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonTypeArray","nameLocation":"38218:18:14","parameters":{"id":13805,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13800,"mutability":"mutable","name":"json","nameLocation":"38253:4:14","nodeType":"VariableDeclaration","scope":13809,"src":"38237:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13799,"name":"string","nodeType":"ElementaryTypeName","src":"38237:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13802,"mutability":"mutable","name":"key","nameLocation":"38275:3:14","nodeType":"VariableDeclaration","scope":13809,"src":"38259:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13801,"name":"string","nodeType":"ElementaryTypeName","src":"38259:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13804,"mutability":"mutable","name":"typeDescription","nameLocation":"38296:15:14","nodeType":"VariableDeclaration","scope":13809,"src":"38280:31:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13803,"name":"string","nodeType":"ElementaryTypeName","src":"38280:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"38236:76:14"},"returnParameters":{"id":13808,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13807,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":13809,"src":"38360:12:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":13806,"name":"bytes","nodeType":"ElementaryTypeName","src":"38360:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"38359:14:14"},"scope":15864,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13819,"nodeType":"FunctionDefinition","src":"38476:139:14","nodes":[],"documentation":{"id":13810,"nodeType":"StructuredDocumentation","src":"38380:91:14","text":"Parses a string of JSON data and coerces it to type corresponding to `typeDescription`."},"functionSelector":"a9da313b","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonType","nameLocation":"38485:13:14","parameters":{"id":13815,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13812,"mutability":"mutable","name":"json","nameLocation":"38515:4:14","nodeType":"VariableDeclaration","scope":13819,"src":"38499:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13811,"name":"string","nodeType":"ElementaryTypeName","src":"38499:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13814,"mutability":"mutable","name":"typeDescription","nameLocation":"38537:15:14","nodeType":"VariableDeclaration","scope":13819,"src":"38521:31:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13813,"name":"string","nodeType":"ElementaryTypeName","src":"38521:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"38498:55:14"},"returnParameters":{"id":13818,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13817,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":13819,"src":"38601:12:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":13816,"name":"bytes","nodeType":"ElementaryTypeName","src":"38601:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"38600:14:14"},"scope":15864,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13831,"nodeType":"FunctionDefinition","src":"38726:160:14","nodes":[],"documentation":{"id":13820,"nodeType":"StructuredDocumentation","src":"38621:100:14","text":"Parses a string of JSON data at `key` and coerces it to type corresponding to `typeDescription`."},"functionSelector":"e3f5ae33","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonType","nameLocation":"38735:13:14","parameters":{"id":13827,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13822,"mutability":"mutable","name":"json","nameLocation":"38765:4:14","nodeType":"VariableDeclaration","scope":13831,"src":"38749:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13821,"name":"string","nodeType":"ElementaryTypeName","src":"38749:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13824,"mutability":"mutable","name":"key","nameLocation":"38787:3:14","nodeType":"VariableDeclaration","scope":13831,"src":"38771:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13823,"name":"string","nodeType":"ElementaryTypeName","src":"38771:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13826,"mutability":"mutable","name":"typeDescription","nameLocation":"38808:15:14","nodeType":"VariableDeclaration","scope":13831,"src":"38792:31:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13825,"name":"string","nodeType":"ElementaryTypeName","src":"38792:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"38748:76:14"},"returnParameters":{"id":13830,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13829,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":13831,"src":"38872:12:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":13828,"name":"bytes","nodeType":"ElementaryTypeName","src":"38872:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"38871:14:14"},"scope":15864,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13841,"nodeType":"FunctionDefinition","src":"38967:98:14","nodes":[],"documentation":{"id":13832,"nodeType":"StructuredDocumentation","src":"38892:70:14","text":"Parses a string of JSON data at `key` and coerces it to `uint256`."},"functionSelector":"addde2b6","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonUint","nameLocation":"38976:13:14","parameters":{"id":13837,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13834,"mutability":"mutable","name":"json","nameLocation":"39006:4:14","nodeType":"VariableDeclaration","scope":13841,"src":"38990:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13833,"name":"string","nodeType":"ElementaryTypeName","src":"38990:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13836,"mutability":"mutable","name":"key","nameLocation":"39028:3:14","nodeType":"VariableDeclaration","scope":13841,"src":"39012:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13835,"name":"string","nodeType":"ElementaryTypeName","src":"39012:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"38989:43:14"},"returnParameters":{"id":13840,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13839,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":13841,"src":"39056:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13838,"name":"uint256","nodeType":"ElementaryTypeName","src":"39056:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"39055:9:14"},"scope":15864,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13852,"nodeType":"FunctionDefinition","src":"39148:112:14","nodes":[],"documentation":{"id":13842,"nodeType":"StructuredDocumentation","src":"39071:72:14","text":"Parses a string of JSON data at `key` and coerces it to `uint256[]`."},"functionSelector":"522074ab","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonUintArray","nameLocation":"39157:18:14","parameters":{"id":13847,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13844,"mutability":"mutable","name":"json","nameLocation":"39192:4:14","nodeType":"VariableDeclaration","scope":13852,"src":"39176:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13843,"name":"string","nodeType":"ElementaryTypeName","src":"39176:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13846,"mutability":"mutable","name":"key","nameLocation":"39214:3:14","nodeType":"VariableDeclaration","scope":13852,"src":"39198:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13845,"name":"string","nodeType":"ElementaryTypeName","src":"39198:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"39175:43:14"},"returnParameters":{"id":13851,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13850,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":13852,"src":"39242:16:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":13848,"name":"uint256","nodeType":"ElementaryTypeName","src":"39242:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":13849,"nodeType":"ArrayTypeName","src":"39242:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"39241:18:14"},"scope":15864,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13860,"nodeType":"FunctionDefinition","src":"39301:93:14","nodes":[],"documentation":{"id":13853,"nodeType":"StructuredDocumentation","src":"39266:30:14","text":"ABI-encodes a JSON object."},"functionSelector":"6a82600a","implemented":false,"kind":"function","modifiers":[],"name":"parseJson","nameLocation":"39310:9:14","parameters":{"id":13856,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13855,"mutability":"mutable","name":"json","nameLocation":"39336:4:14","nodeType":"VariableDeclaration","scope":13860,"src":"39320:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13854,"name":"string","nodeType":"ElementaryTypeName","src":"39320:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"39319:22:14"},"returnParameters":{"id":13859,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13858,"mutability":"mutable","name":"abiEncodedData","nameLocation":"39378:14:14","nodeType":"VariableDeclaration","scope":13860,"src":"39365:27:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":13857,"name":"bytes","nodeType":"ElementaryTypeName","src":"39365:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"39364:29:14"},"scope":15864,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13870,"nodeType":"FunctionDefinition","src":"39444:114:14","nodes":[],"documentation":{"id":13861,"nodeType":"StructuredDocumentation","src":"39400:39:14","text":"ABI-encodes a JSON object at `key`."},"functionSelector":"85940ef1","implemented":false,"kind":"function","modifiers":[],"name":"parseJson","nameLocation":"39453:9:14","parameters":{"id":13866,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13863,"mutability":"mutable","name":"json","nameLocation":"39479:4:14","nodeType":"VariableDeclaration","scope":13870,"src":"39463:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13862,"name":"string","nodeType":"ElementaryTypeName","src":"39463:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13865,"mutability":"mutable","name":"key","nameLocation":"39501:3:14","nodeType":"VariableDeclaration","scope":13870,"src":"39485:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13864,"name":"string","nodeType":"ElementaryTypeName","src":"39485:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"39462:43:14"},"returnParameters":{"id":13869,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13868,"mutability":"mutable","name":"abiEncodedData","nameLocation":"39542:14:14","nodeType":"VariableDeclaration","scope":13870,"src":"39529:27:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":13867,"name":"bytes","nodeType":"ElementaryTypeName","src":"39529:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"39528:29:14"},"scope":15864,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13882,"nodeType":"FunctionDefinition","src":"39593:148:14","nodes":[],"documentation":{"id":13871,"nodeType":"StructuredDocumentation","src":"39564:24:14","text":"See `serializeJson`."},"functionSelector":"972c6062","implemented":false,"kind":"function","modifiers":[],"name":"serializeAddress","nameLocation":"39602:16:14","parameters":{"id":13878,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13873,"mutability":"mutable","name":"objectKey","nameLocation":"39635:9:14","nodeType":"VariableDeclaration","scope":13882,"src":"39619:25:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13872,"name":"string","nodeType":"ElementaryTypeName","src":"39619:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13875,"mutability":"mutable","name":"valueKey","nameLocation":"39662:8:14","nodeType":"VariableDeclaration","scope":13882,"src":"39646:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13874,"name":"string","nodeType":"ElementaryTypeName","src":"39646:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13877,"mutability":"mutable","name":"value","nameLocation":"39680:5:14","nodeType":"VariableDeclaration","scope":13882,"src":"39672:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":13876,"name":"address","nodeType":"ElementaryTypeName","src":"39672:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"39618:68:14"},"returnParameters":{"id":13881,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13880,"mutability":"mutable","name":"json","nameLocation":"39735:4:14","nodeType":"VariableDeclaration","scope":13882,"src":"39721:18:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":13879,"name":"string","nodeType":"ElementaryTypeName","src":"39721:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"39720:20:14"},"scope":15864,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13895,"nodeType":"FunctionDefinition","src":"39776:160:14","nodes":[],"documentation":{"id":13883,"nodeType":"StructuredDocumentation","src":"39747:24:14","text":"See `serializeJson`."},"functionSelector":"1e356e1a","implemented":false,"kind":"function","modifiers":[],"name":"serializeAddress","nameLocation":"39785:16:14","parameters":{"id":13891,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13885,"mutability":"mutable","name":"objectKey","nameLocation":"39818:9:14","nodeType":"VariableDeclaration","scope":13895,"src":"39802:25:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13884,"name":"string","nodeType":"ElementaryTypeName","src":"39802:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13887,"mutability":"mutable","name":"valueKey","nameLocation":"39845:8:14","nodeType":"VariableDeclaration","scope":13895,"src":"39829:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13886,"name":"string","nodeType":"ElementaryTypeName","src":"39829:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13890,"mutability":"mutable","name":"values","nameLocation":"39874:6:14","nodeType":"VariableDeclaration","scope":13895,"src":"39855:25:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":13888,"name":"address","nodeType":"ElementaryTypeName","src":"39855:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":13889,"nodeType":"ArrayTypeName","src":"39855:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"39801:80:14"},"returnParameters":{"id":13894,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13893,"mutability":"mutable","name":"json","nameLocation":"39930:4:14","nodeType":"VariableDeclaration","scope":13895,"src":"39916:18:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":13892,"name":"string","nodeType":"ElementaryTypeName","src":"39916:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"39915:20:14"},"scope":15864,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13907,"nodeType":"FunctionDefinition","src":"39971:142:14","nodes":[],"documentation":{"id":13896,"nodeType":"StructuredDocumentation","src":"39942:24:14","text":"See `serializeJson`."},"functionSelector":"ac22e971","implemented":false,"kind":"function","modifiers":[],"name":"serializeBool","nameLocation":"39980:13:14","parameters":{"id":13903,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13898,"mutability":"mutable","name":"objectKey","nameLocation":"40010:9:14","nodeType":"VariableDeclaration","scope":13907,"src":"39994:25:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13897,"name":"string","nodeType":"ElementaryTypeName","src":"39994:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13900,"mutability":"mutable","name":"valueKey","nameLocation":"40037:8:14","nodeType":"VariableDeclaration","scope":13907,"src":"40021:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13899,"name":"string","nodeType":"ElementaryTypeName","src":"40021:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13902,"mutability":"mutable","name":"value","nameLocation":"40052:5:14","nodeType":"VariableDeclaration","scope":13907,"src":"40047:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":13901,"name":"bool","nodeType":"ElementaryTypeName","src":"40047:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"39993:65:14"},"returnParameters":{"id":13906,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13905,"mutability":"mutable","name":"json","nameLocation":"40107:4:14","nodeType":"VariableDeclaration","scope":13907,"src":"40093:18:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":13904,"name":"string","nodeType":"ElementaryTypeName","src":"40093:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"40092:20:14"},"scope":15864,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13920,"nodeType":"FunctionDefinition","src":"40148:154:14","nodes":[],"documentation":{"id":13908,"nodeType":"StructuredDocumentation","src":"40119:24:14","text":"See `serializeJson`."},"functionSelector":"92925aa1","implemented":false,"kind":"function","modifiers":[],"name":"serializeBool","nameLocation":"40157:13:14","parameters":{"id":13916,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13910,"mutability":"mutable","name":"objectKey","nameLocation":"40187:9:14","nodeType":"VariableDeclaration","scope":13920,"src":"40171:25:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13909,"name":"string","nodeType":"ElementaryTypeName","src":"40171:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13912,"mutability":"mutable","name":"valueKey","nameLocation":"40214:8:14","nodeType":"VariableDeclaration","scope":13920,"src":"40198:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13911,"name":"string","nodeType":"ElementaryTypeName","src":"40198:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13915,"mutability":"mutable","name":"values","nameLocation":"40240:6:14","nodeType":"VariableDeclaration","scope":13920,"src":"40224:22:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":13913,"name":"bool","nodeType":"ElementaryTypeName","src":"40224:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":13914,"nodeType":"ArrayTypeName","src":"40224:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"src":"40170:77:14"},"returnParameters":{"id":13919,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13918,"mutability":"mutable","name":"json","nameLocation":"40296:4:14","nodeType":"VariableDeclaration","scope":13920,"src":"40282:18:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":13917,"name":"string","nodeType":"ElementaryTypeName","src":"40282:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"40281:20:14"},"scope":15864,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13932,"nodeType":"FunctionDefinition","src":"40337:148:14","nodes":[],"documentation":{"id":13921,"nodeType":"StructuredDocumentation","src":"40308:24:14","text":"See `serializeJson`."},"functionSelector":"2d812b44","implemented":false,"kind":"function","modifiers":[],"name":"serializeBytes32","nameLocation":"40346:16:14","parameters":{"id":13928,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13923,"mutability":"mutable","name":"objectKey","nameLocation":"40379:9:14","nodeType":"VariableDeclaration","scope":13932,"src":"40363:25:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13922,"name":"string","nodeType":"ElementaryTypeName","src":"40363:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13925,"mutability":"mutable","name":"valueKey","nameLocation":"40406:8:14","nodeType":"VariableDeclaration","scope":13932,"src":"40390:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13924,"name":"string","nodeType":"ElementaryTypeName","src":"40390:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13927,"mutability":"mutable","name":"value","nameLocation":"40424:5:14","nodeType":"VariableDeclaration","scope":13932,"src":"40416:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13926,"name":"bytes32","nodeType":"ElementaryTypeName","src":"40416:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"40362:68:14"},"returnParameters":{"id":13931,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13930,"mutability":"mutable","name":"json","nameLocation":"40479:4:14","nodeType":"VariableDeclaration","scope":13932,"src":"40465:18:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":13929,"name":"string","nodeType":"ElementaryTypeName","src":"40465:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"40464:20:14"},"scope":15864,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13945,"nodeType":"FunctionDefinition","src":"40520:160:14","nodes":[],"documentation":{"id":13933,"nodeType":"StructuredDocumentation","src":"40491:24:14","text":"See `serializeJson`."},"functionSelector":"201e43e2","implemented":false,"kind":"function","modifiers":[],"name":"serializeBytes32","nameLocation":"40529:16:14","parameters":{"id":13941,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13935,"mutability":"mutable","name":"objectKey","nameLocation":"40562:9:14","nodeType":"VariableDeclaration","scope":13945,"src":"40546:25:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13934,"name":"string","nodeType":"ElementaryTypeName","src":"40546:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13937,"mutability":"mutable","name":"valueKey","nameLocation":"40589:8:14","nodeType":"VariableDeclaration","scope":13945,"src":"40573:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13936,"name":"string","nodeType":"ElementaryTypeName","src":"40573:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13940,"mutability":"mutable","name":"values","nameLocation":"40618:6:14","nodeType":"VariableDeclaration","scope":13945,"src":"40599:25:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":13938,"name":"bytes32","nodeType":"ElementaryTypeName","src":"40599:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":13939,"nodeType":"ArrayTypeName","src":"40599:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"40545:80:14"},"returnParameters":{"id":13944,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13943,"mutability":"mutable","name":"json","nameLocation":"40674:4:14","nodeType":"VariableDeclaration","scope":13945,"src":"40660:18:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":13942,"name":"string","nodeType":"ElementaryTypeName","src":"40660:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"40659:20:14"},"scope":15864,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13957,"nodeType":"FunctionDefinition","src":"40715:153:14","nodes":[],"documentation":{"id":13946,"nodeType":"StructuredDocumentation","src":"40686:24:14","text":"See `serializeJson`."},"functionSelector":"f21d52c7","implemented":false,"kind":"function","modifiers":[],"name":"serializeBytes","nameLocation":"40724:14:14","parameters":{"id":13953,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13948,"mutability":"mutable","name":"objectKey","nameLocation":"40755:9:14","nodeType":"VariableDeclaration","scope":13957,"src":"40739:25:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13947,"name":"string","nodeType":"ElementaryTypeName","src":"40739:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13950,"mutability":"mutable","name":"valueKey","nameLocation":"40782:8:14","nodeType":"VariableDeclaration","scope":13957,"src":"40766:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13949,"name":"string","nodeType":"ElementaryTypeName","src":"40766:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13952,"mutability":"mutable","name":"value","nameLocation":"40807:5:14","nodeType":"VariableDeclaration","scope":13957,"src":"40792:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":13951,"name":"bytes","nodeType":"ElementaryTypeName","src":"40792:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"40738:75:14"},"returnParameters":{"id":13956,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13955,"mutability":"mutable","name":"json","nameLocation":"40862:4:14","nodeType":"VariableDeclaration","scope":13957,"src":"40848:18:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":13954,"name":"string","nodeType":"ElementaryTypeName","src":"40848:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"40847:20:14"},"scope":15864,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13970,"nodeType":"FunctionDefinition","src":"40903:156:14","nodes":[],"documentation":{"id":13958,"nodeType":"StructuredDocumentation","src":"40874:24:14","text":"See `serializeJson`."},"functionSelector":"9884b232","implemented":false,"kind":"function","modifiers":[],"name":"serializeBytes","nameLocation":"40912:14:14","parameters":{"id":13966,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13960,"mutability":"mutable","name":"objectKey","nameLocation":"40943:9:14","nodeType":"VariableDeclaration","scope":13970,"src":"40927:25:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13959,"name":"string","nodeType":"ElementaryTypeName","src":"40927:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13962,"mutability":"mutable","name":"valueKey","nameLocation":"40970:8:14","nodeType":"VariableDeclaration","scope":13970,"src":"40954:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13961,"name":"string","nodeType":"ElementaryTypeName","src":"40954:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13965,"mutability":"mutable","name":"values","nameLocation":"40997:6:14","nodeType":"VariableDeclaration","scope":13970,"src":"40980:23:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":13963,"name":"bytes","nodeType":"ElementaryTypeName","src":"40980:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":13964,"nodeType":"ArrayTypeName","src":"40980:7:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"40926:78:14"},"returnParameters":{"id":13969,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13968,"mutability":"mutable","name":"json","nameLocation":"41053:4:14","nodeType":"VariableDeclaration","scope":13970,"src":"41039:18:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":13967,"name":"string","nodeType":"ElementaryTypeName","src":"41039:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"41038:20:14"},"scope":15864,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13982,"nodeType":"FunctionDefinition","src":"41094:143:14","nodes":[],"documentation":{"id":13971,"nodeType":"StructuredDocumentation","src":"41065:24:14","text":"See `serializeJson`."},"functionSelector":"3f33db60","implemented":false,"kind":"function","modifiers":[],"name":"serializeInt","nameLocation":"41103:12:14","parameters":{"id":13978,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13973,"mutability":"mutable","name":"objectKey","nameLocation":"41132:9:14","nodeType":"VariableDeclaration","scope":13982,"src":"41116:25:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13972,"name":"string","nodeType":"ElementaryTypeName","src":"41116:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13975,"mutability":"mutable","name":"valueKey","nameLocation":"41159:8:14","nodeType":"VariableDeclaration","scope":13982,"src":"41143:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13974,"name":"string","nodeType":"ElementaryTypeName","src":"41143:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13977,"mutability":"mutable","name":"value","nameLocation":"41176:5:14","nodeType":"VariableDeclaration","scope":13982,"src":"41169:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":13976,"name":"int256","nodeType":"ElementaryTypeName","src":"41169:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"41115:67:14"},"returnParameters":{"id":13981,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13980,"mutability":"mutable","name":"json","nameLocation":"41231:4:14","nodeType":"VariableDeclaration","scope":13982,"src":"41217:18:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":13979,"name":"string","nodeType":"ElementaryTypeName","src":"41217:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"41216:20:14"},"scope":15864,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13995,"nodeType":"FunctionDefinition","src":"41272:155:14","nodes":[],"documentation":{"id":13983,"nodeType":"StructuredDocumentation","src":"41243:24:14","text":"See `serializeJson`."},"functionSelector":"7676e127","implemented":false,"kind":"function","modifiers":[],"name":"serializeInt","nameLocation":"41281:12:14","parameters":{"id":13991,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13985,"mutability":"mutable","name":"objectKey","nameLocation":"41310:9:14","nodeType":"VariableDeclaration","scope":13995,"src":"41294:25:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13984,"name":"string","nodeType":"ElementaryTypeName","src":"41294:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13987,"mutability":"mutable","name":"valueKey","nameLocation":"41337:8:14","nodeType":"VariableDeclaration","scope":13995,"src":"41321:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13986,"name":"string","nodeType":"ElementaryTypeName","src":"41321:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13990,"mutability":"mutable","name":"values","nameLocation":"41365:6:14","nodeType":"VariableDeclaration","scope":13995,"src":"41347:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":13988,"name":"int256","nodeType":"ElementaryTypeName","src":"41347:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":13989,"nodeType":"ArrayTypeName","src":"41347:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"}],"src":"41293:79:14"},"returnParameters":{"id":13994,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13993,"mutability":"mutable","name":"json","nameLocation":"41421:4:14","nodeType":"VariableDeclaration","scope":13995,"src":"41407:18:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":13992,"name":"string","nodeType":"ElementaryTypeName","src":"41407:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"41406:20:14"},"scope":15864,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14005,"nodeType":"FunctionDefinition","src":"41624:111:14","nodes":[],"documentation":{"id":13996,"nodeType":"StructuredDocumentation","src":"41433:186:14","text":"Serializes a key and value to a JSON object stored in-memory that can be later written to a file.\n Returns the stringified version of the specific JSON file up to that moment."},"functionSelector":"9b3358b0","implemented":false,"kind":"function","modifiers":[],"name":"serializeJson","nameLocation":"41633:13:14","parameters":{"id":14001,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13998,"mutability":"mutable","name":"objectKey","nameLocation":"41663:9:14","nodeType":"VariableDeclaration","scope":14005,"src":"41647:25:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13997,"name":"string","nodeType":"ElementaryTypeName","src":"41647:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14000,"mutability":"mutable","name":"value","nameLocation":"41690:5:14","nodeType":"VariableDeclaration","scope":14005,"src":"41674:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13999,"name":"string","nodeType":"ElementaryTypeName","src":"41674:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"41646:50:14"},"returnParameters":{"id":14004,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14003,"mutability":"mutable","name":"json","nameLocation":"41729:4:14","nodeType":"VariableDeclaration","scope":14005,"src":"41715:18:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":14002,"name":"string","nodeType":"ElementaryTypeName","src":"41715:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"41714:20:14"},"scope":15864,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14015,"nodeType":"FunctionDefinition","src":"41770:149:14","nodes":[],"documentation":{"id":14006,"nodeType":"StructuredDocumentation","src":"41741:24:14","text":"See `serializeJson`."},"functionSelector":"6d4f96a6","implemented":false,"kind":"function","modifiers":[],"name":"serializeJsonType","nameLocation":"41779:17:14","parameters":{"id":14011,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14008,"mutability":"mutable","name":"typeDescription","nameLocation":"41813:15:14","nodeType":"VariableDeclaration","scope":14015,"src":"41797:31:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14007,"name":"string","nodeType":"ElementaryTypeName","src":"41797:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14010,"mutability":"mutable","name":"value","nameLocation":"41845:5:14","nodeType":"VariableDeclaration","scope":14015,"src":"41830:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":14009,"name":"bytes","nodeType":"ElementaryTypeName","src":"41830:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"41796:55:14"},"returnParameters":{"id":14014,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14013,"mutability":"mutable","name":"json","nameLocation":"41913:4:14","nodeType":"VariableDeclaration","scope":14015,"src":"41899:18:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":14012,"name":"string","nodeType":"ElementaryTypeName","src":"41899:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"41898:20:14"},"scope":15864,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14029,"nodeType":"FunctionDefinition","src":"41954:211:14","nodes":[],"documentation":{"id":14016,"nodeType":"StructuredDocumentation","src":"41925:24:14","text":"See `serializeJson`."},"functionSelector":"6f93bccb","implemented":false,"kind":"function","modifiers":[],"name":"serializeJsonType","nameLocation":"41963:17:14","parameters":{"id":14025,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14018,"mutability":"mutable","name":"objectKey","nameLocation":"42006:9:14","nodeType":"VariableDeclaration","scope":14029,"src":"41990:25:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14017,"name":"string","nodeType":"ElementaryTypeName","src":"41990:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14020,"mutability":"mutable","name":"valueKey","nameLocation":"42041:8:14","nodeType":"VariableDeclaration","scope":14029,"src":"42025:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14019,"name":"string","nodeType":"ElementaryTypeName","src":"42025:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14022,"mutability":"mutable","name":"typeDescription","nameLocation":"42075:15:14","nodeType":"VariableDeclaration","scope":14029,"src":"42059:31:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14021,"name":"string","nodeType":"ElementaryTypeName","src":"42059:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14024,"mutability":"mutable","name":"value","nameLocation":"42115:5:14","nodeType":"VariableDeclaration","scope":14029,"src":"42100:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":14023,"name":"bytes","nodeType":"ElementaryTypeName","src":"42100:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"41980:146:14"},"returnParameters":{"id":14028,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14027,"mutability":"mutable","name":"json","nameLocation":"42159:4:14","nodeType":"VariableDeclaration","scope":14029,"src":"42145:18:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":14026,"name":"string","nodeType":"ElementaryTypeName","src":"42145:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"42144:20:14"},"scope":15864,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14041,"nodeType":"FunctionDefinition","src":"42200:155:14","nodes":[],"documentation":{"id":14030,"nodeType":"StructuredDocumentation","src":"42171:24:14","text":"See `serializeJson`."},"functionSelector":"88da6d35","implemented":false,"kind":"function","modifiers":[],"name":"serializeString","nameLocation":"42209:15:14","parameters":{"id":14037,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14032,"mutability":"mutable","name":"objectKey","nameLocation":"42241:9:14","nodeType":"VariableDeclaration","scope":14041,"src":"42225:25:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14031,"name":"string","nodeType":"ElementaryTypeName","src":"42225:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14034,"mutability":"mutable","name":"valueKey","nameLocation":"42268:8:14","nodeType":"VariableDeclaration","scope":14041,"src":"42252:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14033,"name":"string","nodeType":"ElementaryTypeName","src":"42252:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14036,"mutability":"mutable","name":"value","nameLocation":"42294:5:14","nodeType":"VariableDeclaration","scope":14041,"src":"42278:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14035,"name":"string","nodeType":"ElementaryTypeName","src":"42278:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"42224:76:14"},"returnParameters":{"id":14040,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14039,"mutability":"mutable","name":"json","nameLocation":"42349:4:14","nodeType":"VariableDeclaration","scope":14041,"src":"42335:18:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":14038,"name":"string","nodeType":"ElementaryTypeName","src":"42335:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"42334:20:14"},"scope":15864,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14054,"nodeType":"FunctionDefinition","src":"42390:158:14","nodes":[],"documentation":{"id":14042,"nodeType":"StructuredDocumentation","src":"42361:24:14","text":"See `serializeJson`."},"functionSelector":"561cd6f3","implemented":false,"kind":"function","modifiers":[],"name":"serializeString","nameLocation":"42399:15:14","parameters":{"id":14050,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14044,"mutability":"mutable","name":"objectKey","nameLocation":"42431:9:14","nodeType":"VariableDeclaration","scope":14054,"src":"42415:25:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14043,"name":"string","nodeType":"ElementaryTypeName","src":"42415:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14046,"mutability":"mutable","name":"valueKey","nameLocation":"42458:8:14","nodeType":"VariableDeclaration","scope":14054,"src":"42442:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14045,"name":"string","nodeType":"ElementaryTypeName","src":"42442:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14049,"mutability":"mutable","name":"values","nameLocation":"42486:6:14","nodeType":"VariableDeclaration","scope":14054,"src":"42468:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":14047,"name":"string","nodeType":"ElementaryTypeName","src":"42468:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":14048,"nodeType":"ArrayTypeName","src":"42468:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"42414:79:14"},"returnParameters":{"id":14053,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14052,"mutability":"mutable","name":"json","nameLocation":"42542:4:14","nodeType":"VariableDeclaration","scope":14054,"src":"42528:18:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":14051,"name":"string","nodeType":"ElementaryTypeName","src":"42528:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"42527:20:14"},"scope":15864,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14066,"nodeType":"FunctionDefinition","src":"42583:150:14","nodes":[],"documentation":{"id":14055,"nodeType":"StructuredDocumentation","src":"42554:24:14","text":"See `serializeJson`."},"functionSelector":"ae5a2ae8","implemented":false,"kind":"function","modifiers":[],"name":"serializeUintToHex","nameLocation":"42592:18:14","parameters":{"id":14062,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14057,"mutability":"mutable","name":"objectKey","nameLocation":"42627:9:14","nodeType":"VariableDeclaration","scope":14066,"src":"42611:25:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14056,"name":"string","nodeType":"ElementaryTypeName","src":"42611:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14059,"mutability":"mutable","name":"valueKey","nameLocation":"42654:8:14","nodeType":"VariableDeclaration","scope":14066,"src":"42638:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14058,"name":"string","nodeType":"ElementaryTypeName","src":"42638:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14061,"mutability":"mutable","name":"value","nameLocation":"42672:5:14","nodeType":"VariableDeclaration","scope":14066,"src":"42664:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14060,"name":"uint256","nodeType":"ElementaryTypeName","src":"42664:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"42610:68:14"},"returnParameters":{"id":14065,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14064,"mutability":"mutable","name":"json","nameLocation":"42727:4:14","nodeType":"VariableDeclaration","scope":14066,"src":"42713:18:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":14063,"name":"string","nodeType":"ElementaryTypeName","src":"42713:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"42712:20:14"},"scope":15864,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14078,"nodeType":"FunctionDefinition","src":"42768:145:14","nodes":[],"documentation":{"id":14067,"nodeType":"StructuredDocumentation","src":"42739:24:14","text":"See `serializeJson`."},"functionSelector":"129e9002","implemented":false,"kind":"function","modifiers":[],"name":"serializeUint","nameLocation":"42777:13:14","parameters":{"id":14074,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14069,"mutability":"mutable","name":"objectKey","nameLocation":"42807:9:14","nodeType":"VariableDeclaration","scope":14078,"src":"42791:25:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14068,"name":"string","nodeType":"ElementaryTypeName","src":"42791:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14071,"mutability":"mutable","name":"valueKey","nameLocation":"42834:8:14","nodeType":"VariableDeclaration","scope":14078,"src":"42818:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14070,"name":"string","nodeType":"ElementaryTypeName","src":"42818:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14073,"mutability":"mutable","name":"value","nameLocation":"42852:5:14","nodeType":"VariableDeclaration","scope":14078,"src":"42844:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14072,"name":"uint256","nodeType":"ElementaryTypeName","src":"42844:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"42790:68:14"},"returnParameters":{"id":14077,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14076,"mutability":"mutable","name":"json","nameLocation":"42907:4:14","nodeType":"VariableDeclaration","scope":14078,"src":"42893:18:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":14075,"name":"string","nodeType":"ElementaryTypeName","src":"42893:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"42892:20:14"},"scope":15864,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14091,"nodeType":"FunctionDefinition","src":"42948:157:14","nodes":[],"documentation":{"id":14079,"nodeType":"StructuredDocumentation","src":"42919:24:14","text":"See `serializeJson`."},"functionSelector":"fee9a469","implemented":false,"kind":"function","modifiers":[],"name":"serializeUint","nameLocation":"42957:13:14","parameters":{"id":14087,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14081,"mutability":"mutable","name":"objectKey","nameLocation":"42987:9:14","nodeType":"VariableDeclaration","scope":14091,"src":"42971:25:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14080,"name":"string","nodeType":"ElementaryTypeName","src":"42971:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14083,"mutability":"mutable","name":"valueKey","nameLocation":"43014:8:14","nodeType":"VariableDeclaration","scope":14091,"src":"42998:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14082,"name":"string","nodeType":"ElementaryTypeName","src":"42998:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14086,"mutability":"mutable","name":"values","nameLocation":"43043:6:14","nodeType":"VariableDeclaration","scope":14091,"src":"43024:25:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":14084,"name":"uint256","nodeType":"ElementaryTypeName","src":"43024:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":14085,"nodeType":"ArrayTypeName","src":"43024:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"42970:80:14"},"returnParameters":{"id":14090,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14089,"mutability":"mutable","name":"json","nameLocation":"43099:4:14","nodeType":"VariableDeclaration","scope":14091,"src":"43085:18:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":14088,"name":"string","nodeType":"ElementaryTypeName","src":"43085:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"43084:20:14"},"scope":15864,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14099,"nodeType":"FunctionDefinition","src":"43205:72:14","nodes":[],"documentation":{"id":14092,"nodeType":"StructuredDocumentation","src":"43111:89:14","text":"Write a serialized JSON object to a file. If the file exists, it will be overwritten."},"functionSelector":"e23cd19f","implemented":false,"kind":"function","modifiers":[],"name":"writeJson","nameLocation":"43214:9:14","parameters":{"id":14097,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14094,"mutability":"mutable","name":"json","nameLocation":"43240:4:14","nodeType":"VariableDeclaration","scope":14099,"src":"43224:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14093,"name":"string","nodeType":"ElementaryTypeName","src":"43224:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14096,"mutability":"mutable","name":"path","nameLocation":"43262:4:14","nodeType":"VariableDeclaration","scope":14099,"src":"43246:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14095,"name":"string","nodeType":"ElementaryTypeName","src":"43246:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"43223:44:14"},"returnParameters":{"id":14098,"nodeType":"ParameterList","parameters":[],"src":"43276:0:14"},"scope":15864,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14109,"nodeType":"FunctionDefinition","src":"43503:98:14","nodes":[],"documentation":{"id":14100,"nodeType":"StructuredDocumentation","src":"43283:215:14","text":"Write a serialized JSON object to an **existing** JSON file, replacing a value with key = <value_key.>\n This is useful to replace a specific value of a JSON file, without having to parse the entire thing."},"functionSelector":"35d6ad46","implemented":false,"kind":"function","modifiers":[],"name":"writeJson","nameLocation":"43512:9:14","parameters":{"id":14107,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14102,"mutability":"mutable","name":"json","nameLocation":"43538:4:14","nodeType":"VariableDeclaration","scope":14109,"src":"43522:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14101,"name":"string","nodeType":"ElementaryTypeName","src":"43522:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14104,"mutability":"mutable","name":"path","nameLocation":"43560:4:14","nodeType":"VariableDeclaration","scope":14109,"src":"43544:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14103,"name":"string","nodeType":"ElementaryTypeName","src":"43544:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14106,"mutability":"mutable","name":"valueKey","nameLocation":"43582:8:14","nodeType":"VariableDeclaration","scope":14109,"src":"43566:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14105,"name":"string","nodeType":"ElementaryTypeName","src":"43566:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"43521:70:14"},"returnParameters":{"id":14108,"nodeType":"ParameterList","parameters":[],"src":"43600:0:14"},"scope":15864,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14115,"nodeType":"FunctionDefinition","src":"43712:63:14","nodes":[],"documentation":{"id":14110,"nodeType":"StructuredDocumentation","src":"43643:64:14","text":"Takes a signed transaction and broadcasts it to the network."},"functionSelector":"8c0c72e0","implemented":false,"kind":"function","modifiers":[],"name":"broadcastRawTransaction","nameLocation":"43721:23:14","parameters":{"id":14113,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14112,"mutability":"mutable","name":"data","nameLocation":"43760:4:14","nodeType":"VariableDeclaration","scope":14115,"src":"43745:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":14111,"name":"bytes","nodeType":"ElementaryTypeName","src":"43745:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"43744:21:14"},"returnParameters":{"id":14114,"nodeType":"ParameterList","parameters":[],"src":"43774:0:14"},"scope":15864,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14119,"nodeType":"FunctionDefinition","src":"44278:30:14","nodes":[],"documentation":{"id":14116,"nodeType":"StructuredDocumentation","src":"43781:492:14","text":"Has the next call (at this call depth only) create transactions that can later be signed and sent onchain.\n Broadcasting address is determined by checking the following in order:\n 1. If `--sender` argument was provided, that address is used.\n 2. If exactly one signer (e.g. private key, hw wallet, keystore) is set when `forge broadcast` is invoked, that signer is used.\n 3. Otherwise, default foundry sender (1804c8AB1F12E6bbf3894d4083f33e07309d1f38) is used."},"functionSelector":"afc98040","implemented":false,"kind":"function","modifiers":[],"name":"broadcast","nameLocation":"44287:9:14","parameters":{"id":14117,"nodeType":"ParameterList","parameters":[],"src":"44296:2:14"},"returnParameters":{"id":14118,"nodeType":"ParameterList","parameters":[],"src":"44307:0:14"},"scope":15864,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14125,"nodeType":"FunctionDefinition","src":"44478:44:14","nodes":[],"documentation":{"id":14120,"nodeType":"StructuredDocumentation","src":"44314:159:14","text":"Has the next call (at this call depth only) create a transaction with the address provided\n as the sender that can later be signed and sent onchain."},"functionSelector":"e6962cdb","implemented":false,"kind":"function","modifiers":[],"name":"broadcast","nameLocation":"44487:9:14","parameters":{"id":14123,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14122,"mutability":"mutable","name":"signer","nameLocation":"44505:6:14","nodeType":"VariableDeclaration","scope":14125,"src":"44497:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":14121,"name":"address","nodeType":"ElementaryTypeName","src":"44497:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"44496:16:14"},"returnParameters":{"id":14124,"nodeType":"ParameterList","parameters":[],"src":"44521:0:14"},"scope":15864,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14131,"nodeType":"FunctionDefinition","src":"44696:48:14","nodes":[],"documentation":{"id":14126,"nodeType":"StructuredDocumentation","src":"44528:163:14","text":"Has the next call (at this call depth only) create a transaction with the private key\n provided as the sender that can later be signed and sent onchain."},"functionSelector":"f67a965b","implemented":false,"kind":"function","modifiers":[],"name":"broadcast","nameLocation":"44705:9:14","parameters":{"id":14129,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14128,"mutability":"mutable","name":"privateKey","nameLocation":"44723:10:14","nodeType":"VariableDeclaration","scope":14131,"src":"44715:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14127,"name":"uint256","nodeType":"ElementaryTypeName","src":"44715:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"44714:20:14"},"returnParameters":{"id":14130,"nodeType":"ParameterList","parameters":[],"src":"44743:0:14"},"scope":15864,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14135,"nodeType":"FunctionDefinition","src":"45254:35:14","nodes":[],"documentation":{"id":14132,"nodeType":"StructuredDocumentation","src":"44750:499:14","text":"Has all subsequent calls (at this call depth only) create transactions that can later be signed and sent onchain.\n Broadcasting address is determined by checking the following in order:\n 1. If `--sender` argument was provided, that address is used.\n 2. If exactly one signer (e.g. private key, hw wallet, keystore) is set when `forge broadcast` is invoked, that signer is used.\n 3. Otherwise, default foundry sender (1804c8AB1F12E6bbf3894d4083f33e07309d1f38) is used."},"functionSelector":"7fb5297f","implemented":false,"kind":"function","modifiers":[],"name":"startBroadcast","nameLocation":"45263:14:14","parameters":{"id":14133,"nodeType":"ParameterList","parameters":[],"src":"45277:2:14"},"returnParameters":{"id":14134,"nodeType":"ParameterList","parameters":[],"src":"45288:0:14"},"scope":15864,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14141,"nodeType":"FunctionDefinition","src":"45451:49:14","nodes":[],"documentation":{"id":14136,"nodeType":"StructuredDocumentation","src":"45295:151:14","text":"Has all subsequent calls (at this call depth only) create transactions with the address\n provided that can later be signed and sent onchain."},"functionSelector":"7fec2a8d","implemented":false,"kind":"function","modifiers":[],"name":"startBroadcast","nameLocation":"45460:14:14","parameters":{"id":14139,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14138,"mutability":"mutable","name":"signer","nameLocation":"45483:6:14","nodeType":"VariableDeclaration","scope":14141,"src":"45475:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":14137,"name":"address","nodeType":"ElementaryTypeName","src":"45475:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"45474:16:14"},"returnParameters":{"id":14140,"nodeType":"ParameterList","parameters":[],"src":"45499:0:14"},"scope":15864,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14147,"nodeType":"FunctionDefinition","src":"45666:53:14","nodes":[],"documentation":{"id":14142,"nodeType":"StructuredDocumentation","src":"45506:155:14","text":"Has all subsequent calls (at this call depth only) create transactions with the private key\n provided that can later be signed and sent onchain."},"functionSelector":"ce817d47","implemented":false,"kind":"function","modifiers":[],"name":"startBroadcast","nameLocation":"45675:14:14","parameters":{"id":14145,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14144,"mutability":"mutable","name":"privateKey","nameLocation":"45698:10:14","nodeType":"VariableDeclaration","scope":14147,"src":"45690:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14143,"name":"uint256","nodeType":"ElementaryTypeName","src":"45690:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"45689:20:14"},"returnParameters":{"id":14146,"nodeType":"ParameterList","parameters":[],"src":"45718:0:14"},"scope":15864,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14151,"nodeType":"FunctionDefinition","src":"45772:34:14","nodes":[],"documentation":{"id":14148,"nodeType":"StructuredDocumentation","src":"45725:42:14","text":"Stops collecting onchain transactions."},"functionSelector":"76eadd36","implemented":false,"kind":"function","modifiers":[],"name":"stopBroadcast","nameLocation":"45781:13:14","parameters":{"id":14149,"nodeType":"ParameterList","parameters":[],"src":"45794:2:14"},"returnParameters":{"id":14150,"nodeType":"ParameterList","parameters":[],"src":"45805:0:14"},"scope":15864,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14161,"nodeType":"FunctionDefinition","src":"46055:93:14","nodes":[],"documentation":{"id":14152,"nodeType":"StructuredDocumentation","src":"45845:205:14","text":"Returns the index of the first occurrence of a `key` in an `input` string.\n Returns `NOT_FOUND` (i.e. `type(uint256).max`) if the `key` is not found.\n Returns 0 in case of an empty `key`."},"functionSelector":"8a0807b7","implemented":false,"kind":"function","modifiers":[],"name":"indexOf","nameLocation":"46064:7:14","parameters":{"id":14157,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14154,"mutability":"mutable","name":"input","nameLocation":"46088:5:14","nodeType":"VariableDeclaration","scope":14161,"src":"46072:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14153,"name":"string","nodeType":"ElementaryTypeName","src":"46072:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14156,"mutability":"mutable","name":"key","nameLocation":"46111:3:14","nodeType":"VariableDeclaration","scope":14161,"src":"46095:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14155,"name":"string","nodeType":"ElementaryTypeName","src":"46095:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"46071:44:14"},"returnParameters":{"id":14160,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14159,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":14161,"src":"46139:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14158,"name":"uint256","nodeType":"ElementaryTypeName","src":"46139:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"46138:9:14"},"scope":15864,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14169,"nodeType":"FunctionDefinition","src":"46207:100:14","nodes":[],"documentation":{"id":14162,"nodeType":"StructuredDocumentation","src":"46154:48:14","text":"Parses the given `string` into an `address`."},"functionSelector":"c6ce059d","implemented":false,"kind":"function","modifiers":[],"name":"parseAddress","nameLocation":"46216:12:14","parameters":{"id":14165,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14164,"mutability":"mutable","name":"stringifiedValue","nameLocation":"46245:16:14","nodeType":"VariableDeclaration","scope":14169,"src":"46229:32:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14163,"name":"string","nodeType":"ElementaryTypeName","src":"46229:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"46228:34:14"},"returnParameters":{"id":14168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14167,"mutability":"mutable","name":"parsedValue","nameLocation":"46294:11:14","nodeType":"VariableDeclaration","scope":14169,"src":"46286:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":14166,"name":"address","nodeType":"ElementaryTypeName","src":"46286:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"46285:21:14"},"scope":15864,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14177,"nodeType":"FunctionDefinition","src":"46362:94:14","nodes":[],"documentation":{"id":14170,"nodeType":"StructuredDocumentation","src":"46313:44:14","text":"Parses the given `string` into a `bool`."},"functionSelector":"974ef924","implemented":false,"kind":"function","modifiers":[],"name":"parseBool","nameLocation":"46371:9:14","parameters":{"id":14173,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14172,"mutability":"mutable","name":"stringifiedValue","nameLocation":"46397:16:14","nodeType":"VariableDeclaration","scope":14177,"src":"46381:32:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14171,"name":"string","nodeType":"ElementaryTypeName","src":"46381:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"46380:34:14"},"returnParameters":{"id":14176,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14175,"mutability":"mutable","name":"parsedValue","nameLocation":"46443:11:14","nodeType":"VariableDeclaration","scope":14177,"src":"46438:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":14174,"name":"bool","nodeType":"ElementaryTypeName","src":"46438:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"46437:18:14"},"scope":15864,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14185,"nodeType":"FunctionDefinition","src":"46510:103:14","nodes":[],"documentation":{"id":14178,"nodeType":"StructuredDocumentation","src":"46462:43:14","text":"Parses the given `string` into `bytes`."},"functionSelector":"8f5d232d","implemented":false,"kind":"function","modifiers":[],"name":"parseBytes","nameLocation":"46519:10:14","parameters":{"id":14181,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14180,"mutability":"mutable","name":"stringifiedValue","nameLocation":"46546:16:14","nodeType":"VariableDeclaration","scope":14185,"src":"46530:32:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14179,"name":"string","nodeType":"ElementaryTypeName","src":"46530:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"46529:34:14"},"returnParameters":{"id":14184,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14183,"mutability":"mutable","name":"parsedValue","nameLocation":"46600:11:14","nodeType":"VariableDeclaration","scope":14185,"src":"46587:24:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":14182,"name":"bytes","nodeType":"ElementaryTypeName","src":"46587:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"46586:26:14"},"scope":15864,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14193,"nodeType":"FunctionDefinition","src":"46671:100:14","nodes":[],"documentation":{"id":14186,"nodeType":"StructuredDocumentation","src":"46619:47:14","text":"Parses the given `string` into a `bytes32`."},"functionSelector":"087e6e81","implemented":false,"kind":"function","modifiers":[],"name":"parseBytes32","nameLocation":"46680:12:14","parameters":{"id":14189,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14188,"mutability":"mutable","name":"stringifiedValue","nameLocation":"46709:16:14","nodeType":"VariableDeclaration","scope":14193,"src":"46693:32:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14187,"name":"string","nodeType":"ElementaryTypeName","src":"46693:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"46692:34:14"},"returnParameters":{"id":14192,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14191,"mutability":"mutable","name":"parsedValue","nameLocation":"46758:11:14","nodeType":"VariableDeclaration","scope":14193,"src":"46750:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":14190,"name":"bytes32","nodeType":"ElementaryTypeName","src":"46750:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"46749:21:14"},"scope":15864,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14201,"nodeType":"FunctionDefinition","src":"46828:95:14","nodes":[],"documentation":{"id":14194,"nodeType":"StructuredDocumentation","src":"46777:46:14","text":"Parses the given `string` into a `int256`."},"functionSelector":"42346c5e","implemented":false,"kind":"function","modifiers":[],"name":"parseInt","nameLocation":"46837:8:14","parameters":{"id":14197,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14196,"mutability":"mutable","name":"stringifiedValue","nameLocation":"46862:16:14","nodeType":"VariableDeclaration","scope":14201,"src":"46846:32:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14195,"name":"string","nodeType":"ElementaryTypeName","src":"46846:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"46845:34:14"},"returnParameters":{"id":14200,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14199,"mutability":"mutable","name":"parsedValue","nameLocation":"46910:11:14","nodeType":"VariableDeclaration","scope":14201,"src":"46903:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14198,"name":"int256","nodeType":"ElementaryTypeName","src":"46903:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"46902:20:14"},"scope":15864,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14209,"nodeType":"FunctionDefinition","src":"46981:97:14","nodes":[],"documentation":{"id":14202,"nodeType":"StructuredDocumentation","src":"46929:47:14","text":"Parses the given `string` into a `uint256`."},"functionSelector":"fa91454d","implemented":false,"kind":"function","modifiers":[],"name":"parseUint","nameLocation":"46990:9:14","parameters":{"id":14205,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14204,"mutability":"mutable","name":"stringifiedValue","nameLocation":"47016:16:14","nodeType":"VariableDeclaration","scope":14209,"src":"47000:32:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14203,"name":"string","nodeType":"ElementaryTypeName","src":"47000:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"46999:34:14"},"returnParameters":{"id":14208,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14207,"mutability":"mutable","name":"parsedValue","nameLocation":"47065:11:14","nodeType":"VariableDeclaration","scope":14209,"src":"47057:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14206,"name":"uint256","nodeType":"ElementaryTypeName","src":"47057:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"47056:21:14"},"scope":15864,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14221,"nodeType":"FunctionDefinition","src":"47156:151:14","nodes":[],"documentation":{"id":14210,"nodeType":"StructuredDocumentation","src":"47084:67:14","text":"Replaces occurrences of `from` in the given `string` with `to`."},"functionSelector":"e00ad03e","implemented":false,"kind":"function","modifiers":[],"name":"replace","nameLocation":"47165:7:14","parameters":{"id":14217,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14212,"mutability":"mutable","name":"input","nameLocation":"47189:5:14","nodeType":"VariableDeclaration","scope":14221,"src":"47173:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14211,"name":"string","nodeType":"ElementaryTypeName","src":"47173:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14214,"mutability":"mutable","name":"from","nameLocation":"47212:4:14","nodeType":"VariableDeclaration","scope":14221,"src":"47196:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14213,"name":"string","nodeType":"ElementaryTypeName","src":"47196:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14216,"mutability":"mutable","name":"to","nameLocation":"47234:2:14","nodeType":"VariableDeclaration","scope":14221,"src":"47218:18:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14215,"name":"string","nodeType":"ElementaryTypeName","src":"47218:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"47172:65:14"},"returnParameters":{"id":14220,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14219,"mutability":"mutable","name":"output","nameLocation":"47299:6:14","nodeType":"VariableDeclaration","scope":14221,"src":"47285:20:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":14218,"name":"string","nodeType":"ElementaryTypeName","src":"47285:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"47284:22:14"},"scope":15864,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14232,"nodeType":"FunctionDefinition","src":"47400:113:14","nodes":[],"documentation":{"id":14222,"nodeType":"StructuredDocumentation","src":"47313:82:14","text":"Splits the given `string` into an array of strings divided by the `delimiter`."},"functionSelector":"8bb75533","implemented":false,"kind":"function","modifiers":[],"name":"split","nameLocation":"47409:5:14","parameters":{"id":14227,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14224,"mutability":"mutable","name":"input","nameLocation":"47431:5:14","nodeType":"VariableDeclaration","scope":14232,"src":"47415:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14223,"name":"string","nodeType":"ElementaryTypeName","src":"47415:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14226,"mutability":"mutable","name":"delimiter","nameLocation":"47454:9:14","nodeType":"VariableDeclaration","scope":14232,"src":"47438:25:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14225,"name":"string","nodeType":"ElementaryTypeName","src":"47438:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"47414:50:14"},"returnParameters":{"id":14231,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14230,"mutability":"mutable","name":"outputs","nameLocation":"47504:7:14","nodeType":"VariableDeclaration","scope":14232,"src":"47488:23:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":14228,"name":"string","nodeType":"ElementaryTypeName","src":"47488:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":14229,"nodeType":"ArrayTypeName","src":"47488:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"47487:25:14"},"scope":15864,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14240,"nodeType":"FunctionDefinition","src":"47575:89:14","nodes":[],"documentation":{"id":14233,"nodeType":"StructuredDocumentation","src":"47519:51:14","text":"Converts the given `string` value to Lowercase."},"functionSelector":"50bb0884","implemented":false,"kind":"function","modifiers":[],"name":"toLowercase","nameLocation":"47584:11:14","parameters":{"id":14236,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14235,"mutability":"mutable","name":"input","nameLocation":"47612:5:14","nodeType":"VariableDeclaration","scope":14240,"src":"47596:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14234,"name":"string","nodeType":"ElementaryTypeName","src":"47596:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"47595:23:14"},"returnParameters":{"id":14239,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14238,"mutability":"mutable","name":"output","nameLocation":"47656:6:14","nodeType":"VariableDeclaration","scope":14240,"src":"47642:20:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":14237,"name":"string","nodeType":"ElementaryTypeName","src":"47642:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"47641:22:14"},"scope":15864,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14248,"nodeType":"FunctionDefinition","src":"47718:88:14","nodes":[],"documentation":{"id":14241,"nodeType":"StructuredDocumentation","src":"47670:43:14","text":"Converts the given value to a `string`."},"functionSelector":"56ca623e","implemented":false,"kind":"function","modifiers":[],"name":"toString","nameLocation":"47727:8:14","parameters":{"id":14244,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14243,"mutability":"mutable","name":"value","nameLocation":"47744:5:14","nodeType":"VariableDeclaration","scope":14248,"src":"47736:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":14242,"name":"address","nodeType":"ElementaryTypeName","src":"47736:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"47735:15:14"},"returnParameters":{"id":14247,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14246,"mutability":"mutable","name":"stringifiedValue","nameLocation":"47788:16:14","nodeType":"VariableDeclaration","scope":14248,"src":"47774:30:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":14245,"name":"string","nodeType":"ElementaryTypeName","src":"47774:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"47773:32:14"},"scope":15864,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14256,"nodeType":"FunctionDefinition","src":"47860:95:14","nodes":[],"documentation":{"id":14249,"nodeType":"StructuredDocumentation","src":"47812:43:14","text":"Converts the given value to a `string`."},"functionSelector":"71aad10d","implemented":false,"kind":"function","modifiers":[],"name":"toString","nameLocation":"47869:8:14","parameters":{"id":14252,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14251,"mutability":"mutable","name":"value","nameLocation":"47893:5:14","nodeType":"VariableDeclaration","scope":14256,"src":"47878:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":14250,"name":"bytes","nodeType":"ElementaryTypeName","src":"47878:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"47877:22:14"},"returnParameters":{"id":14255,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14254,"mutability":"mutable","name":"stringifiedValue","nameLocation":"47937:16:14","nodeType":"VariableDeclaration","scope":14256,"src":"47923:30:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":14253,"name":"string","nodeType":"ElementaryTypeName","src":"47923:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"47922:32:14"},"scope":15864,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14264,"nodeType":"FunctionDefinition","src":"48009:88:14","nodes":[],"documentation":{"id":14257,"nodeType":"StructuredDocumentation","src":"47961:43:14","text":"Converts the given value to a `string`."},"functionSelector":"b11a19e8","implemented":false,"kind":"function","modifiers":[],"name":"toString","nameLocation":"48018:8:14","parameters":{"id":14260,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14259,"mutability":"mutable","name":"value","nameLocation":"48035:5:14","nodeType":"VariableDeclaration","scope":14264,"src":"48027:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":14258,"name":"bytes32","nodeType":"ElementaryTypeName","src":"48027:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"48026:15:14"},"returnParameters":{"id":14263,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14262,"mutability":"mutable","name":"stringifiedValue","nameLocation":"48079:16:14","nodeType":"VariableDeclaration","scope":14264,"src":"48065:30:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":14261,"name":"string","nodeType":"ElementaryTypeName","src":"48065:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"48064:32:14"},"scope":15864,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14272,"nodeType":"FunctionDefinition","src":"48151:85:14","nodes":[],"documentation":{"id":14265,"nodeType":"StructuredDocumentation","src":"48103:43:14","text":"Converts the given value to a `string`."},"functionSelector":"71dce7da","implemented":false,"kind":"function","modifiers":[],"name":"toString","nameLocation":"48160:8:14","parameters":{"id":14268,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14267,"mutability":"mutable","name":"value","nameLocation":"48174:5:14","nodeType":"VariableDeclaration","scope":14272,"src":"48169:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":14266,"name":"bool","nodeType":"ElementaryTypeName","src":"48169:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"48168:12:14"},"returnParameters":{"id":14271,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14270,"mutability":"mutable","name":"stringifiedValue","nameLocation":"48218:16:14","nodeType":"VariableDeclaration","scope":14272,"src":"48204:30:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":14269,"name":"string","nodeType":"ElementaryTypeName","src":"48204:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"48203:32:14"},"scope":15864,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14280,"nodeType":"FunctionDefinition","src":"48290:88:14","nodes":[],"documentation":{"id":14273,"nodeType":"StructuredDocumentation","src":"48242:43:14","text":"Converts the given value to a `string`."},"functionSelector":"6900a3ae","implemented":false,"kind":"function","modifiers":[],"name":"toString","nameLocation":"48299:8:14","parameters":{"id":14276,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14275,"mutability":"mutable","name":"value","nameLocation":"48316:5:14","nodeType":"VariableDeclaration","scope":14280,"src":"48308:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14274,"name":"uint256","nodeType":"ElementaryTypeName","src":"48308:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"48307:15:14"},"returnParameters":{"id":14279,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14278,"mutability":"mutable","name":"stringifiedValue","nameLocation":"48360:16:14","nodeType":"VariableDeclaration","scope":14280,"src":"48346:30:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":14277,"name":"string","nodeType":"ElementaryTypeName","src":"48346:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"48345:32:14"},"scope":15864,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14288,"nodeType":"FunctionDefinition","src":"48432:87:14","nodes":[],"documentation":{"id":14281,"nodeType":"StructuredDocumentation","src":"48384:43:14","text":"Converts the given value to a `string`."},"functionSelector":"a322c40e","implemented":false,"kind":"function","modifiers":[],"name":"toString","nameLocation":"48441:8:14","parameters":{"id":14284,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14283,"mutability":"mutable","name":"value","nameLocation":"48457:5:14","nodeType":"VariableDeclaration","scope":14288,"src":"48450:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14282,"name":"int256","nodeType":"ElementaryTypeName","src":"48450:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"48449:14:14"},"returnParameters":{"id":14287,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14286,"mutability":"mutable","name":"stringifiedValue","nameLocation":"48501:16:14","nodeType":"VariableDeclaration","scope":14288,"src":"48487:30:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":14285,"name":"string","nodeType":"ElementaryTypeName","src":"48487:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"48486:32:14"},"scope":15864,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14296,"nodeType":"FunctionDefinition","src":"48581:89:14","nodes":[],"documentation":{"id":14289,"nodeType":"StructuredDocumentation","src":"48525:51:14","text":"Converts the given `string` value to Uppercase."},"functionSelector":"074ae3d7","implemented":false,"kind":"function","modifiers":[],"name":"toUppercase","nameLocation":"48590:11:14","parameters":{"id":14292,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14291,"mutability":"mutable","name":"input","nameLocation":"48618:5:14","nodeType":"VariableDeclaration","scope":14296,"src":"48602:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14290,"name":"string","nodeType":"ElementaryTypeName","src":"48602:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"48601:23:14"},"returnParameters":{"id":14295,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14294,"mutability":"mutable","name":"output","nameLocation":"48662:6:14","nodeType":"VariableDeclaration","scope":14296,"src":"48648:20:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":14293,"name":"string","nodeType":"ElementaryTypeName","src":"48648:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"48647:22:14"},"scope":15864,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14304,"nodeType":"FunctionDefinition","src":"48753:82:14","nodes":[],"documentation":{"id":14297,"nodeType":"StructuredDocumentation","src":"48676:72:14","text":"Trims leading and trailing whitespace from the given `string` value."},"functionSelector":"b2dad155","implemented":false,"kind":"function","modifiers":[],"name":"trim","nameLocation":"48762:4:14","parameters":{"id":14300,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14299,"mutability":"mutable","name":"input","nameLocation":"48783:5:14","nodeType":"VariableDeclaration","scope":14304,"src":"48767:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14298,"name":"string","nodeType":"ElementaryTypeName","src":"48767:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"48766:23:14"},"returnParameters":{"id":14303,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14302,"mutability":"mutable","name":"output","nameLocation":"48827:6:14","nodeType":"VariableDeclaration","scope":14304,"src":"48813:20:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":14301,"name":"string","nodeType":"ElementaryTypeName","src":"48813:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"48812:22:14"},"scope":15864,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14316,"nodeType":"FunctionDefinition","src":"49030:113:14","nodes":[],"documentation":{"id":14305,"nodeType":"StructuredDocumentation","src":"48875:150:14","text":"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`.\n Formats values with decimals in failure message."},"functionSelector":"045c55ce","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqAbsDecimal","nameLocation":"49039:24:14","parameters":{"id":14314,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14307,"mutability":"mutable","name":"left","nameLocation":"49072:4:14","nodeType":"VariableDeclaration","scope":14316,"src":"49064:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14306,"name":"uint256","nodeType":"ElementaryTypeName","src":"49064:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14309,"mutability":"mutable","name":"right","nameLocation":"49086:5:14","nodeType":"VariableDeclaration","scope":14316,"src":"49078:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14308,"name":"uint256","nodeType":"ElementaryTypeName","src":"49078:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14311,"mutability":"mutable","name":"maxDelta","nameLocation":"49101:8:14","nodeType":"VariableDeclaration","scope":14316,"src":"49093:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14310,"name":"uint256","nodeType":"ElementaryTypeName","src":"49093:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14313,"mutability":"mutable","name":"decimals","nameLocation":"49119:8:14","nodeType":"VariableDeclaration","scope":14316,"src":"49111:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14312,"name":"uint256","nodeType":"ElementaryTypeName","src":"49111:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"49063:65:14"},"returnParameters":{"id":14315,"nodeType":"ParameterList","parameters":[],"src":"49142:0:14"},"scope":15864,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14330,"nodeType":"FunctionDefinition","src":"49358:182:14","nodes":[],"documentation":{"id":14317,"nodeType":"StructuredDocumentation","src":"49149:204:14","text":"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"60429eb2","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqAbsDecimal","nameLocation":"49367:24:14","parameters":{"id":14328,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14319,"mutability":"mutable","name":"left","nameLocation":"49409:4:14","nodeType":"VariableDeclaration","scope":14330,"src":"49401:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14318,"name":"uint256","nodeType":"ElementaryTypeName","src":"49401:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14321,"mutability":"mutable","name":"right","nameLocation":"49431:5:14","nodeType":"VariableDeclaration","scope":14330,"src":"49423:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14320,"name":"uint256","nodeType":"ElementaryTypeName","src":"49423:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14323,"mutability":"mutable","name":"maxDelta","nameLocation":"49454:8:14","nodeType":"VariableDeclaration","scope":14330,"src":"49446:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14322,"name":"uint256","nodeType":"ElementaryTypeName","src":"49446:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14325,"mutability":"mutable","name":"decimals","nameLocation":"49480:8:14","nodeType":"VariableDeclaration","scope":14330,"src":"49472:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14324,"name":"uint256","nodeType":"ElementaryTypeName","src":"49472:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14327,"mutability":"mutable","name":"error","nameLocation":"49514:5:14","nodeType":"VariableDeclaration","scope":14330,"src":"49498:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14326,"name":"string","nodeType":"ElementaryTypeName","src":"49498:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"49391:134:14"},"returnParameters":{"id":14329,"nodeType":"ParameterList","parameters":[],"src":"49539:0:14"},"scope":15864,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14342,"nodeType":"FunctionDefinition","src":"49700:111:14","nodes":[],"documentation":{"id":14331,"nodeType":"StructuredDocumentation","src":"49546:149:14","text":"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`.\n Formats values with decimals in failure message."},"functionSelector":"3d5bc8bc","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqAbsDecimal","nameLocation":"49709:24:14","parameters":{"id":14340,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14333,"mutability":"mutable","name":"left","nameLocation":"49741:4:14","nodeType":"VariableDeclaration","scope":14342,"src":"49734:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14332,"name":"int256","nodeType":"ElementaryTypeName","src":"49734:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14335,"mutability":"mutable","name":"right","nameLocation":"49754:5:14","nodeType":"VariableDeclaration","scope":14342,"src":"49747:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14334,"name":"int256","nodeType":"ElementaryTypeName","src":"49747:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14337,"mutability":"mutable","name":"maxDelta","nameLocation":"49769:8:14","nodeType":"VariableDeclaration","scope":14342,"src":"49761:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14336,"name":"uint256","nodeType":"ElementaryTypeName","src":"49761:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14339,"mutability":"mutable","name":"decimals","nameLocation":"49787:8:14","nodeType":"VariableDeclaration","scope":14342,"src":"49779:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14338,"name":"uint256","nodeType":"ElementaryTypeName","src":"49779:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"49733:63:14"},"returnParameters":{"id":14341,"nodeType":"ParameterList","parameters":[],"src":"49810:0:14"},"scope":15864,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14356,"nodeType":"FunctionDefinition","src":"50025:180:14","nodes":[],"documentation":{"id":14343,"nodeType":"StructuredDocumentation","src":"49817:203:14","text":"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"6a5066d4","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqAbsDecimal","nameLocation":"50034:24:14","parameters":{"id":14354,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14345,"mutability":"mutable","name":"left","nameLocation":"50075:4:14","nodeType":"VariableDeclaration","scope":14356,"src":"50068:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14344,"name":"int256","nodeType":"ElementaryTypeName","src":"50068:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14347,"mutability":"mutable","name":"right","nameLocation":"50096:5:14","nodeType":"VariableDeclaration","scope":14356,"src":"50089:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14346,"name":"int256","nodeType":"ElementaryTypeName","src":"50089:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14349,"mutability":"mutable","name":"maxDelta","nameLocation":"50119:8:14","nodeType":"VariableDeclaration","scope":14356,"src":"50111:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14348,"name":"uint256","nodeType":"ElementaryTypeName","src":"50111:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14351,"mutability":"mutable","name":"decimals","nameLocation":"50145:8:14","nodeType":"VariableDeclaration","scope":14356,"src":"50137:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14350,"name":"uint256","nodeType":"ElementaryTypeName","src":"50137:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14353,"mutability":"mutable","name":"error","nameLocation":"50179:5:14","nodeType":"VariableDeclaration","scope":14356,"src":"50163:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14352,"name":"string","nodeType":"ElementaryTypeName","src":"50163:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"50058:132:14"},"returnParameters":{"id":14355,"nodeType":"ParameterList","parameters":[],"src":"50204:0:14"},"scope":15864,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14366,"nodeType":"FunctionDefinition","src":"50309:88:14","nodes":[],"documentation":{"id":14357,"nodeType":"StructuredDocumentation","src":"50211:93:14","text":"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`."},"functionSelector":"16d207c6","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqAbs","nameLocation":"50318:17:14","parameters":{"id":14364,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14359,"mutability":"mutable","name":"left","nameLocation":"50344:4:14","nodeType":"VariableDeclaration","scope":14366,"src":"50336:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14358,"name":"uint256","nodeType":"ElementaryTypeName","src":"50336:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14361,"mutability":"mutable","name":"right","nameLocation":"50358:5:14","nodeType":"VariableDeclaration","scope":14366,"src":"50350:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14360,"name":"uint256","nodeType":"ElementaryTypeName","src":"50350:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14363,"mutability":"mutable","name":"maxDelta","nameLocation":"50373:8:14","nodeType":"VariableDeclaration","scope":14366,"src":"50365:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14362,"name":"uint256","nodeType":"ElementaryTypeName","src":"50365:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"50335:47:14"},"returnParameters":{"id":14365,"nodeType":"ParameterList","parameters":[],"src":"50396:0:14"},"scope":15864,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14378,"nodeType":"FunctionDefinition","src":"50563:111:14","nodes":[],"documentation":{"id":14367,"nodeType":"StructuredDocumentation","src":"50403:155:14","text":"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`.\n Includes error message into revert string on failure."},"functionSelector":"f710b062","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqAbs","nameLocation":"50572:17:14","parameters":{"id":14376,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14369,"mutability":"mutable","name":"left","nameLocation":"50598:4:14","nodeType":"VariableDeclaration","scope":14378,"src":"50590:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14368,"name":"uint256","nodeType":"ElementaryTypeName","src":"50590:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14371,"mutability":"mutable","name":"right","nameLocation":"50612:5:14","nodeType":"VariableDeclaration","scope":14378,"src":"50604:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14370,"name":"uint256","nodeType":"ElementaryTypeName","src":"50604:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14373,"mutability":"mutable","name":"maxDelta","nameLocation":"50627:8:14","nodeType":"VariableDeclaration","scope":14378,"src":"50619:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14372,"name":"uint256","nodeType":"ElementaryTypeName","src":"50619:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14375,"mutability":"mutable","name":"error","nameLocation":"50653:5:14","nodeType":"VariableDeclaration","scope":14378,"src":"50637:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14374,"name":"string","nodeType":"ElementaryTypeName","src":"50637:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"50589:70:14"},"returnParameters":{"id":14377,"nodeType":"ParameterList","parameters":[],"src":"50673:0:14"},"scope":15864,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14388,"nodeType":"FunctionDefinition","src":"50777:86:14","nodes":[],"documentation":{"id":14379,"nodeType":"StructuredDocumentation","src":"50680:92:14","text":"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`."},"functionSelector":"240f839d","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqAbs","nameLocation":"50786:17:14","parameters":{"id":14386,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14381,"mutability":"mutable","name":"left","nameLocation":"50811:4:14","nodeType":"VariableDeclaration","scope":14388,"src":"50804:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14380,"name":"int256","nodeType":"ElementaryTypeName","src":"50804:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14383,"mutability":"mutable","name":"right","nameLocation":"50824:5:14","nodeType":"VariableDeclaration","scope":14388,"src":"50817:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14382,"name":"int256","nodeType":"ElementaryTypeName","src":"50817:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14385,"mutability":"mutable","name":"maxDelta","nameLocation":"50839:8:14","nodeType":"VariableDeclaration","scope":14388,"src":"50831:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14384,"name":"uint256","nodeType":"ElementaryTypeName","src":"50831:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"50803:45:14"},"returnParameters":{"id":14387,"nodeType":"ParameterList","parameters":[],"src":"50862:0:14"},"scope":15864,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14400,"nodeType":"FunctionDefinition","src":"51028:109:14","nodes":[],"documentation":{"id":14389,"nodeType":"StructuredDocumentation","src":"50869:154:14","text":"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`.\n Includes error message into revert string on failure."},"functionSelector":"8289e621","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqAbs","nameLocation":"51037:17:14","parameters":{"id":14398,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14391,"mutability":"mutable","name":"left","nameLocation":"51062:4:14","nodeType":"VariableDeclaration","scope":14400,"src":"51055:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14390,"name":"int256","nodeType":"ElementaryTypeName","src":"51055:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14393,"mutability":"mutable","name":"right","nameLocation":"51075:5:14","nodeType":"VariableDeclaration","scope":14400,"src":"51068:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14392,"name":"int256","nodeType":"ElementaryTypeName","src":"51068:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14395,"mutability":"mutable","name":"maxDelta","nameLocation":"51090:8:14","nodeType":"VariableDeclaration","scope":14400,"src":"51082:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14394,"name":"uint256","nodeType":"ElementaryTypeName","src":"51082:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14397,"mutability":"mutable","name":"error","nameLocation":"51116:5:14","nodeType":"VariableDeclaration","scope":14400,"src":"51100:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14396,"name":"string","nodeType":"ElementaryTypeName","src":"51100:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"51054:68:14"},"returnParameters":{"id":14399,"nodeType":"ParameterList","parameters":[],"src":"51136:0:14"},"scope":15864,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14412,"nodeType":"FunctionDefinition","src":"51408:136:14","nodes":[],"documentation":{"id":14401,"nodeType":"StructuredDocumentation","src":"51143:260:14","text":"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`.\n `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%\n Formats values with decimals in failure message."},"functionSelector":"21ed2977","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqRelDecimal","nameLocation":"51417:24:14","parameters":{"id":14410,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14403,"mutability":"mutable","name":"left","nameLocation":"51450:4:14","nodeType":"VariableDeclaration","scope":14412,"src":"51442:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14402,"name":"uint256","nodeType":"ElementaryTypeName","src":"51442:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14405,"mutability":"mutable","name":"right","nameLocation":"51464:5:14","nodeType":"VariableDeclaration","scope":14412,"src":"51456:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14404,"name":"uint256","nodeType":"ElementaryTypeName","src":"51456:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14407,"mutability":"mutable","name":"maxPercentDelta","nameLocation":"51479:15:14","nodeType":"VariableDeclaration","scope":14412,"src":"51471:23:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14406,"name":"uint256","nodeType":"ElementaryTypeName","src":"51471:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14409,"mutability":"mutable","name":"decimals","nameLocation":"51504:8:14","nodeType":"VariableDeclaration","scope":14412,"src":"51496:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14408,"name":"uint256","nodeType":"ElementaryTypeName","src":"51496:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"51441:72:14"},"returnParameters":{"id":14411,"nodeType":"ParameterList","parameters":[],"src":"51543:0:14"},"scope":15864,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14426,"nodeType":"FunctionDefinition","src":"51869:189:14","nodes":[],"documentation":{"id":14413,"nodeType":"StructuredDocumentation","src":"51550:314:14","text":"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`.\n `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"82d6c8fd","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqRelDecimal","nameLocation":"51878:24:14","parameters":{"id":14424,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14415,"mutability":"mutable","name":"left","nameLocation":"51920:4:14","nodeType":"VariableDeclaration","scope":14426,"src":"51912:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14414,"name":"uint256","nodeType":"ElementaryTypeName","src":"51912:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14417,"mutability":"mutable","name":"right","nameLocation":"51942:5:14","nodeType":"VariableDeclaration","scope":14426,"src":"51934:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14416,"name":"uint256","nodeType":"ElementaryTypeName","src":"51934:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14419,"mutability":"mutable","name":"maxPercentDelta","nameLocation":"51965:15:14","nodeType":"VariableDeclaration","scope":14426,"src":"51957:23:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14418,"name":"uint256","nodeType":"ElementaryTypeName","src":"51957:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14421,"mutability":"mutable","name":"decimals","nameLocation":"51998:8:14","nodeType":"VariableDeclaration","scope":14426,"src":"51990:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14420,"name":"uint256","nodeType":"ElementaryTypeName","src":"51990:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14423,"mutability":"mutable","name":"error","nameLocation":"52032:5:14","nodeType":"VariableDeclaration","scope":14426,"src":"52016:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14422,"name":"string","nodeType":"ElementaryTypeName","src":"52016:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"51902:141:14"},"returnParameters":{"id":14425,"nodeType":"ParameterList","parameters":[],"src":"52057:0:14"},"scope":15864,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14438,"nodeType":"FunctionDefinition","src":"52328:134:14","nodes":[],"documentation":{"id":14427,"nodeType":"StructuredDocumentation","src":"52064:259:14","text":"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`.\n `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%\n Formats values with decimals in failure message."},"functionSelector":"abbf21cc","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqRelDecimal","nameLocation":"52337:24:14","parameters":{"id":14436,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14429,"mutability":"mutable","name":"left","nameLocation":"52369:4:14","nodeType":"VariableDeclaration","scope":14438,"src":"52362:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14428,"name":"int256","nodeType":"ElementaryTypeName","src":"52362:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14431,"mutability":"mutable","name":"right","nameLocation":"52382:5:14","nodeType":"VariableDeclaration","scope":14438,"src":"52375:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14430,"name":"int256","nodeType":"ElementaryTypeName","src":"52375:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14433,"mutability":"mutable","name":"maxPercentDelta","nameLocation":"52397:15:14","nodeType":"VariableDeclaration","scope":14438,"src":"52389:23:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14432,"name":"uint256","nodeType":"ElementaryTypeName","src":"52389:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14435,"mutability":"mutable","name":"decimals","nameLocation":"52422:8:14","nodeType":"VariableDeclaration","scope":14438,"src":"52414:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14434,"name":"uint256","nodeType":"ElementaryTypeName","src":"52414:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"52361:70:14"},"returnParameters":{"id":14437,"nodeType":"ParameterList","parameters":[],"src":"52461:0:14"},"scope":15864,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14452,"nodeType":"FunctionDefinition","src":"52786:187:14","nodes":[],"documentation":{"id":14439,"nodeType":"StructuredDocumentation","src":"52468:313:14","text":"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`.\n `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"fccc11c4","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqRelDecimal","nameLocation":"52795:24:14","parameters":{"id":14450,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14441,"mutability":"mutable","name":"left","nameLocation":"52836:4:14","nodeType":"VariableDeclaration","scope":14452,"src":"52829:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14440,"name":"int256","nodeType":"ElementaryTypeName","src":"52829:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14443,"mutability":"mutable","name":"right","nameLocation":"52857:5:14","nodeType":"VariableDeclaration","scope":14452,"src":"52850:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14442,"name":"int256","nodeType":"ElementaryTypeName","src":"52850:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14445,"mutability":"mutable","name":"maxPercentDelta","nameLocation":"52880:15:14","nodeType":"VariableDeclaration","scope":14452,"src":"52872:23:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14444,"name":"uint256","nodeType":"ElementaryTypeName","src":"52872:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14447,"mutability":"mutable","name":"decimals","nameLocation":"52913:8:14","nodeType":"VariableDeclaration","scope":14452,"src":"52905:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14446,"name":"uint256","nodeType":"ElementaryTypeName","src":"52905:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14449,"mutability":"mutable","name":"error","nameLocation":"52947:5:14","nodeType":"VariableDeclaration","scope":14452,"src":"52931:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14448,"name":"string","nodeType":"ElementaryTypeName","src":"52931:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"52819:139:14"},"returnParameters":{"id":14451,"nodeType":"ParameterList","parameters":[],"src":"52972:0:14"},"scope":15864,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14462,"nodeType":"FunctionDefinition","src":"53187:95:14","nodes":[],"documentation":{"id":14453,"nodeType":"StructuredDocumentation","src":"52979:203:14","text":"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`.\n `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%"},"functionSelector":"8cf25ef4","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqRel","nameLocation":"53196:17:14","parameters":{"id":14460,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14455,"mutability":"mutable","name":"left","nameLocation":"53222:4:14","nodeType":"VariableDeclaration","scope":14462,"src":"53214:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14454,"name":"uint256","nodeType":"ElementaryTypeName","src":"53214:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14457,"mutability":"mutable","name":"right","nameLocation":"53236:5:14","nodeType":"VariableDeclaration","scope":14462,"src":"53228:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14456,"name":"uint256","nodeType":"ElementaryTypeName","src":"53228:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14459,"mutability":"mutable","name":"maxPercentDelta","nameLocation":"53251:15:14","nodeType":"VariableDeclaration","scope":14462,"src":"53243:23:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14458,"name":"uint256","nodeType":"ElementaryTypeName","src":"53243:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"53213:54:14"},"returnParameters":{"id":14461,"nodeType":"ParameterList","parameters":[],"src":"53281:0:14"},"scope":15864,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14474,"nodeType":"FunctionDefinition","src":"53558:134:14","nodes":[],"documentation":{"id":14463,"nodeType":"StructuredDocumentation","src":"53288:265:14","text":"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`.\n `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%\n Includes error message into revert string on failure."},"functionSelector":"1ecb7d33","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqRel","nameLocation":"53567:17:14","parameters":{"id":14472,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14465,"mutability":"mutable","name":"left","nameLocation":"53593:4:14","nodeType":"VariableDeclaration","scope":14474,"src":"53585:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14464,"name":"uint256","nodeType":"ElementaryTypeName","src":"53585:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14467,"mutability":"mutable","name":"right","nameLocation":"53607:5:14","nodeType":"VariableDeclaration","scope":14474,"src":"53599:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14466,"name":"uint256","nodeType":"ElementaryTypeName","src":"53599:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14469,"mutability":"mutable","name":"maxPercentDelta","nameLocation":"53622:15:14","nodeType":"VariableDeclaration","scope":14474,"src":"53614:23:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14468,"name":"uint256","nodeType":"ElementaryTypeName","src":"53614:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14471,"mutability":"mutable","name":"error","nameLocation":"53655:5:14","nodeType":"VariableDeclaration","scope":14474,"src":"53639:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14470,"name":"string","nodeType":"ElementaryTypeName","src":"53639:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"53584:77:14"},"returnParameters":{"id":14473,"nodeType":"ParameterList","parameters":[],"src":"53691:0:14"},"scope":15864,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14484,"nodeType":"FunctionDefinition","src":"53905:93:14","nodes":[],"documentation":{"id":14475,"nodeType":"StructuredDocumentation","src":"53698:202:14","text":"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`.\n `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%"},"functionSelector":"fea2d14f","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqRel","nameLocation":"53914:17:14","parameters":{"id":14482,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14477,"mutability":"mutable","name":"left","nameLocation":"53939:4:14","nodeType":"VariableDeclaration","scope":14484,"src":"53932:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14476,"name":"int256","nodeType":"ElementaryTypeName","src":"53932:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14479,"mutability":"mutable","name":"right","nameLocation":"53952:5:14","nodeType":"VariableDeclaration","scope":14484,"src":"53945:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14478,"name":"int256","nodeType":"ElementaryTypeName","src":"53945:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14481,"mutability":"mutable","name":"maxPercentDelta","nameLocation":"53967:15:14","nodeType":"VariableDeclaration","scope":14484,"src":"53959:23:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14480,"name":"uint256","nodeType":"ElementaryTypeName","src":"53959:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"53931:52:14"},"returnParameters":{"id":14483,"nodeType":"ParameterList","parameters":[],"src":"53997:0:14"},"scope":15864,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14496,"nodeType":"FunctionDefinition","src":"54273:132:14","nodes":[],"documentation":{"id":14485,"nodeType":"StructuredDocumentation","src":"54004:264:14","text":"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`.\n `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%\n Includes error message into revert string on failure."},"functionSelector":"ef277d72","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqRel","nameLocation":"54282:17:14","parameters":{"id":14494,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14487,"mutability":"mutable","name":"left","nameLocation":"54307:4:14","nodeType":"VariableDeclaration","scope":14496,"src":"54300:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14486,"name":"int256","nodeType":"ElementaryTypeName","src":"54300:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14489,"mutability":"mutable","name":"right","nameLocation":"54320:5:14","nodeType":"VariableDeclaration","scope":14496,"src":"54313:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14488,"name":"int256","nodeType":"ElementaryTypeName","src":"54313:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14491,"mutability":"mutable","name":"maxPercentDelta","nameLocation":"54335:15:14","nodeType":"VariableDeclaration","scope":14496,"src":"54327:23:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14490,"name":"uint256","nodeType":"ElementaryTypeName","src":"54327:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14493,"mutability":"mutable","name":"error","nameLocation":"54368:5:14","nodeType":"VariableDeclaration","scope":14496,"src":"54352:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14492,"name":"string","nodeType":"ElementaryTypeName","src":"54352:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"54299:75:14"},"returnParameters":{"id":14495,"nodeType":"ParameterList","parameters":[],"src":"54404:0:14"},"scope":15864,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14506,"nodeType":"FunctionDefinition","src":"54514:86:14","nodes":[],"documentation":{"id":14497,"nodeType":"StructuredDocumentation","src":"54411:98:14","text":"Asserts that two `uint256` values are equal, formatting them with decimals in failure message."},"functionSelector":"27af7d9c","implemented":false,"kind":"function","modifiers":[],"name":"assertEqDecimal","nameLocation":"54523:15:14","parameters":{"id":14504,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14499,"mutability":"mutable","name":"left","nameLocation":"54547:4:14","nodeType":"VariableDeclaration","scope":14506,"src":"54539:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14498,"name":"uint256","nodeType":"ElementaryTypeName","src":"54539:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14501,"mutability":"mutable","name":"right","nameLocation":"54561:5:14","nodeType":"VariableDeclaration","scope":14506,"src":"54553:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14500,"name":"uint256","nodeType":"ElementaryTypeName","src":"54553:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14503,"mutability":"mutable","name":"decimals","nameLocation":"54576:8:14","nodeType":"VariableDeclaration","scope":14506,"src":"54568:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14502,"name":"uint256","nodeType":"ElementaryTypeName","src":"54568:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"54538:47:14"},"returnParameters":{"id":14505,"nodeType":"ParameterList","parameters":[],"src":"54599:0:14"},"scope":15864,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14518,"nodeType":"FunctionDefinition","src":"54771:109:14","nodes":[],"documentation":{"id":14507,"nodeType":"StructuredDocumentation","src":"54606:160:14","text":"Asserts that two `uint256` values are equal, formatting them with decimals in failure message.\n Includes error message into revert string on failure."},"functionSelector":"d0cbbdef","implemented":false,"kind":"function","modifiers":[],"name":"assertEqDecimal","nameLocation":"54780:15:14","parameters":{"id":14516,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14509,"mutability":"mutable","name":"left","nameLocation":"54804:4:14","nodeType":"VariableDeclaration","scope":14518,"src":"54796:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14508,"name":"uint256","nodeType":"ElementaryTypeName","src":"54796:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14511,"mutability":"mutable","name":"right","nameLocation":"54818:5:14","nodeType":"VariableDeclaration","scope":14518,"src":"54810:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14510,"name":"uint256","nodeType":"ElementaryTypeName","src":"54810:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14513,"mutability":"mutable","name":"decimals","nameLocation":"54833:8:14","nodeType":"VariableDeclaration","scope":14518,"src":"54825:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14512,"name":"uint256","nodeType":"ElementaryTypeName","src":"54825:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14515,"mutability":"mutable","name":"error","nameLocation":"54859:5:14","nodeType":"VariableDeclaration","scope":14518,"src":"54843:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14514,"name":"string","nodeType":"ElementaryTypeName","src":"54843:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"54795:70:14"},"returnParameters":{"id":14517,"nodeType":"ParameterList","parameters":[],"src":"54879:0:14"},"scope":15864,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14528,"nodeType":"FunctionDefinition","src":"54988:84:14","nodes":[],"documentation":{"id":14519,"nodeType":"StructuredDocumentation","src":"54886:97:14","text":"Asserts that two `int256` values are equal, formatting them with decimals in failure message."},"functionSelector":"48016c04","implemented":false,"kind":"function","modifiers":[],"name":"assertEqDecimal","nameLocation":"54997:15:14","parameters":{"id":14526,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14521,"mutability":"mutable","name":"left","nameLocation":"55020:4:14","nodeType":"VariableDeclaration","scope":14528,"src":"55013:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14520,"name":"int256","nodeType":"ElementaryTypeName","src":"55013:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14523,"mutability":"mutable","name":"right","nameLocation":"55033:5:14","nodeType":"VariableDeclaration","scope":14528,"src":"55026:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14522,"name":"int256","nodeType":"ElementaryTypeName","src":"55026:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14525,"mutability":"mutable","name":"decimals","nameLocation":"55048:8:14","nodeType":"VariableDeclaration","scope":14528,"src":"55040:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14524,"name":"uint256","nodeType":"ElementaryTypeName","src":"55040:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"55012:45:14"},"returnParameters":{"id":14527,"nodeType":"ParameterList","parameters":[],"src":"55071:0:14"},"scope":15864,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14540,"nodeType":"FunctionDefinition","src":"55242:107:14","nodes":[],"documentation":{"id":14529,"nodeType":"StructuredDocumentation","src":"55078:159:14","text":"Asserts that two `int256` values are equal, formatting them with decimals in failure message.\n Includes error message into revert string on failure."},"functionSelector":"7e77b0c5","implemented":false,"kind":"function","modifiers":[],"name":"assertEqDecimal","nameLocation":"55251:15:14","parameters":{"id":14538,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14531,"mutability":"mutable","name":"left","nameLocation":"55274:4:14","nodeType":"VariableDeclaration","scope":14540,"src":"55267:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14530,"name":"int256","nodeType":"ElementaryTypeName","src":"55267:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14533,"mutability":"mutable","name":"right","nameLocation":"55287:5:14","nodeType":"VariableDeclaration","scope":14540,"src":"55280:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14532,"name":"int256","nodeType":"ElementaryTypeName","src":"55280:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14535,"mutability":"mutable","name":"decimals","nameLocation":"55302:8:14","nodeType":"VariableDeclaration","scope":14540,"src":"55294:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14534,"name":"uint256","nodeType":"ElementaryTypeName","src":"55294:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14537,"mutability":"mutable","name":"error","nameLocation":"55328:5:14","nodeType":"VariableDeclaration","scope":14540,"src":"55312:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14536,"name":"string","nodeType":"ElementaryTypeName","src":"55312:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"55266:68:14"},"returnParameters":{"id":14539,"nodeType":"ParameterList","parameters":[],"src":"55348:0:14"},"scope":15864,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14548,"nodeType":"FunctionDefinition","src":"55405:55:14","nodes":[],"documentation":{"id":14541,"nodeType":"StructuredDocumentation","src":"55355:45:14","text":"Asserts that two `bool` values are equal."},"functionSelector":"f7fe3477","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"55414:8:14","parameters":{"id":14546,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14543,"mutability":"mutable","name":"left","nameLocation":"55428:4:14","nodeType":"VariableDeclaration","scope":14548,"src":"55423:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":14542,"name":"bool","nodeType":"ElementaryTypeName","src":"55423:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":14545,"mutability":"mutable","name":"right","nameLocation":"55439:5:14","nodeType":"VariableDeclaration","scope":14548,"src":"55434:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":14544,"name":"bool","nodeType":"ElementaryTypeName","src":"55434:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"55422:23:14"},"returnParameters":{"id":14547,"nodeType":"ParameterList","parameters":[],"src":"55459:0:14"},"scope":15864,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14558,"nodeType":"FunctionDefinition","src":"55573:78:14","nodes":[],"documentation":{"id":14549,"nodeType":"StructuredDocumentation","src":"55466:102:14","text":"Asserts that two `bool` values are equal and includes error message into revert string on failure."},"functionSelector":"4db19e7e","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"55582:8:14","parameters":{"id":14556,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14551,"mutability":"mutable","name":"left","nameLocation":"55596:4:14","nodeType":"VariableDeclaration","scope":14558,"src":"55591:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":14550,"name":"bool","nodeType":"ElementaryTypeName","src":"55591:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":14553,"mutability":"mutable","name":"right","nameLocation":"55607:5:14","nodeType":"VariableDeclaration","scope":14558,"src":"55602:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":14552,"name":"bool","nodeType":"ElementaryTypeName","src":"55602:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":14555,"mutability":"mutable","name":"error","nameLocation":"55630:5:14","nodeType":"VariableDeclaration","scope":14558,"src":"55614:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14554,"name":"string","nodeType":"ElementaryTypeName","src":"55614:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"55590:46:14"},"returnParameters":{"id":14557,"nodeType":"ParameterList","parameters":[],"src":"55650:0:14"},"scope":15864,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14566,"nodeType":"FunctionDefinition","src":"55709:77:14","nodes":[],"documentation":{"id":14559,"nodeType":"StructuredDocumentation","src":"55657:47:14","text":"Asserts that two `string` values are equal."},"functionSelector":"f320d963","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"55718:8:14","parameters":{"id":14564,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14561,"mutability":"mutable","name":"left","nameLocation":"55743:4:14","nodeType":"VariableDeclaration","scope":14566,"src":"55727:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14560,"name":"string","nodeType":"ElementaryTypeName","src":"55727:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14563,"mutability":"mutable","name":"right","nameLocation":"55765:5:14","nodeType":"VariableDeclaration","scope":14566,"src":"55749:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14562,"name":"string","nodeType":"ElementaryTypeName","src":"55749:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"55726:45:14"},"returnParameters":{"id":14565,"nodeType":"ParameterList","parameters":[],"src":"55785:0:14"},"scope":15864,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14576,"nodeType":"FunctionDefinition","src":"55901:100:14","nodes":[],"documentation":{"id":14567,"nodeType":"StructuredDocumentation","src":"55792:104:14","text":"Asserts that two `string` values are equal and includes error message into revert string on failure."},"functionSelector":"36f656d8","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"55910:8:14","parameters":{"id":14574,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14569,"mutability":"mutable","name":"left","nameLocation":"55935:4:14","nodeType":"VariableDeclaration","scope":14576,"src":"55919:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14568,"name":"string","nodeType":"ElementaryTypeName","src":"55919:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14571,"mutability":"mutable","name":"right","nameLocation":"55957:5:14","nodeType":"VariableDeclaration","scope":14576,"src":"55941:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14570,"name":"string","nodeType":"ElementaryTypeName","src":"55941:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14573,"mutability":"mutable","name":"error","nameLocation":"55980:5:14","nodeType":"VariableDeclaration","scope":14576,"src":"55964:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14572,"name":"string","nodeType":"ElementaryTypeName","src":"55964:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"55918:68:14"},"returnParameters":{"id":14575,"nodeType":"ParameterList","parameters":[],"src":"56000:0:14"},"scope":15864,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14584,"nodeType":"FunctionDefinition","src":"56058:75:14","nodes":[],"documentation":{"id":14577,"nodeType":"StructuredDocumentation","src":"56007:46:14","text":"Asserts that two `bytes` values are equal."},"functionSelector":"97624631","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"56067:8:14","parameters":{"id":14582,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14579,"mutability":"mutable","name":"left","nameLocation":"56091:4:14","nodeType":"VariableDeclaration","scope":14584,"src":"56076:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":14578,"name":"bytes","nodeType":"ElementaryTypeName","src":"56076:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":14581,"mutability":"mutable","name":"right","nameLocation":"56112:5:14","nodeType":"VariableDeclaration","scope":14584,"src":"56097:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":14580,"name":"bytes","nodeType":"ElementaryTypeName","src":"56097:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"56075:43:14"},"returnParameters":{"id":14583,"nodeType":"ParameterList","parameters":[],"src":"56132:0:14"},"scope":15864,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14594,"nodeType":"FunctionDefinition","src":"56247:98:14","nodes":[],"documentation":{"id":14585,"nodeType":"StructuredDocumentation","src":"56139:103:14","text":"Asserts that two `bytes` values are equal and includes error message into revert string on failure."},"functionSelector":"e24fed00","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"56256:8:14","parameters":{"id":14592,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14587,"mutability":"mutable","name":"left","nameLocation":"56280:4:14","nodeType":"VariableDeclaration","scope":14594,"src":"56265:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":14586,"name":"bytes","nodeType":"ElementaryTypeName","src":"56265:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":14589,"mutability":"mutable","name":"right","nameLocation":"56301:5:14","nodeType":"VariableDeclaration","scope":14594,"src":"56286:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":14588,"name":"bytes","nodeType":"ElementaryTypeName","src":"56286:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":14591,"mutability":"mutable","name":"error","nameLocation":"56324:5:14","nodeType":"VariableDeclaration","scope":14594,"src":"56308:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14590,"name":"string","nodeType":"ElementaryTypeName","src":"56308:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"56264:66:14"},"returnParameters":{"id":14593,"nodeType":"ParameterList","parameters":[],"src":"56344:0:14"},"scope":15864,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14604,"nodeType":"FunctionDefinition","src":"56411:77:14","nodes":[],"documentation":{"id":14595,"nodeType":"StructuredDocumentation","src":"56351:55:14","text":"Asserts that two arrays of `bool` values are equal."},"functionSelector":"707df785","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"56420:8:14","parameters":{"id":14602,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14598,"mutability":"mutable","name":"left","nameLocation":"56445:4:14","nodeType":"VariableDeclaration","scope":14604,"src":"56429:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":14596,"name":"bool","nodeType":"ElementaryTypeName","src":"56429:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":14597,"nodeType":"ArrayTypeName","src":"56429:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":14601,"mutability":"mutable","name":"right","nameLocation":"56467:5:14","nodeType":"VariableDeclaration","scope":14604,"src":"56451:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":14599,"name":"bool","nodeType":"ElementaryTypeName","src":"56451:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":14600,"nodeType":"ArrayTypeName","src":"56451:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"src":"56428:45:14"},"returnParameters":{"id":14603,"nodeType":"ParameterList","parameters":[],"src":"56487:0:14"},"scope":15864,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14616,"nodeType":"FunctionDefinition","src":"56611:100:14","nodes":[],"documentation":{"id":14605,"nodeType":"StructuredDocumentation","src":"56494:112:14","text":"Asserts that two arrays of `bool` values are equal and includes error message into revert string on failure."},"functionSelector":"e48a8f8d","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"56620:8:14","parameters":{"id":14614,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14608,"mutability":"mutable","name":"left","nameLocation":"56645:4:14","nodeType":"VariableDeclaration","scope":14616,"src":"56629:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":14606,"name":"bool","nodeType":"ElementaryTypeName","src":"56629:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":14607,"nodeType":"ArrayTypeName","src":"56629:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":14611,"mutability":"mutable","name":"right","nameLocation":"56667:5:14","nodeType":"VariableDeclaration","scope":14616,"src":"56651:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":14609,"name":"bool","nodeType":"ElementaryTypeName","src":"56651:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":14610,"nodeType":"ArrayTypeName","src":"56651:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":14613,"mutability":"mutable","name":"error","nameLocation":"56690:5:14","nodeType":"VariableDeclaration","scope":14616,"src":"56674:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14612,"name":"string","nodeType":"ElementaryTypeName","src":"56674:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"56628:68:14"},"returnParameters":{"id":14615,"nodeType":"ParameterList","parameters":[],"src":"56710:0:14"},"scope":15864,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14626,"nodeType":"FunctionDefinition","src":"56779:83:14","nodes":[],"documentation":{"id":14617,"nodeType":"StructuredDocumentation","src":"56717:57:14","text":"Asserts that two arrays of `uint256 values are equal."},"functionSelector":"975d5a12","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"56788:8:14","parameters":{"id":14624,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14620,"mutability":"mutable","name":"left","nameLocation":"56816:4:14","nodeType":"VariableDeclaration","scope":14626,"src":"56797:23:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":14618,"name":"uint256","nodeType":"ElementaryTypeName","src":"56797:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":14619,"nodeType":"ArrayTypeName","src":"56797:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":14623,"mutability":"mutable","name":"right","nameLocation":"56841:5:14","nodeType":"VariableDeclaration","scope":14626,"src":"56822:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":14621,"name":"uint256","nodeType":"ElementaryTypeName","src":"56822:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":14622,"nodeType":"ArrayTypeName","src":"56822:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"56796:51:14"},"returnParameters":{"id":14625,"nodeType":"ParameterList","parameters":[],"src":"56861:0:14"},"scope":15864,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14638,"nodeType":"FunctionDefinition","src":"56988:106:14","nodes":[],"documentation":{"id":14627,"nodeType":"StructuredDocumentation","src":"56868:115:14","text":"Asserts that two arrays of `uint256` values are equal and includes error message into revert string on failure."},"functionSelector":"5d18c73a","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"56997:8:14","parameters":{"id":14636,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14630,"mutability":"mutable","name":"left","nameLocation":"57025:4:14","nodeType":"VariableDeclaration","scope":14638,"src":"57006:23:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":14628,"name":"uint256","nodeType":"ElementaryTypeName","src":"57006:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":14629,"nodeType":"ArrayTypeName","src":"57006:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":14633,"mutability":"mutable","name":"right","nameLocation":"57050:5:14","nodeType":"VariableDeclaration","scope":14638,"src":"57031:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":14631,"name":"uint256","nodeType":"ElementaryTypeName","src":"57031:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":14632,"nodeType":"ArrayTypeName","src":"57031:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":14635,"mutability":"mutable","name":"error","nameLocation":"57073:5:14","nodeType":"VariableDeclaration","scope":14638,"src":"57057:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14634,"name":"string","nodeType":"ElementaryTypeName","src":"57057:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"57005:74:14"},"returnParameters":{"id":14637,"nodeType":"ParameterList","parameters":[],"src":"57093:0:14"},"scope":15864,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14648,"nodeType":"FunctionDefinition","src":"57162:81:14","nodes":[],"documentation":{"id":14639,"nodeType":"StructuredDocumentation","src":"57100:57:14","text":"Asserts that two arrays of `int256` values are equal."},"functionSelector":"711043ac","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"57171:8:14","parameters":{"id":14646,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14642,"mutability":"mutable","name":"left","nameLocation":"57198:4:14","nodeType":"VariableDeclaration","scope":14648,"src":"57180:22:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":14640,"name":"int256","nodeType":"ElementaryTypeName","src":"57180:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":14641,"nodeType":"ArrayTypeName","src":"57180:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"},{"constant":false,"id":14645,"mutability":"mutable","name":"right","nameLocation":"57222:5:14","nodeType":"VariableDeclaration","scope":14648,"src":"57204:23:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":14643,"name":"int256","nodeType":"ElementaryTypeName","src":"57204:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":14644,"nodeType":"ArrayTypeName","src":"57204:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"}],"src":"57179:49:14"},"returnParameters":{"id":14647,"nodeType":"ParameterList","parameters":[],"src":"57242:0:14"},"scope":15864,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14660,"nodeType":"FunctionDefinition","src":"57368:104:14","nodes":[],"documentation":{"id":14649,"nodeType":"StructuredDocumentation","src":"57249:114:14","text":"Asserts that two arrays of `int256` values are equal and includes error message into revert string on failure."},"functionSelector":"191f1b30","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"57377:8:14","parameters":{"id":14658,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14652,"mutability":"mutable","name":"left","nameLocation":"57404:4:14","nodeType":"VariableDeclaration","scope":14660,"src":"57386:22:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":14650,"name":"int256","nodeType":"ElementaryTypeName","src":"57386:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":14651,"nodeType":"ArrayTypeName","src":"57386:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"},{"constant":false,"id":14655,"mutability":"mutable","name":"right","nameLocation":"57428:5:14","nodeType":"VariableDeclaration","scope":14660,"src":"57410:23:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":14653,"name":"int256","nodeType":"ElementaryTypeName","src":"57410:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":14654,"nodeType":"ArrayTypeName","src":"57410:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"},{"constant":false,"id":14657,"mutability":"mutable","name":"error","nameLocation":"57451:5:14","nodeType":"VariableDeclaration","scope":14660,"src":"57435:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14656,"name":"string","nodeType":"ElementaryTypeName","src":"57435:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"57385:72:14"},"returnParameters":{"id":14659,"nodeType":"ParameterList","parameters":[],"src":"57471:0:14"},"scope":15864,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14668,"nodeType":"FunctionDefinition","src":"57531:61:14","nodes":[],"documentation":{"id":14661,"nodeType":"StructuredDocumentation","src":"57478:48:14","text":"Asserts that two `uint256` values are equal."},"functionSelector":"98296c54","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"57540:8:14","parameters":{"id":14666,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14663,"mutability":"mutable","name":"left","nameLocation":"57557:4:14","nodeType":"VariableDeclaration","scope":14668,"src":"57549:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14662,"name":"uint256","nodeType":"ElementaryTypeName","src":"57549:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14665,"mutability":"mutable","name":"right","nameLocation":"57571:5:14","nodeType":"VariableDeclaration","scope":14668,"src":"57563:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14664,"name":"uint256","nodeType":"ElementaryTypeName","src":"57563:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"57548:29:14"},"returnParameters":{"id":14667,"nodeType":"ParameterList","parameters":[],"src":"57591:0:14"},"scope":15864,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14678,"nodeType":"FunctionDefinition","src":"57661:83:14","nodes":[],"documentation":{"id":14669,"nodeType":"StructuredDocumentation","src":"57598:58:14","text":"Asserts that two arrays of `address` values are equal."},"functionSelector":"3868ac34","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"57670:8:14","parameters":{"id":14676,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14672,"mutability":"mutable","name":"left","nameLocation":"57698:4:14","nodeType":"VariableDeclaration","scope":14678,"src":"57679:23:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":14670,"name":"address","nodeType":"ElementaryTypeName","src":"57679:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":14671,"nodeType":"ArrayTypeName","src":"57679:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":14675,"mutability":"mutable","name":"right","nameLocation":"57723:5:14","nodeType":"VariableDeclaration","scope":14678,"src":"57704:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":14673,"name":"address","nodeType":"ElementaryTypeName","src":"57704:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":14674,"nodeType":"ArrayTypeName","src":"57704:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"57678:51:14"},"returnParameters":{"id":14677,"nodeType":"ParameterList","parameters":[],"src":"57743:0:14"},"scope":15864,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14690,"nodeType":"FunctionDefinition","src":"57870:106:14","nodes":[],"documentation":{"id":14679,"nodeType":"StructuredDocumentation","src":"57750:115:14","text":"Asserts that two arrays of `address` values are equal and includes error message into revert string on failure."},"functionSelector":"3e9173c5","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"57879:8:14","parameters":{"id":14688,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14682,"mutability":"mutable","name":"left","nameLocation":"57907:4:14","nodeType":"VariableDeclaration","scope":14690,"src":"57888:23:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":14680,"name":"address","nodeType":"ElementaryTypeName","src":"57888:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":14681,"nodeType":"ArrayTypeName","src":"57888:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":14685,"mutability":"mutable","name":"right","nameLocation":"57932:5:14","nodeType":"VariableDeclaration","scope":14690,"src":"57913:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":14683,"name":"address","nodeType":"ElementaryTypeName","src":"57913:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":14684,"nodeType":"ArrayTypeName","src":"57913:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":14687,"mutability":"mutable","name":"error","nameLocation":"57955:5:14","nodeType":"VariableDeclaration","scope":14690,"src":"57939:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14686,"name":"string","nodeType":"ElementaryTypeName","src":"57939:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"57887:74:14"},"returnParameters":{"id":14689,"nodeType":"ParameterList","parameters":[],"src":"57975:0:14"},"scope":15864,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14700,"nodeType":"FunctionDefinition","src":"58045:83:14","nodes":[],"documentation":{"id":14691,"nodeType":"StructuredDocumentation","src":"57982:58:14","text":"Asserts that two arrays of `bytes32` values are equal."},"functionSelector":"0cc9ee84","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"58054:8:14","parameters":{"id":14698,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14694,"mutability":"mutable","name":"left","nameLocation":"58082:4:14","nodeType":"VariableDeclaration","scope":14700,"src":"58063:23:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":14692,"name":"bytes32","nodeType":"ElementaryTypeName","src":"58063:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":14693,"nodeType":"ArrayTypeName","src":"58063:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":14697,"mutability":"mutable","name":"right","nameLocation":"58107:5:14","nodeType":"VariableDeclaration","scope":14700,"src":"58088:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":14695,"name":"bytes32","nodeType":"ElementaryTypeName","src":"58088:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":14696,"nodeType":"ArrayTypeName","src":"58088:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"58062:51:14"},"returnParameters":{"id":14699,"nodeType":"ParameterList","parameters":[],"src":"58127:0:14"},"scope":15864,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14712,"nodeType":"FunctionDefinition","src":"58254:106:14","nodes":[],"documentation":{"id":14701,"nodeType":"StructuredDocumentation","src":"58134:115:14","text":"Asserts that two arrays of `bytes32` values are equal and includes error message into revert string on failure."},"functionSelector":"e03e9177","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"58263:8:14","parameters":{"id":14710,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14704,"mutability":"mutable","name":"left","nameLocation":"58291:4:14","nodeType":"VariableDeclaration","scope":14712,"src":"58272:23:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":14702,"name":"bytes32","nodeType":"ElementaryTypeName","src":"58272:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":14703,"nodeType":"ArrayTypeName","src":"58272:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":14707,"mutability":"mutable","name":"right","nameLocation":"58316:5:14","nodeType":"VariableDeclaration","scope":14712,"src":"58297:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":14705,"name":"bytes32","nodeType":"ElementaryTypeName","src":"58297:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":14706,"nodeType":"ArrayTypeName","src":"58297:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":14709,"mutability":"mutable","name":"error","nameLocation":"58339:5:14","nodeType":"VariableDeclaration","scope":14712,"src":"58323:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14708,"name":"string","nodeType":"ElementaryTypeName","src":"58323:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"58271:74:14"},"returnParameters":{"id":14711,"nodeType":"ParameterList","parameters":[],"src":"58359:0:14"},"scope":15864,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14722,"nodeType":"FunctionDefinition","src":"58428:81:14","nodes":[],"documentation":{"id":14713,"nodeType":"StructuredDocumentation","src":"58366:57:14","text":"Asserts that two arrays of `string` values are equal."},"functionSelector":"cf1c049c","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"58437:8:14","parameters":{"id":14720,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14716,"mutability":"mutable","name":"left","nameLocation":"58464:4:14","nodeType":"VariableDeclaration","scope":14722,"src":"58446:22:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":14714,"name":"string","nodeType":"ElementaryTypeName","src":"58446:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":14715,"nodeType":"ArrayTypeName","src":"58446:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":14719,"mutability":"mutable","name":"right","nameLocation":"58488:5:14","nodeType":"VariableDeclaration","scope":14722,"src":"58470:23:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":14717,"name":"string","nodeType":"ElementaryTypeName","src":"58470:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":14718,"nodeType":"ArrayTypeName","src":"58470:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"58445:49:14"},"returnParameters":{"id":14721,"nodeType":"ParameterList","parameters":[],"src":"58508:0:14"},"scope":15864,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14734,"nodeType":"FunctionDefinition","src":"58634:104:14","nodes":[],"documentation":{"id":14723,"nodeType":"StructuredDocumentation","src":"58515:114:14","text":"Asserts that two arrays of `string` values are equal and includes error message into revert string on failure."},"functionSelector":"eff6b27d","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"58643:8:14","parameters":{"id":14732,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14726,"mutability":"mutable","name":"left","nameLocation":"58670:4:14","nodeType":"VariableDeclaration","scope":14734,"src":"58652:22:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":14724,"name":"string","nodeType":"ElementaryTypeName","src":"58652:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":14725,"nodeType":"ArrayTypeName","src":"58652:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":14729,"mutability":"mutable","name":"right","nameLocation":"58694:5:14","nodeType":"VariableDeclaration","scope":14734,"src":"58676:23:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":14727,"name":"string","nodeType":"ElementaryTypeName","src":"58676:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":14728,"nodeType":"ArrayTypeName","src":"58676:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":14731,"mutability":"mutable","name":"error","nameLocation":"58717:5:14","nodeType":"VariableDeclaration","scope":14734,"src":"58701:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14730,"name":"string","nodeType":"ElementaryTypeName","src":"58701:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"58651:72:14"},"returnParameters":{"id":14733,"nodeType":"ParameterList","parameters":[],"src":"58737:0:14"},"scope":15864,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14744,"nodeType":"FunctionDefinition","src":"58805:79:14","nodes":[],"documentation":{"id":14735,"nodeType":"StructuredDocumentation","src":"58744:56:14","text":"Asserts that two arrays of `bytes` values are equal."},"functionSelector":"e5fb9b4a","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"58814:8:14","parameters":{"id":14742,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14738,"mutability":"mutable","name":"left","nameLocation":"58840:4:14","nodeType":"VariableDeclaration","scope":14744,"src":"58823:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":14736,"name":"bytes","nodeType":"ElementaryTypeName","src":"58823:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":14737,"nodeType":"ArrayTypeName","src":"58823:7:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":14741,"mutability":"mutable","name":"right","nameLocation":"58863:5:14","nodeType":"VariableDeclaration","scope":14744,"src":"58846:22:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":14739,"name":"bytes","nodeType":"ElementaryTypeName","src":"58846:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":14740,"nodeType":"ArrayTypeName","src":"58846:7:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"58822:47:14"},"returnParameters":{"id":14743,"nodeType":"ParameterList","parameters":[],"src":"58883:0:14"},"scope":15864,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14756,"nodeType":"FunctionDefinition","src":"59008:102:14","nodes":[],"documentation":{"id":14745,"nodeType":"StructuredDocumentation","src":"58890:113:14","text":"Asserts that two arrays of `bytes` values are equal and includes error message into revert string on failure."},"functionSelector":"f413f0b6","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"59017:8:14","parameters":{"id":14754,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14748,"mutability":"mutable","name":"left","nameLocation":"59043:4:14","nodeType":"VariableDeclaration","scope":14756,"src":"59026:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":14746,"name":"bytes","nodeType":"ElementaryTypeName","src":"59026:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":14747,"nodeType":"ArrayTypeName","src":"59026:7:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":14751,"mutability":"mutable","name":"right","nameLocation":"59066:5:14","nodeType":"VariableDeclaration","scope":14756,"src":"59049:22:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":14749,"name":"bytes","nodeType":"ElementaryTypeName","src":"59049:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":14750,"nodeType":"ArrayTypeName","src":"59049:7:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":14753,"mutability":"mutable","name":"error","nameLocation":"59089:5:14","nodeType":"VariableDeclaration","scope":14756,"src":"59073:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14752,"name":"string","nodeType":"ElementaryTypeName","src":"59073:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"59025:70:14"},"returnParameters":{"id":14755,"nodeType":"ParameterList","parameters":[],"src":"59109:0:14"},"scope":15864,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14766,"nodeType":"FunctionDefinition","src":"59226:84:14","nodes":[],"documentation":{"id":14757,"nodeType":"StructuredDocumentation","src":"59116:105:14","text":"Asserts that two `uint256` values are equal and includes error message into revert string on failure."},"functionSelector":"88b44c85","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"59235:8:14","parameters":{"id":14764,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14759,"mutability":"mutable","name":"left","nameLocation":"59252:4:14","nodeType":"VariableDeclaration","scope":14766,"src":"59244:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14758,"name":"uint256","nodeType":"ElementaryTypeName","src":"59244:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14761,"mutability":"mutable","name":"right","nameLocation":"59266:5:14","nodeType":"VariableDeclaration","scope":14766,"src":"59258:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14760,"name":"uint256","nodeType":"ElementaryTypeName","src":"59258:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14763,"mutability":"mutable","name":"error","nameLocation":"59289:5:14","nodeType":"VariableDeclaration","scope":14766,"src":"59273:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14762,"name":"string","nodeType":"ElementaryTypeName","src":"59273:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"59243:52:14"},"returnParameters":{"id":14765,"nodeType":"ParameterList","parameters":[],"src":"59309:0:14"},"scope":15864,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14774,"nodeType":"FunctionDefinition","src":"59368:59:14","nodes":[],"documentation":{"id":14767,"nodeType":"StructuredDocumentation","src":"59316:47:14","text":"Asserts that two `int256` values are equal."},"functionSelector":"fe74f05b","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"59377:8:14","parameters":{"id":14772,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14769,"mutability":"mutable","name":"left","nameLocation":"59393:4:14","nodeType":"VariableDeclaration","scope":14774,"src":"59386:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14768,"name":"int256","nodeType":"ElementaryTypeName","src":"59386:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14771,"mutability":"mutable","name":"right","nameLocation":"59406:5:14","nodeType":"VariableDeclaration","scope":14774,"src":"59399:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14770,"name":"int256","nodeType":"ElementaryTypeName","src":"59399:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"59385:27:14"},"returnParameters":{"id":14773,"nodeType":"ParameterList","parameters":[],"src":"59426:0:14"},"scope":15864,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14784,"nodeType":"FunctionDefinition","src":"59542:82:14","nodes":[],"documentation":{"id":14775,"nodeType":"StructuredDocumentation","src":"59433:104:14","text":"Asserts that two `int256` values are equal and includes error message into revert string on failure."},"functionSelector":"714a2f13","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"59551:8:14","parameters":{"id":14782,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14777,"mutability":"mutable","name":"left","nameLocation":"59567:4:14","nodeType":"VariableDeclaration","scope":14784,"src":"59560:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14776,"name":"int256","nodeType":"ElementaryTypeName","src":"59560:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14779,"mutability":"mutable","name":"right","nameLocation":"59580:5:14","nodeType":"VariableDeclaration","scope":14784,"src":"59573:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14778,"name":"int256","nodeType":"ElementaryTypeName","src":"59573:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14781,"mutability":"mutable","name":"error","nameLocation":"59603:5:14","nodeType":"VariableDeclaration","scope":14784,"src":"59587:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14780,"name":"string","nodeType":"ElementaryTypeName","src":"59587:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"59559:50:14"},"returnParameters":{"id":14783,"nodeType":"ParameterList","parameters":[],"src":"59623:0:14"},"scope":15864,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14792,"nodeType":"FunctionDefinition","src":"59683:61:14","nodes":[],"documentation":{"id":14785,"nodeType":"StructuredDocumentation","src":"59630:48:14","text":"Asserts that two `address` values are equal."},"functionSelector":"515361f6","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"59692:8:14","parameters":{"id":14790,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14787,"mutability":"mutable","name":"left","nameLocation":"59709:4:14","nodeType":"VariableDeclaration","scope":14792,"src":"59701:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":14786,"name":"address","nodeType":"ElementaryTypeName","src":"59701:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":14789,"mutability":"mutable","name":"right","nameLocation":"59723:5:14","nodeType":"VariableDeclaration","scope":14792,"src":"59715:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":14788,"name":"address","nodeType":"ElementaryTypeName","src":"59715:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"59700:29:14"},"returnParameters":{"id":14791,"nodeType":"ParameterList","parameters":[],"src":"59743:0:14"},"scope":15864,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14802,"nodeType":"FunctionDefinition","src":"59860:84:14","nodes":[],"documentation":{"id":14793,"nodeType":"StructuredDocumentation","src":"59750:105:14","text":"Asserts that two `address` values are equal and includes error message into revert string on failure."},"functionSelector":"2f2769d1","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"59869:8:14","parameters":{"id":14800,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14795,"mutability":"mutable","name":"left","nameLocation":"59886:4:14","nodeType":"VariableDeclaration","scope":14802,"src":"59878:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":14794,"name":"address","nodeType":"ElementaryTypeName","src":"59878:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":14797,"mutability":"mutable","name":"right","nameLocation":"59900:5:14","nodeType":"VariableDeclaration","scope":14802,"src":"59892:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":14796,"name":"address","nodeType":"ElementaryTypeName","src":"59892:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":14799,"mutability":"mutable","name":"error","nameLocation":"59923:5:14","nodeType":"VariableDeclaration","scope":14802,"src":"59907:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14798,"name":"string","nodeType":"ElementaryTypeName","src":"59907:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"59877:52:14"},"returnParameters":{"id":14801,"nodeType":"ParameterList","parameters":[],"src":"59943:0:14"},"scope":15864,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14810,"nodeType":"FunctionDefinition","src":"60003:61:14","nodes":[],"documentation":{"id":14803,"nodeType":"StructuredDocumentation","src":"59950:48:14","text":"Asserts that two `bytes32` values are equal."},"functionSelector":"7c84c69b","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"60012:8:14","parameters":{"id":14808,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14805,"mutability":"mutable","name":"left","nameLocation":"60029:4:14","nodeType":"VariableDeclaration","scope":14810,"src":"60021:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":14804,"name":"bytes32","nodeType":"ElementaryTypeName","src":"60021:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":14807,"mutability":"mutable","name":"right","nameLocation":"60043:5:14","nodeType":"VariableDeclaration","scope":14810,"src":"60035:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":14806,"name":"bytes32","nodeType":"ElementaryTypeName","src":"60035:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"60020:29:14"},"returnParameters":{"id":14809,"nodeType":"ParameterList","parameters":[],"src":"60063:0:14"},"scope":15864,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14820,"nodeType":"FunctionDefinition","src":"60180:84:14","nodes":[],"documentation":{"id":14811,"nodeType":"StructuredDocumentation","src":"60070:105:14","text":"Asserts that two `bytes32` values are equal and includes error message into revert string on failure."},"functionSelector":"c1fa1ed0","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"60189:8:14","parameters":{"id":14818,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14813,"mutability":"mutable","name":"left","nameLocation":"60206:4:14","nodeType":"VariableDeclaration","scope":14820,"src":"60198:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":14812,"name":"bytes32","nodeType":"ElementaryTypeName","src":"60198:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":14815,"mutability":"mutable","name":"right","nameLocation":"60220:5:14","nodeType":"VariableDeclaration","scope":14820,"src":"60212:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":14814,"name":"bytes32","nodeType":"ElementaryTypeName","src":"60212:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":14817,"mutability":"mutable","name":"error","nameLocation":"60243:5:14","nodeType":"VariableDeclaration","scope":14820,"src":"60227:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14816,"name":"string","nodeType":"ElementaryTypeName","src":"60227:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"60197:52:14"},"returnParameters":{"id":14819,"nodeType":"ParameterList","parameters":[],"src":"60263:0:14"},"scope":15864,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14826,"nodeType":"FunctionDefinition","src":"60321:51:14","nodes":[],"documentation":{"id":14821,"nodeType":"StructuredDocumentation","src":"60270:46:14","text":"Asserts that the given condition is false."},"functionSelector":"a5982885","implemented":false,"kind":"function","modifiers":[],"name":"assertFalse","nameLocation":"60330:11:14","parameters":{"id":14824,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14823,"mutability":"mutable","name":"condition","nameLocation":"60347:9:14","nodeType":"VariableDeclaration","scope":14826,"src":"60342:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":14822,"name":"bool","nodeType":"ElementaryTypeName","src":"60342:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"60341:16:14"},"returnParameters":{"id":14825,"nodeType":"ParameterList","parameters":[],"src":"60371:0:14"},"scope":15864,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14834,"nodeType":"FunctionDefinition","src":"60486:74:14","nodes":[],"documentation":{"id":14827,"nodeType":"StructuredDocumentation","src":"60378:103:14","text":"Asserts that the given condition is false and includes error message into revert string on failure."},"functionSelector":"7ba04809","implemented":false,"kind":"function","modifiers":[],"name":"assertFalse","nameLocation":"60495:11:14","parameters":{"id":14832,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14829,"mutability":"mutable","name":"condition","nameLocation":"60512:9:14","nodeType":"VariableDeclaration","scope":14834,"src":"60507:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":14828,"name":"bool","nodeType":"ElementaryTypeName","src":"60507:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":14831,"mutability":"mutable","name":"error","nameLocation":"60539:5:14","nodeType":"VariableDeclaration","scope":14834,"src":"60523:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14830,"name":"string","nodeType":"ElementaryTypeName","src":"60523:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"60506:39:14"},"returnParameters":{"id":14833,"nodeType":"ParameterList","parameters":[],"src":"60559:0:14"},"scope":15864,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14844,"nodeType":"FunctionDefinition","src":"60721:86:14","nodes":[],"documentation":{"id":14835,"nodeType":"StructuredDocumentation","src":"60566:150:14","text":"Compares two `uint256` values. Expects first value to be greater than or equal to second.\n Formats values with decimals in failure message."},"functionSelector":"3d1fe08a","implemented":false,"kind":"function","modifiers":[],"name":"assertGeDecimal","nameLocation":"60730:15:14","parameters":{"id":14842,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14837,"mutability":"mutable","name":"left","nameLocation":"60754:4:14","nodeType":"VariableDeclaration","scope":14844,"src":"60746:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14836,"name":"uint256","nodeType":"ElementaryTypeName","src":"60746:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14839,"mutability":"mutable","name":"right","nameLocation":"60768:5:14","nodeType":"VariableDeclaration","scope":14844,"src":"60760:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14838,"name":"uint256","nodeType":"ElementaryTypeName","src":"60760:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14841,"mutability":"mutable","name":"decimals","nameLocation":"60783:8:14","nodeType":"VariableDeclaration","scope":14844,"src":"60775:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14840,"name":"uint256","nodeType":"ElementaryTypeName","src":"60775:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"60745:47:14"},"returnParameters":{"id":14843,"nodeType":"ParameterList","parameters":[],"src":"60806:0:14"},"scope":15864,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14856,"nodeType":"FunctionDefinition","src":"61022:109:14","nodes":[],"documentation":{"id":14845,"nodeType":"StructuredDocumentation","src":"60813:204:14","text":"Compares two `uint256` values. Expects first value to be greater than or equal to second.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"8bff9133","implemented":false,"kind":"function","modifiers":[],"name":"assertGeDecimal","nameLocation":"61031:15:14","parameters":{"id":14854,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14847,"mutability":"mutable","name":"left","nameLocation":"61055:4:14","nodeType":"VariableDeclaration","scope":14856,"src":"61047:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14846,"name":"uint256","nodeType":"ElementaryTypeName","src":"61047:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14849,"mutability":"mutable","name":"right","nameLocation":"61069:5:14","nodeType":"VariableDeclaration","scope":14856,"src":"61061:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14848,"name":"uint256","nodeType":"ElementaryTypeName","src":"61061:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14851,"mutability":"mutable","name":"decimals","nameLocation":"61084:8:14","nodeType":"VariableDeclaration","scope":14856,"src":"61076:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14850,"name":"uint256","nodeType":"ElementaryTypeName","src":"61076:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14853,"mutability":"mutable","name":"error","nameLocation":"61110:5:14","nodeType":"VariableDeclaration","scope":14856,"src":"61094:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14852,"name":"string","nodeType":"ElementaryTypeName","src":"61094:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"61046:70:14"},"returnParameters":{"id":14855,"nodeType":"ParameterList","parameters":[],"src":"61130:0:14"},"scope":15864,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14866,"nodeType":"FunctionDefinition","src":"61291:84:14","nodes":[],"documentation":{"id":14857,"nodeType":"StructuredDocumentation","src":"61137:149:14","text":"Compares two `int256` values. Expects first value to be greater than or equal to second.\n Formats values with decimals in failure message."},"functionSelector":"dc28c0f1","implemented":false,"kind":"function","modifiers":[],"name":"assertGeDecimal","nameLocation":"61300:15:14","parameters":{"id":14864,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14859,"mutability":"mutable","name":"left","nameLocation":"61323:4:14","nodeType":"VariableDeclaration","scope":14866,"src":"61316:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14858,"name":"int256","nodeType":"ElementaryTypeName","src":"61316:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14861,"mutability":"mutable","name":"right","nameLocation":"61336:5:14","nodeType":"VariableDeclaration","scope":14866,"src":"61329:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14860,"name":"int256","nodeType":"ElementaryTypeName","src":"61329:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14863,"mutability":"mutable","name":"decimals","nameLocation":"61351:8:14","nodeType":"VariableDeclaration","scope":14866,"src":"61343:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14862,"name":"uint256","nodeType":"ElementaryTypeName","src":"61343:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"61315:45:14"},"returnParameters":{"id":14865,"nodeType":"ParameterList","parameters":[],"src":"61374:0:14"},"scope":15864,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14878,"nodeType":"FunctionDefinition","src":"61589:107:14","nodes":[],"documentation":{"id":14867,"nodeType":"StructuredDocumentation","src":"61381:203:14","text":"Compares two `int256` values. Expects first value to be greater than or equal to second.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"5df93c9b","implemented":false,"kind":"function","modifiers":[],"name":"assertGeDecimal","nameLocation":"61598:15:14","parameters":{"id":14876,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14869,"mutability":"mutable","name":"left","nameLocation":"61621:4:14","nodeType":"VariableDeclaration","scope":14878,"src":"61614:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14868,"name":"int256","nodeType":"ElementaryTypeName","src":"61614:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14871,"mutability":"mutable","name":"right","nameLocation":"61634:5:14","nodeType":"VariableDeclaration","scope":14878,"src":"61627:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14870,"name":"int256","nodeType":"ElementaryTypeName","src":"61627:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14873,"mutability":"mutable","name":"decimals","nameLocation":"61649:8:14","nodeType":"VariableDeclaration","scope":14878,"src":"61641:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14872,"name":"uint256","nodeType":"ElementaryTypeName","src":"61641:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14875,"mutability":"mutable","name":"error","nameLocation":"61675:5:14","nodeType":"VariableDeclaration","scope":14878,"src":"61659:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14874,"name":"string","nodeType":"ElementaryTypeName","src":"61659:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"61613:68:14"},"returnParameters":{"id":14877,"nodeType":"ParameterList","parameters":[],"src":"61695:0:14"},"scope":15864,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14886,"nodeType":"FunctionDefinition","src":"61800:61:14","nodes":[],"documentation":{"id":14879,"nodeType":"StructuredDocumentation","src":"61702:93:14","text":"Compares two `uint256` values. Expects first value to be greater than or equal to second."},"functionSelector":"a8d4d1d9","implemented":false,"kind":"function","modifiers":[],"name":"assertGe","nameLocation":"61809:8:14","parameters":{"id":14884,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14881,"mutability":"mutable","name":"left","nameLocation":"61826:4:14","nodeType":"VariableDeclaration","scope":14886,"src":"61818:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14880,"name":"uint256","nodeType":"ElementaryTypeName","src":"61818:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14883,"mutability":"mutable","name":"right","nameLocation":"61840:5:14","nodeType":"VariableDeclaration","scope":14886,"src":"61832:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14882,"name":"uint256","nodeType":"ElementaryTypeName","src":"61832:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"61817:29:14"},"returnParameters":{"id":14885,"nodeType":"ParameterList","parameters":[],"src":"61860:0:14"},"scope":15864,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14896,"nodeType":"FunctionDefinition","src":"62027:84:14","nodes":[],"documentation":{"id":14887,"nodeType":"StructuredDocumentation","src":"61867:155:14","text":"Compares two `uint256` values. Expects first value to be greater than or equal to second.\n Includes error message into revert string on failure."},"functionSelector":"e25242c0","implemented":false,"kind":"function","modifiers":[],"name":"assertGe","nameLocation":"62036:8:14","parameters":{"id":14894,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14889,"mutability":"mutable","name":"left","nameLocation":"62053:4:14","nodeType":"VariableDeclaration","scope":14896,"src":"62045:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14888,"name":"uint256","nodeType":"ElementaryTypeName","src":"62045:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14891,"mutability":"mutable","name":"right","nameLocation":"62067:5:14","nodeType":"VariableDeclaration","scope":14896,"src":"62059:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14890,"name":"uint256","nodeType":"ElementaryTypeName","src":"62059:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14893,"mutability":"mutable","name":"error","nameLocation":"62090:5:14","nodeType":"VariableDeclaration","scope":14896,"src":"62074:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14892,"name":"string","nodeType":"ElementaryTypeName","src":"62074:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"62044:52:14"},"returnParameters":{"id":14895,"nodeType":"ParameterList","parameters":[],"src":"62110:0:14"},"scope":15864,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14904,"nodeType":"FunctionDefinition","src":"62214:59:14","nodes":[],"documentation":{"id":14897,"nodeType":"StructuredDocumentation","src":"62117:92:14","text":"Compares two `int256` values. Expects first value to be greater than or equal to second."},"functionSelector":"0a30b771","implemented":false,"kind":"function","modifiers":[],"name":"assertGe","nameLocation":"62223:8:14","parameters":{"id":14902,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14899,"mutability":"mutable","name":"left","nameLocation":"62239:4:14","nodeType":"VariableDeclaration","scope":14904,"src":"62232:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14898,"name":"int256","nodeType":"ElementaryTypeName","src":"62232:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14901,"mutability":"mutable","name":"right","nameLocation":"62252:5:14","nodeType":"VariableDeclaration","scope":14904,"src":"62245:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14900,"name":"int256","nodeType":"ElementaryTypeName","src":"62245:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"62231:27:14"},"returnParameters":{"id":14903,"nodeType":"ParameterList","parameters":[],"src":"62272:0:14"},"scope":15864,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14914,"nodeType":"FunctionDefinition","src":"62438:82:14","nodes":[],"documentation":{"id":14905,"nodeType":"StructuredDocumentation","src":"62279:154:14","text":"Compares two `int256` values. Expects first value to be greater than or equal to second.\n Includes error message into revert string on failure."},"functionSelector":"a84328dd","implemented":false,"kind":"function","modifiers":[],"name":"assertGe","nameLocation":"62447:8:14","parameters":{"id":14912,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14907,"mutability":"mutable","name":"left","nameLocation":"62463:4:14","nodeType":"VariableDeclaration","scope":14914,"src":"62456:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14906,"name":"int256","nodeType":"ElementaryTypeName","src":"62456:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14909,"mutability":"mutable","name":"right","nameLocation":"62476:5:14","nodeType":"VariableDeclaration","scope":14914,"src":"62469:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14908,"name":"int256","nodeType":"ElementaryTypeName","src":"62469:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14911,"mutability":"mutable","name":"error","nameLocation":"62499:5:14","nodeType":"VariableDeclaration","scope":14914,"src":"62483:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14910,"name":"string","nodeType":"ElementaryTypeName","src":"62483:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"62455:50:14"},"returnParameters":{"id":14913,"nodeType":"ParameterList","parameters":[],"src":"62519:0:14"},"scope":15864,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14924,"nodeType":"FunctionDefinition","src":"62669:86:14","nodes":[],"documentation":{"id":14915,"nodeType":"StructuredDocumentation","src":"62526:138:14","text":"Compares two `uint256` values. Expects first value to be greater than second.\n Formats values with decimals in failure message."},"functionSelector":"eccd2437","implemented":false,"kind":"function","modifiers":[],"name":"assertGtDecimal","nameLocation":"62678:15:14","parameters":{"id":14922,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14917,"mutability":"mutable","name":"left","nameLocation":"62702:4:14","nodeType":"VariableDeclaration","scope":14924,"src":"62694:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14916,"name":"uint256","nodeType":"ElementaryTypeName","src":"62694:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14919,"mutability":"mutable","name":"right","nameLocation":"62716:5:14","nodeType":"VariableDeclaration","scope":14924,"src":"62708:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14918,"name":"uint256","nodeType":"ElementaryTypeName","src":"62708:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14921,"mutability":"mutable","name":"decimals","nameLocation":"62731:8:14","nodeType":"VariableDeclaration","scope":14924,"src":"62723:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14920,"name":"uint256","nodeType":"ElementaryTypeName","src":"62723:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"62693:47:14"},"returnParameters":{"id":14923,"nodeType":"ParameterList","parameters":[],"src":"62754:0:14"},"scope":15864,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14936,"nodeType":"FunctionDefinition","src":"62958:109:14","nodes":[],"documentation":{"id":14925,"nodeType":"StructuredDocumentation","src":"62761:192:14","text":"Compares two `uint256` values. Expects first value to be greater than second.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"64949a8d","implemented":false,"kind":"function","modifiers":[],"name":"assertGtDecimal","nameLocation":"62967:15:14","parameters":{"id":14934,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14927,"mutability":"mutable","name":"left","nameLocation":"62991:4:14","nodeType":"VariableDeclaration","scope":14936,"src":"62983:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14926,"name":"uint256","nodeType":"ElementaryTypeName","src":"62983:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14929,"mutability":"mutable","name":"right","nameLocation":"63005:5:14","nodeType":"VariableDeclaration","scope":14936,"src":"62997:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14928,"name":"uint256","nodeType":"ElementaryTypeName","src":"62997:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14931,"mutability":"mutable","name":"decimals","nameLocation":"63020:8:14","nodeType":"VariableDeclaration","scope":14936,"src":"63012:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14930,"name":"uint256","nodeType":"ElementaryTypeName","src":"63012:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14933,"mutability":"mutable","name":"error","nameLocation":"63046:5:14","nodeType":"VariableDeclaration","scope":14936,"src":"63030:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14932,"name":"string","nodeType":"ElementaryTypeName","src":"63030:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"62982:70:14"},"returnParameters":{"id":14935,"nodeType":"ParameterList","parameters":[],"src":"63066:0:14"},"scope":15864,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14946,"nodeType":"FunctionDefinition","src":"63215:84:14","nodes":[],"documentation":{"id":14937,"nodeType":"StructuredDocumentation","src":"63073:137:14","text":"Compares two `int256` values. Expects first value to be greater than second.\n Formats values with decimals in failure message."},"functionSelector":"78611f0e","implemented":false,"kind":"function","modifiers":[],"name":"assertGtDecimal","nameLocation":"63224:15:14","parameters":{"id":14944,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14939,"mutability":"mutable","name":"left","nameLocation":"63247:4:14","nodeType":"VariableDeclaration","scope":14946,"src":"63240:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14938,"name":"int256","nodeType":"ElementaryTypeName","src":"63240:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14941,"mutability":"mutable","name":"right","nameLocation":"63260:5:14","nodeType":"VariableDeclaration","scope":14946,"src":"63253:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14940,"name":"int256","nodeType":"ElementaryTypeName","src":"63253:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14943,"mutability":"mutable","name":"decimals","nameLocation":"63275:8:14","nodeType":"VariableDeclaration","scope":14946,"src":"63267:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14942,"name":"uint256","nodeType":"ElementaryTypeName","src":"63267:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"63239:45:14"},"returnParameters":{"id":14945,"nodeType":"ParameterList","parameters":[],"src":"63298:0:14"},"scope":15864,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14958,"nodeType":"FunctionDefinition","src":"63501:107:14","nodes":[],"documentation":{"id":14947,"nodeType":"StructuredDocumentation","src":"63305:191:14","text":"Compares two `int256` values. Expects first value to be greater than second.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"04a5c7ab","implemented":false,"kind":"function","modifiers":[],"name":"assertGtDecimal","nameLocation":"63510:15:14","parameters":{"id":14956,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14949,"mutability":"mutable","name":"left","nameLocation":"63533:4:14","nodeType":"VariableDeclaration","scope":14958,"src":"63526:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14948,"name":"int256","nodeType":"ElementaryTypeName","src":"63526:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14951,"mutability":"mutable","name":"right","nameLocation":"63546:5:14","nodeType":"VariableDeclaration","scope":14958,"src":"63539:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14950,"name":"int256","nodeType":"ElementaryTypeName","src":"63539:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14953,"mutability":"mutable","name":"decimals","nameLocation":"63561:8:14","nodeType":"VariableDeclaration","scope":14958,"src":"63553:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14952,"name":"uint256","nodeType":"ElementaryTypeName","src":"63553:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14955,"mutability":"mutable","name":"error","nameLocation":"63587:5:14","nodeType":"VariableDeclaration","scope":14958,"src":"63571:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14954,"name":"string","nodeType":"ElementaryTypeName","src":"63571:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"63525:68:14"},"returnParameters":{"id":14957,"nodeType":"ParameterList","parameters":[],"src":"63607:0:14"},"scope":15864,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14966,"nodeType":"FunctionDefinition","src":"63700:61:14","nodes":[],"documentation":{"id":14959,"nodeType":"StructuredDocumentation","src":"63614:81:14","text":"Compares two `uint256` values. Expects first value to be greater than second."},"functionSelector":"db07fcd2","implemented":false,"kind":"function","modifiers":[],"name":"assertGt","nameLocation":"63709:8:14","parameters":{"id":14964,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14961,"mutability":"mutable","name":"left","nameLocation":"63726:4:14","nodeType":"VariableDeclaration","scope":14966,"src":"63718:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14960,"name":"uint256","nodeType":"ElementaryTypeName","src":"63718:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14963,"mutability":"mutable","name":"right","nameLocation":"63740:5:14","nodeType":"VariableDeclaration","scope":14966,"src":"63732:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14962,"name":"uint256","nodeType":"ElementaryTypeName","src":"63732:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"63717:29:14"},"returnParameters":{"id":14965,"nodeType":"ParameterList","parameters":[],"src":"63760:0:14"},"scope":15864,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14976,"nodeType":"FunctionDefinition","src":"63915:84:14","nodes":[],"documentation":{"id":14967,"nodeType":"StructuredDocumentation","src":"63767:143:14","text":"Compares two `uint256` values. Expects first value to be greater than second.\n Includes error message into revert string on failure."},"functionSelector":"d9a3c4d2","implemented":false,"kind":"function","modifiers":[],"name":"assertGt","nameLocation":"63924:8:14","parameters":{"id":14974,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14969,"mutability":"mutable","name":"left","nameLocation":"63941:4:14","nodeType":"VariableDeclaration","scope":14976,"src":"63933:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14968,"name":"uint256","nodeType":"ElementaryTypeName","src":"63933:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14971,"mutability":"mutable","name":"right","nameLocation":"63955:5:14","nodeType":"VariableDeclaration","scope":14976,"src":"63947:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14970,"name":"uint256","nodeType":"ElementaryTypeName","src":"63947:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14973,"mutability":"mutable","name":"error","nameLocation":"63978:5:14","nodeType":"VariableDeclaration","scope":14976,"src":"63962:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14972,"name":"string","nodeType":"ElementaryTypeName","src":"63962:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"63932:52:14"},"returnParameters":{"id":14975,"nodeType":"ParameterList","parameters":[],"src":"63998:0:14"},"scope":15864,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14984,"nodeType":"FunctionDefinition","src":"64090:59:14","nodes":[],"documentation":{"id":14977,"nodeType":"StructuredDocumentation","src":"64005:80:14","text":"Compares two `int256` values. Expects first value to be greater than second."},"functionSelector":"5a362d45","implemented":false,"kind":"function","modifiers":[],"name":"assertGt","nameLocation":"64099:8:14","parameters":{"id":14982,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14979,"mutability":"mutable","name":"left","nameLocation":"64115:4:14","nodeType":"VariableDeclaration","scope":14984,"src":"64108:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14978,"name":"int256","nodeType":"ElementaryTypeName","src":"64108:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14981,"mutability":"mutable","name":"right","nameLocation":"64128:5:14","nodeType":"VariableDeclaration","scope":14984,"src":"64121:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14980,"name":"int256","nodeType":"ElementaryTypeName","src":"64121:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"64107:27:14"},"returnParameters":{"id":14983,"nodeType":"ParameterList","parameters":[],"src":"64148:0:14"},"scope":15864,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14994,"nodeType":"FunctionDefinition","src":"64302:82:14","nodes":[],"documentation":{"id":14985,"nodeType":"StructuredDocumentation","src":"64155:142:14","text":"Compares two `int256` values. Expects first value to be greater than second.\n Includes error message into revert string on failure."},"functionSelector":"f8d33b9b","implemented":false,"kind":"function","modifiers":[],"name":"assertGt","nameLocation":"64311:8:14","parameters":{"id":14992,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14987,"mutability":"mutable","name":"left","nameLocation":"64327:4:14","nodeType":"VariableDeclaration","scope":14994,"src":"64320:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14986,"name":"int256","nodeType":"ElementaryTypeName","src":"64320:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14989,"mutability":"mutable","name":"right","nameLocation":"64340:5:14","nodeType":"VariableDeclaration","scope":14994,"src":"64333:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14988,"name":"int256","nodeType":"ElementaryTypeName","src":"64333:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14991,"mutability":"mutable","name":"error","nameLocation":"64363:5:14","nodeType":"VariableDeclaration","scope":14994,"src":"64347:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14990,"name":"string","nodeType":"ElementaryTypeName","src":"64347:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"64319:50:14"},"returnParameters":{"id":14993,"nodeType":"ParameterList","parameters":[],"src":"64383:0:14"},"scope":15864,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15004,"nodeType":"FunctionDefinition","src":"64542:86:14","nodes":[],"documentation":{"id":14995,"nodeType":"StructuredDocumentation","src":"64390:147:14","text":"Compares two `uint256` values. Expects first value to be less than or equal to second.\n Formats values with decimals in failure message."},"functionSelector":"c304aab7","implemented":false,"kind":"function","modifiers":[],"name":"assertLeDecimal","nameLocation":"64551:15:14","parameters":{"id":15002,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14997,"mutability":"mutable","name":"left","nameLocation":"64575:4:14","nodeType":"VariableDeclaration","scope":15004,"src":"64567:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14996,"name":"uint256","nodeType":"ElementaryTypeName","src":"64567:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14999,"mutability":"mutable","name":"right","nameLocation":"64589:5:14","nodeType":"VariableDeclaration","scope":15004,"src":"64581:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14998,"name":"uint256","nodeType":"ElementaryTypeName","src":"64581:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15001,"mutability":"mutable","name":"decimals","nameLocation":"64604:8:14","nodeType":"VariableDeclaration","scope":15004,"src":"64596:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15000,"name":"uint256","nodeType":"ElementaryTypeName","src":"64596:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"64566:47:14"},"returnParameters":{"id":15003,"nodeType":"ParameterList","parameters":[],"src":"64627:0:14"},"scope":15864,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15016,"nodeType":"FunctionDefinition","src":"64840:109:14","nodes":[],"documentation":{"id":15005,"nodeType":"StructuredDocumentation","src":"64634:201:14","text":"Compares two `uint256` values. Expects first value to be less than or equal to second.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"7fefbbe0","implemented":false,"kind":"function","modifiers":[],"name":"assertLeDecimal","nameLocation":"64849:15:14","parameters":{"id":15014,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15007,"mutability":"mutable","name":"left","nameLocation":"64873:4:14","nodeType":"VariableDeclaration","scope":15016,"src":"64865:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15006,"name":"uint256","nodeType":"ElementaryTypeName","src":"64865:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15009,"mutability":"mutable","name":"right","nameLocation":"64887:5:14","nodeType":"VariableDeclaration","scope":15016,"src":"64879:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15008,"name":"uint256","nodeType":"ElementaryTypeName","src":"64879:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15011,"mutability":"mutable","name":"decimals","nameLocation":"64902:8:14","nodeType":"VariableDeclaration","scope":15016,"src":"64894:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15010,"name":"uint256","nodeType":"ElementaryTypeName","src":"64894:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15013,"mutability":"mutable","name":"error","nameLocation":"64928:5:14","nodeType":"VariableDeclaration","scope":15016,"src":"64912:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15012,"name":"string","nodeType":"ElementaryTypeName","src":"64912:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"64864:70:14"},"returnParameters":{"id":15015,"nodeType":"ParameterList","parameters":[],"src":"64948:0:14"},"scope":15864,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15026,"nodeType":"FunctionDefinition","src":"65106:84:14","nodes":[],"documentation":{"id":15017,"nodeType":"StructuredDocumentation","src":"64955:146:14","text":"Compares two `int256` values. Expects first value to be less than or equal to second.\n Formats values with decimals in failure message."},"functionSelector":"11d1364a","implemented":false,"kind":"function","modifiers":[],"name":"assertLeDecimal","nameLocation":"65115:15:14","parameters":{"id":15024,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15019,"mutability":"mutable","name":"left","nameLocation":"65138:4:14","nodeType":"VariableDeclaration","scope":15026,"src":"65131:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15018,"name":"int256","nodeType":"ElementaryTypeName","src":"65131:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":15021,"mutability":"mutable","name":"right","nameLocation":"65151:5:14","nodeType":"VariableDeclaration","scope":15026,"src":"65144:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15020,"name":"int256","nodeType":"ElementaryTypeName","src":"65144:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":15023,"mutability":"mutable","name":"decimals","nameLocation":"65166:8:14","nodeType":"VariableDeclaration","scope":15026,"src":"65158:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15022,"name":"uint256","nodeType":"ElementaryTypeName","src":"65158:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"65130:45:14"},"returnParameters":{"id":15025,"nodeType":"ParameterList","parameters":[],"src":"65189:0:14"},"scope":15864,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15038,"nodeType":"FunctionDefinition","src":"65401:107:14","nodes":[],"documentation":{"id":15027,"nodeType":"StructuredDocumentation","src":"65196:200:14","text":"Compares two `int256` values. Expects first value to be less than or equal to second.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"aa5cf788","implemented":false,"kind":"function","modifiers":[],"name":"assertLeDecimal","nameLocation":"65410:15:14","parameters":{"id":15036,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15029,"mutability":"mutable","name":"left","nameLocation":"65433:4:14","nodeType":"VariableDeclaration","scope":15038,"src":"65426:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15028,"name":"int256","nodeType":"ElementaryTypeName","src":"65426:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":15031,"mutability":"mutable","name":"right","nameLocation":"65446:5:14","nodeType":"VariableDeclaration","scope":15038,"src":"65439:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15030,"name":"int256","nodeType":"ElementaryTypeName","src":"65439:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":15033,"mutability":"mutable","name":"decimals","nameLocation":"65461:8:14","nodeType":"VariableDeclaration","scope":15038,"src":"65453:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15032,"name":"uint256","nodeType":"ElementaryTypeName","src":"65453:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15035,"mutability":"mutable","name":"error","nameLocation":"65487:5:14","nodeType":"VariableDeclaration","scope":15038,"src":"65471:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15034,"name":"string","nodeType":"ElementaryTypeName","src":"65471:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"65425:68:14"},"returnParameters":{"id":15037,"nodeType":"ParameterList","parameters":[],"src":"65507:0:14"},"scope":15864,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15046,"nodeType":"FunctionDefinition","src":"65609:61:14","nodes":[],"documentation":{"id":15039,"nodeType":"StructuredDocumentation","src":"65514:90:14","text":"Compares two `uint256` values. Expects first value to be less than or equal to second."},"functionSelector":"8466f415","implemented":false,"kind":"function","modifiers":[],"name":"assertLe","nameLocation":"65618:8:14","parameters":{"id":15044,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15041,"mutability":"mutable","name":"left","nameLocation":"65635:4:14","nodeType":"VariableDeclaration","scope":15046,"src":"65627:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15040,"name":"uint256","nodeType":"ElementaryTypeName","src":"65627:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15043,"mutability":"mutable","name":"right","nameLocation":"65649:5:14","nodeType":"VariableDeclaration","scope":15046,"src":"65641:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15042,"name":"uint256","nodeType":"ElementaryTypeName","src":"65641:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"65626:29:14"},"returnParameters":{"id":15045,"nodeType":"ParameterList","parameters":[],"src":"65669:0:14"},"scope":15864,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15056,"nodeType":"FunctionDefinition","src":"65833:84:14","nodes":[],"documentation":{"id":15047,"nodeType":"StructuredDocumentation","src":"65676:152:14","text":"Compares two `uint256` values. Expects first value to be less than or equal to second.\n Includes error message into revert string on failure."},"functionSelector":"d17d4b0d","implemented":false,"kind":"function","modifiers":[],"name":"assertLe","nameLocation":"65842:8:14","parameters":{"id":15054,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15049,"mutability":"mutable","name":"left","nameLocation":"65859:4:14","nodeType":"VariableDeclaration","scope":15056,"src":"65851:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15048,"name":"uint256","nodeType":"ElementaryTypeName","src":"65851:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15051,"mutability":"mutable","name":"right","nameLocation":"65873:5:14","nodeType":"VariableDeclaration","scope":15056,"src":"65865:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15050,"name":"uint256","nodeType":"ElementaryTypeName","src":"65865:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15053,"mutability":"mutable","name":"error","nameLocation":"65896:5:14","nodeType":"VariableDeclaration","scope":15056,"src":"65880:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15052,"name":"string","nodeType":"ElementaryTypeName","src":"65880:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"65850:52:14"},"returnParameters":{"id":15055,"nodeType":"ParameterList","parameters":[],"src":"65916:0:14"},"scope":15864,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15064,"nodeType":"FunctionDefinition","src":"66017:59:14","nodes":[],"documentation":{"id":15057,"nodeType":"StructuredDocumentation","src":"65923:89:14","text":"Compares two `int256` values. Expects first value to be less than or equal to second."},"functionSelector":"95fd154e","implemented":false,"kind":"function","modifiers":[],"name":"assertLe","nameLocation":"66026:8:14","parameters":{"id":15062,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15059,"mutability":"mutable","name":"left","nameLocation":"66042:4:14","nodeType":"VariableDeclaration","scope":15064,"src":"66035:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15058,"name":"int256","nodeType":"ElementaryTypeName","src":"66035:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":15061,"mutability":"mutable","name":"right","nameLocation":"66055:5:14","nodeType":"VariableDeclaration","scope":15064,"src":"66048:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15060,"name":"int256","nodeType":"ElementaryTypeName","src":"66048:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"66034:27:14"},"returnParameters":{"id":15063,"nodeType":"ParameterList","parameters":[],"src":"66075:0:14"},"scope":15864,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15074,"nodeType":"FunctionDefinition","src":"66238:82:14","nodes":[],"documentation":{"id":15065,"nodeType":"StructuredDocumentation","src":"66082:151:14","text":"Compares two `int256` values. Expects first value to be less than or equal to second.\n Includes error message into revert string on failure."},"functionSelector":"4dfe692c","implemented":false,"kind":"function","modifiers":[],"name":"assertLe","nameLocation":"66247:8:14","parameters":{"id":15072,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15067,"mutability":"mutable","name":"left","nameLocation":"66263:4:14","nodeType":"VariableDeclaration","scope":15074,"src":"66256:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15066,"name":"int256","nodeType":"ElementaryTypeName","src":"66256:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":15069,"mutability":"mutable","name":"right","nameLocation":"66276:5:14","nodeType":"VariableDeclaration","scope":15074,"src":"66269:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15068,"name":"int256","nodeType":"ElementaryTypeName","src":"66269:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":15071,"mutability":"mutable","name":"error","nameLocation":"66299:5:14","nodeType":"VariableDeclaration","scope":15074,"src":"66283:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15070,"name":"string","nodeType":"ElementaryTypeName","src":"66283:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"66255:50:14"},"returnParameters":{"id":15073,"nodeType":"ParameterList","parameters":[],"src":"66319:0:14"},"scope":15864,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15084,"nodeType":"FunctionDefinition","src":"66466:86:14","nodes":[],"documentation":{"id":15075,"nodeType":"StructuredDocumentation","src":"66326:135:14","text":"Compares two `uint256` values. Expects first value to be less than second.\n Formats values with decimals in failure message."},"functionSelector":"2077337e","implemented":false,"kind":"function","modifiers":[],"name":"assertLtDecimal","nameLocation":"66475:15:14","parameters":{"id":15082,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15077,"mutability":"mutable","name":"left","nameLocation":"66499:4:14","nodeType":"VariableDeclaration","scope":15084,"src":"66491:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15076,"name":"uint256","nodeType":"ElementaryTypeName","src":"66491:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15079,"mutability":"mutable","name":"right","nameLocation":"66513:5:14","nodeType":"VariableDeclaration","scope":15084,"src":"66505:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15078,"name":"uint256","nodeType":"ElementaryTypeName","src":"66505:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15081,"mutability":"mutable","name":"decimals","nameLocation":"66528:8:14","nodeType":"VariableDeclaration","scope":15084,"src":"66520:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15080,"name":"uint256","nodeType":"ElementaryTypeName","src":"66520:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"66490:47:14"},"returnParameters":{"id":15083,"nodeType":"ParameterList","parameters":[],"src":"66551:0:14"},"scope":15864,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15096,"nodeType":"FunctionDefinition","src":"66752:109:14","nodes":[],"documentation":{"id":15085,"nodeType":"StructuredDocumentation","src":"66558:189:14","text":"Compares two `uint256` values. Expects first value to be less than second.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"a972d037","implemented":false,"kind":"function","modifiers":[],"name":"assertLtDecimal","nameLocation":"66761:15:14","parameters":{"id":15094,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15087,"mutability":"mutable","name":"left","nameLocation":"66785:4:14","nodeType":"VariableDeclaration","scope":15096,"src":"66777:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15086,"name":"uint256","nodeType":"ElementaryTypeName","src":"66777:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15089,"mutability":"mutable","name":"right","nameLocation":"66799:5:14","nodeType":"VariableDeclaration","scope":15096,"src":"66791:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15088,"name":"uint256","nodeType":"ElementaryTypeName","src":"66791:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15091,"mutability":"mutable","name":"decimals","nameLocation":"66814:8:14","nodeType":"VariableDeclaration","scope":15096,"src":"66806:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15090,"name":"uint256","nodeType":"ElementaryTypeName","src":"66806:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15093,"mutability":"mutable","name":"error","nameLocation":"66840:5:14","nodeType":"VariableDeclaration","scope":15096,"src":"66824:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15092,"name":"string","nodeType":"ElementaryTypeName","src":"66824:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"66776:70:14"},"returnParameters":{"id":15095,"nodeType":"ParameterList","parameters":[],"src":"66860:0:14"},"scope":15864,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15106,"nodeType":"FunctionDefinition","src":"67006:84:14","nodes":[],"documentation":{"id":15097,"nodeType":"StructuredDocumentation","src":"66867:134:14","text":"Compares two `int256` values. Expects first value to be less than second.\n Formats values with decimals in failure message."},"functionSelector":"dbe8d88b","implemented":false,"kind":"function","modifiers":[],"name":"assertLtDecimal","nameLocation":"67015:15:14","parameters":{"id":15104,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15099,"mutability":"mutable","name":"left","nameLocation":"67038:4:14","nodeType":"VariableDeclaration","scope":15106,"src":"67031:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15098,"name":"int256","nodeType":"ElementaryTypeName","src":"67031:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":15101,"mutability":"mutable","name":"right","nameLocation":"67051:5:14","nodeType":"VariableDeclaration","scope":15106,"src":"67044:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15100,"name":"int256","nodeType":"ElementaryTypeName","src":"67044:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":15103,"mutability":"mutable","name":"decimals","nameLocation":"67066:8:14","nodeType":"VariableDeclaration","scope":15106,"src":"67058:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15102,"name":"uint256","nodeType":"ElementaryTypeName","src":"67058:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"67030:45:14"},"returnParameters":{"id":15105,"nodeType":"ParameterList","parameters":[],"src":"67089:0:14"},"scope":15864,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15118,"nodeType":"FunctionDefinition","src":"67289:107:14","nodes":[],"documentation":{"id":15107,"nodeType":"StructuredDocumentation","src":"67096:188:14","text":"Compares two `int256` values. Expects first value to be less than second.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"40f0b4e0","implemented":false,"kind":"function","modifiers":[],"name":"assertLtDecimal","nameLocation":"67298:15:14","parameters":{"id":15116,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15109,"mutability":"mutable","name":"left","nameLocation":"67321:4:14","nodeType":"VariableDeclaration","scope":15118,"src":"67314:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15108,"name":"int256","nodeType":"ElementaryTypeName","src":"67314:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":15111,"mutability":"mutable","name":"right","nameLocation":"67334:5:14","nodeType":"VariableDeclaration","scope":15118,"src":"67327:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15110,"name":"int256","nodeType":"ElementaryTypeName","src":"67327:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":15113,"mutability":"mutable","name":"decimals","nameLocation":"67349:8:14","nodeType":"VariableDeclaration","scope":15118,"src":"67341:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15112,"name":"uint256","nodeType":"ElementaryTypeName","src":"67341:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15115,"mutability":"mutable","name":"error","nameLocation":"67375:5:14","nodeType":"VariableDeclaration","scope":15118,"src":"67359:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15114,"name":"string","nodeType":"ElementaryTypeName","src":"67359:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"67313:68:14"},"returnParameters":{"id":15117,"nodeType":"ParameterList","parameters":[],"src":"67395:0:14"},"scope":15864,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15126,"nodeType":"FunctionDefinition","src":"67485:61:14","nodes":[],"documentation":{"id":15119,"nodeType":"StructuredDocumentation","src":"67402:78:14","text":"Compares two `uint256` values. Expects first value to be less than second."},"functionSelector":"b12fc005","implemented":false,"kind":"function","modifiers":[],"name":"assertLt","nameLocation":"67494:8:14","parameters":{"id":15124,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15121,"mutability":"mutable","name":"left","nameLocation":"67511:4:14","nodeType":"VariableDeclaration","scope":15126,"src":"67503:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15120,"name":"uint256","nodeType":"ElementaryTypeName","src":"67503:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15123,"mutability":"mutable","name":"right","nameLocation":"67525:5:14","nodeType":"VariableDeclaration","scope":15126,"src":"67517:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15122,"name":"uint256","nodeType":"ElementaryTypeName","src":"67517:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"67502:29:14"},"returnParameters":{"id":15125,"nodeType":"ParameterList","parameters":[],"src":"67545:0:14"},"scope":15864,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15136,"nodeType":"FunctionDefinition","src":"67697:84:14","nodes":[],"documentation":{"id":15127,"nodeType":"StructuredDocumentation","src":"67552:140:14","text":"Compares two `uint256` values. Expects first value to be less than second.\n Includes error message into revert string on failure."},"functionSelector":"65d5c135","implemented":false,"kind":"function","modifiers":[],"name":"assertLt","nameLocation":"67706:8:14","parameters":{"id":15134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15129,"mutability":"mutable","name":"left","nameLocation":"67723:4:14","nodeType":"VariableDeclaration","scope":15136,"src":"67715:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15128,"name":"uint256","nodeType":"ElementaryTypeName","src":"67715:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15131,"mutability":"mutable","name":"right","nameLocation":"67737:5:14","nodeType":"VariableDeclaration","scope":15136,"src":"67729:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15130,"name":"uint256","nodeType":"ElementaryTypeName","src":"67729:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15133,"mutability":"mutable","name":"error","nameLocation":"67760:5:14","nodeType":"VariableDeclaration","scope":15136,"src":"67744:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15132,"name":"string","nodeType":"ElementaryTypeName","src":"67744:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"67714:52:14"},"returnParameters":{"id":15135,"nodeType":"ParameterList","parameters":[],"src":"67780:0:14"},"scope":15864,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15144,"nodeType":"FunctionDefinition","src":"67869:59:14","nodes":[],"documentation":{"id":15137,"nodeType":"StructuredDocumentation","src":"67787:77:14","text":"Compares two `int256` values. Expects first value to be less than second."},"functionSelector":"3e914080","implemented":false,"kind":"function","modifiers":[],"name":"assertLt","nameLocation":"67878:8:14","parameters":{"id":15142,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15139,"mutability":"mutable","name":"left","nameLocation":"67894:4:14","nodeType":"VariableDeclaration","scope":15144,"src":"67887:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15138,"name":"int256","nodeType":"ElementaryTypeName","src":"67887:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":15141,"mutability":"mutable","name":"right","nameLocation":"67907:5:14","nodeType":"VariableDeclaration","scope":15144,"src":"67900:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15140,"name":"int256","nodeType":"ElementaryTypeName","src":"67900:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"67886:27:14"},"returnParameters":{"id":15143,"nodeType":"ParameterList","parameters":[],"src":"67927:0:14"},"scope":15864,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15154,"nodeType":"FunctionDefinition","src":"68078:82:14","nodes":[],"documentation":{"id":15145,"nodeType":"StructuredDocumentation","src":"67934:139:14","text":"Compares two `int256` values. Expects first value to be less than second.\n Includes error message into revert string on failure."},"functionSelector":"9ff531e3","implemented":false,"kind":"function","modifiers":[],"name":"assertLt","nameLocation":"68087:8:14","parameters":{"id":15152,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15147,"mutability":"mutable","name":"left","nameLocation":"68103:4:14","nodeType":"VariableDeclaration","scope":15154,"src":"68096:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15146,"name":"int256","nodeType":"ElementaryTypeName","src":"68096:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":15149,"mutability":"mutable","name":"right","nameLocation":"68116:5:14","nodeType":"VariableDeclaration","scope":15154,"src":"68109:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15148,"name":"int256","nodeType":"ElementaryTypeName","src":"68109:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":15151,"mutability":"mutable","name":"error","nameLocation":"68139:5:14","nodeType":"VariableDeclaration","scope":15154,"src":"68123:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15150,"name":"string","nodeType":"ElementaryTypeName","src":"68123:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"68095:50:14"},"returnParameters":{"id":15153,"nodeType":"ParameterList","parameters":[],"src":"68159:0:14"},"scope":15864,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15164,"nodeType":"FunctionDefinition","src":"68273:89:14","nodes":[],"documentation":{"id":15155,"nodeType":"StructuredDocumentation","src":"68166:102:14","text":"Asserts that two `uint256` values are not equal, formatting them with decimals in failure message."},"functionSelector":"669efca7","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEqDecimal","nameLocation":"68282:18:14","parameters":{"id":15162,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15157,"mutability":"mutable","name":"left","nameLocation":"68309:4:14","nodeType":"VariableDeclaration","scope":15164,"src":"68301:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15156,"name":"uint256","nodeType":"ElementaryTypeName","src":"68301:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15159,"mutability":"mutable","name":"right","nameLocation":"68323:5:14","nodeType":"VariableDeclaration","scope":15164,"src":"68315:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15158,"name":"uint256","nodeType":"ElementaryTypeName","src":"68315:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15161,"mutability":"mutable","name":"decimals","nameLocation":"68338:8:14","nodeType":"VariableDeclaration","scope":15164,"src":"68330:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15160,"name":"uint256","nodeType":"ElementaryTypeName","src":"68330:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"68300:47:14"},"returnParameters":{"id":15163,"nodeType":"ParameterList","parameters":[],"src":"68361:0:14"},"scope":15864,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15176,"nodeType":"FunctionDefinition","src":"68537:112:14","nodes":[],"documentation":{"id":15165,"nodeType":"StructuredDocumentation","src":"68368:164:14","text":"Asserts that two `uint256` values are not equal, formatting them with decimals in failure message.\n Includes error message into revert string on failure."},"functionSelector":"f5a55558","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEqDecimal","nameLocation":"68546:18:14","parameters":{"id":15174,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15167,"mutability":"mutable","name":"left","nameLocation":"68573:4:14","nodeType":"VariableDeclaration","scope":15176,"src":"68565:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15166,"name":"uint256","nodeType":"ElementaryTypeName","src":"68565:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15169,"mutability":"mutable","name":"right","nameLocation":"68587:5:14","nodeType":"VariableDeclaration","scope":15176,"src":"68579:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15168,"name":"uint256","nodeType":"ElementaryTypeName","src":"68579:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15171,"mutability":"mutable","name":"decimals","nameLocation":"68602:8:14","nodeType":"VariableDeclaration","scope":15176,"src":"68594:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15170,"name":"uint256","nodeType":"ElementaryTypeName","src":"68594:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15173,"mutability":"mutable","name":"error","nameLocation":"68628:5:14","nodeType":"VariableDeclaration","scope":15176,"src":"68612:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15172,"name":"string","nodeType":"ElementaryTypeName","src":"68612:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"68564:70:14"},"returnParameters":{"id":15175,"nodeType":"ParameterList","parameters":[],"src":"68648:0:14"},"scope":15864,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15186,"nodeType":"FunctionDefinition","src":"68761:87:14","nodes":[],"documentation":{"id":15177,"nodeType":"StructuredDocumentation","src":"68655:101:14","text":"Asserts that two `int256` values are not equal, formatting them with decimals in failure message."},"functionSelector":"14e75680","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEqDecimal","nameLocation":"68770:18:14","parameters":{"id":15184,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15179,"mutability":"mutable","name":"left","nameLocation":"68796:4:14","nodeType":"VariableDeclaration","scope":15186,"src":"68789:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15178,"name":"int256","nodeType":"ElementaryTypeName","src":"68789:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":15181,"mutability":"mutable","name":"right","nameLocation":"68809:5:14","nodeType":"VariableDeclaration","scope":15186,"src":"68802:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15180,"name":"int256","nodeType":"ElementaryTypeName","src":"68802:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":15183,"mutability":"mutable","name":"decimals","nameLocation":"68824:8:14","nodeType":"VariableDeclaration","scope":15186,"src":"68816:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15182,"name":"uint256","nodeType":"ElementaryTypeName","src":"68816:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"68788:45:14"},"returnParameters":{"id":15185,"nodeType":"ParameterList","parameters":[],"src":"68847:0:14"},"scope":15864,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15198,"nodeType":"FunctionDefinition","src":"69022:110:14","nodes":[],"documentation":{"id":15187,"nodeType":"StructuredDocumentation","src":"68854:163:14","text":"Asserts that two `int256` values are not equal, formatting them with decimals in failure message.\n Includes error message into revert string on failure."},"functionSelector":"33949f0b","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEqDecimal","nameLocation":"69031:18:14","parameters":{"id":15196,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15189,"mutability":"mutable","name":"left","nameLocation":"69057:4:14","nodeType":"VariableDeclaration","scope":15198,"src":"69050:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15188,"name":"int256","nodeType":"ElementaryTypeName","src":"69050:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":15191,"mutability":"mutable","name":"right","nameLocation":"69070:5:14","nodeType":"VariableDeclaration","scope":15198,"src":"69063:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15190,"name":"int256","nodeType":"ElementaryTypeName","src":"69063:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":15193,"mutability":"mutable","name":"decimals","nameLocation":"69085:8:14","nodeType":"VariableDeclaration","scope":15198,"src":"69077:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15192,"name":"uint256","nodeType":"ElementaryTypeName","src":"69077:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15195,"mutability":"mutable","name":"error","nameLocation":"69111:5:14","nodeType":"VariableDeclaration","scope":15198,"src":"69095:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15194,"name":"string","nodeType":"ElementaryTypeName","src":"69095:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"69049:68:14"},"returnParameters":{"id":15197,"nodeType":"ParameterList","parameters":[],"src":"69131:0:14"},"scope":15864,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15206,"nodeType":"FunctionDefinition","src":"69192:58:14","nodes":[],"documentation":{"id":15199,"nodeType":"StructuredDocumentation","src":"69138:49:14","text":"Asserts that two `bool` values are not equal."},"functionSelector":"236e4d66","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"69201:11:14","parameters":{"id":15204,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15201,"mutability":"mutable","name":"left","nameLocation":"69218:4:14","nodeType":"VariableDeclaration","scope":15206,"src":"69213:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":15200,"name":"bool","nodeType":"ElementaryTypeName","src":"69213:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":15203,"mutability":"mutable","name":"right","nameLocation":"69229:5:14","nodeType":"VariableDeclaration","scope":15206,"src":"69224:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":15202,"name":"bool","nodeType":"ElementaryTypeName","src":"69224:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"69212:23:14"},"returnParameters":{"id":15205,"nodeType":"ParameterList","parameters":[],"src":"69249:0:14"},"scope":15864,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15216,"nodeType":"FunctionDefinition","src":"69367:81:14","nodes":[],"documentation":{"id":15207,"nodeType":"StructuredDocumentation","src":"69256:106:14","text":"Asserts that two `bool` values are not equal and includes error message into revert string on failure."},"functionSelector":"1091a261","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"69376:11:14","parameters":{"id":15214,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15209,"mutability":"mutable","name":"left","nameLocation":"69393:4:14","nodeType":"VariableDeclaration","scope":15216,"src":"69388:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":15208,"name":"bool","nodeType":"ElementaryTypeName","src":"69388:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":15211,"mutability":"mutable","name":"right","nameLocation":"69404:5:14","nodeType":"VariableDeclaration","scope":15216,"src":"69399:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":15210,"name":"bool","nodeType":"ElementaryTypeName","src":"69399:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":15213,"mutability":"mutable","name":"error","nameLocation":"69427:5:14","nodeType":"VariableDeclaration","scope":15216,"src":"69411:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15212,"name":"string","nodeType":"ElementaryTypeName","src":"69411:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"69387:46:14"},"returnParameters":{"id":15215,"nodeType":"ParameterList","parameters":[],"src":"69447:0:14"},"scope":15864,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15224,"nodeType":"FunctionDefinition","src":"69510:80:14","nodes":[],"documentation":{"id":15217,"nodeType":"StructuredDocumentation","src":"69454:51:14","text":"Asserts that two `string` values are not equal."},"functionSelector":"6a8237b3","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"69519:11:14","parameters":{"id":15222,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15219,"mutability":"mutable","name":"left","nameLocation":"69547:4:14","nodeType":"VariableDeclaration","scope":15224,"src":"69531:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15218,"name":"string","nodeType":"ElementaryTypeName","src":"69531:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15221,"mutability":"mutable","name":"right","nameLocation":"69569:5:14","nodeType":"VariableDeclaration","scope":15224,"src":"69553:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15220,"name":"string","nodeType":"ElementaryTypeName","src":"69553:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"69530:45:14"},"returnParameters":{"id":15223,"nodeType":"ParameterList","parameters":[],"src":"69589:0:14"},"scope":15864,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15234,"nodeType":"FunctionDefinition","src":"69709:103:14","nodes":[],"documentation":{"id":15225,"nodeType":"StructuredDocumentation","src":"69596:108:14","text":"Asserts that two `string` values are not equal and includes error message into revert string on failure."},"functionSelector":"78bdcea7","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"69718:11:14","parameters":{"id":15232,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15227,"mutability":"mutable","name":"left","nameLocation":"69746:4:14","nodeType":"VariableDeclaration","scope":15234,"src":"69730:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15226,"name":"string","nodeType":"ElementaryTypeName","src":"69730:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15229,"mutability":"mutable","name":"right","nameLocation":"69768:5:14","nodeType":"VariableDeclaration","scope":15234,"src":"69752:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15228,"name":"string","nodeType":"ElementaryTypeName","src":"69752:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15231,"mutability":"mutable","name":"error","nameLocation":"69791:5:14","nodeType":"VariableDeclaration","scope":15234,"src":"69775:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15230,"name":"string","nodeType":"ElementaryTypeName","src":"69775:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"69729:68:14"},"returnParameters":{"id":15233,"nodeType":"ParameterList","parameters":[],"src":"69811:0:14"},"scope":15864,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15242,"nodeType":"FunctionDefinition","src":"69873:78:14","nodes":[],"documentation":{"id":15235,"nodeType":"StructuredDocumentation","src":"69818:50:14","text":"Asserts that two `bytes` values are not equal."},"functionSelector":"3cf78e28","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"69882:11:14","parameters":{"id":15240,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15237,"mutability":"mutable","name":"left","nameLocation":"69909:4:14","nodeType":"VariableDeclaration","scope":15242,"src":"69894:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":15236,"name":"bytes","nodeType":"ElementaryTypeName","src":"69894:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":15239,"mutability":"mutable","name":"right","nameLocation":"69930:5:14","nodeType":"VariableDeclaration","scope":15242,"src":"69915:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":15238,"name":"bytes","nodeType":"ElementaryTypeName","src":"69915:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"69893:43:14"},"returnParameters":{"id":15241,"nodeType":"ParameterList","parameters":[],"src":"69950:0:14"},"scope":15864,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15252,"nodeType":"FunctionDefinition","src":"70069:101:14","nodes":[],"documentation":{"id":15243,"nodeType":"StructuredDocumentation","src":"69957:107:14","text":"Asserts that two `bytes` values are not equal and includes error message into revert string on failure."},"functionSelector":"9507540e","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"70078:11:14","parameters":{"id":15250,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15245,"mutability":"mutable","name":"left","nameLocation":"70105:4:14","nodeType":"VariableDeclaration","scope":15252,"src":"70090:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":15244,"name":"bytes","nodeType":"ElementaryTypeName","src":"70090:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":15247,"mutability":"mutable","name":"right","nameLocation":"70126:5:14","nodeType":"VariableDeclaration","scope":15252,"src":"70111:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":15246,"name":"bytes","nodeType":"ElementaryTypeName","src":"70111:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":15249,"mutability":"mutable","name":"error","nameLocation":"70149:5:14","nodeType":"VariableDeclaration","scope":15252,"src":"70133:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15248,"name":"string","nodeType":"ElementaryTypeName","src":"70133:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"70089:66:14"},"returnParameters":{"id":15251,"nodeType":"ParameterList","parameters":[],"src":"70169:0:14"},"scope":15864,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15262,"nodeType":"FunctionDefinition","src":"70240:80:14","nodes":[],"documentation":{"id":15253,"nodeType":"StructuredDocumentation","src":"70176:59:14","text":"Asserts that two arrays of `bool` values are not equal."},"functionSelector":"286fafea","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"70249:11:14","parameters":{"id":15260,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15256,"mutability":"mutable","name":"left","nameLocation":"70277:4:14","nodeType":"VariableDeclaration","scope":15262,"src":"70261:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":15254,"name":"bool","nodeType":"ElementaryTypeName","src":"70261:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":15255,"nodeType":"ArrayTypeName","src":"70261:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":15259,"mutability":"mutable","name":"right","nameLocation":"70299:5:14","nodeType":"VariableDeclaration","scope":15262,"src":"70283:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":15257,"name":"bool","nodeType":"ElementaryTypeName","src":"70283:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":15258,"nodeType":"ArrayTypeName","src":"70283:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"src":"70260:45:14"},"returnParameters":{"id":15261,"nodeType":"ParameterList","parameters":[],"src":"70319:0:14"},"scope":15864,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15274,"nodeType":"FunctionDefinition","src":"70447:103:14","nodes":[],"documentation":{"id":15263,"nodeType":"StructuredDocumentation","src":"70326:116:14","text":"Asserts that two arrays of `bool` values are not equal and includes error message into revert string on failure."},"functionSelector":"62c6f9fb","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"70456:11:14","parameters":{"id":15272,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15266,"mutability":"mutable","name":"left","nameLocation":"70484:4:14","nodeType":"VariableDeclaration","scope":15274,"src":"70468:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":15264,"name":"bool","nodeType":"ElementaryTypeName","src":"70468:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":15265,"nodeType":"ArrayTypeName","src":"70468:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":15269,"mutability":"mutable","name":"right","nameLocation":"70506:5:14","nodeType":"VariableDeclaration","scope":15274,"src":"70490:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":15267,"name":"bool","nodeType":"ElementaryTypeName","src":"70490:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":15268,"nodeType":"ArrayTypeName","src":"70490:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":15271,"mutability":"mutable","name":"error","nameLocation":"70529:5:14","nodeType":"VariableDeclaration","scope":15274,"src":"70513:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15270,"name":"string","nodeType":"ElementaryTypeName","src":"70513:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"70467:68:14"},"returnParameters":{"id":15273,"nodeType":"ParameterList","parameters":[],"src":"70549:0:14"},"scope":15864,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15284,"nodeType":"FunctionDefinition","src":"70623:86:14","nodes":[],"documentation":{"id":15275,"nodeType":"StructuredDocumentation","src":"70556:62:14","text":"Asserts that two arrays of `uint256` values are not equal."},"functionSelector":"56f29cba","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"70632:11:14","parameters":{"id":15282,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15278,"mutability":"mutable","name":"left","nameLocation":"70663:4:14","nodeType":"VariableDeclaration","scope":15284,"src":"70644:23:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":15276,"name":"uint256","nodeType":"ElementaryTypeName","src":"70644:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":15277,"nodeType":"ArrayTypeName","src":"70644:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":15281,"mutability":"mutable","name":"right","nameLocation":"70688:5:14","nodeType":"VariableDeclaration","scope":15284,"src":"70669:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":15279,"name":"uint256","nodeType":"ElementaryTypeName","src":"70669:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":15280,"nodeType":"ArrayTypeName","src":"70669:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"70643:51:14"},"returnParameters":{"id":15283,"nodeType":"ParameterList","parameters":[],"src":"70708:0:14"},"scope":15864,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15296,"nodeType":"FunctionDefinition","src":"70839:109:14","nodes":[],"documentation":{"id":15285,"nodeType":"StructuredDocumentation","src":"70715:119:14","text":"Asserts that two arrays of `uint256` values are not equal and includes error message into revert string on failure."},"functionSelector":"9a7fbd8f","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"70848:11:14","parameters":{"id":15294,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15288,"mutability":"mutable","name":"left","nameLocation":"70879:4:14","nodeType":"VariableDeclaration","scope":15296,"src":"70860:23:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":15286,"name":"uint256","nodeType":"ElementaryTypeName","src":"70860:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":15287,"nodeType":"ArrayTypeName","src":"70860:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":15291,"mutability":"mutable","name":"right","nameLocation":"70904:5:14","nodeType":"VariableDeclaration","scope":15296,"src":"70885:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":15289,"name":"uint256","nodeType":"ElementaryTypeName","src":"70885:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":15290,"nodeType":"ArrayTypeName","src":"70885:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":15293,"mutability":"mutable","name":"error","nameLocation":"70927:5:14","nodeType":"VariableDeclaration","scope":15296,"src":"70911:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15292,"name":"string","nodeType":"ElementaryTypeName","src":"70911:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"70859:74:14"},"returnParameters":{"id":15295,"nodeType":"ParameterList","parameters":[],"src":"70947:0:14"},"scope":15864,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15306,"nodeType":"FunctionDefinition","src":"71020:84:14","nodes":[],"documentation":{"id":15297,"nodeType":"StructuredDocumentation","src":"70954:61:14","text":"Asserts that two arrays of `int256` values are not equal."},"functionSelector":"0b72f4ef","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"71029:11:14","parameters":{"id":15304,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15300,"mutability":"mutable","name":"left","nameLocation":"71059:4:14","nodeType":"VariableDeclaration","scope":15306,"src":"71041:22:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":15298,"name":"int256","nodeType":"ElementaryTypeName","src":"71041:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":15299,"nodeType":"ArrayTypeName","src":"71041:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"},{"constant":false,"id":15303,"mutability":"mutable","name":"right","nameLocation":"71083:5:14","nodeType":"VariableDeclaration","scope":15306,"src":"71065:23:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":15301,"name":"int256","nodeType":"ElementaryTypeName","src":"71065:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":15302,"nodeType":"ArrayTypeName","src":"71065:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"}],"src":"71040:49:14"},"returnParameters":{"id":15305,"nodeType":"ParameterList","parameters":[],"src":"71103:0:14"},"scope":15864,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15318,"nodeType":"FunctionDefinition","src":"71233:107:14","nodes":[],"documentation":{"id":15307,"nodeType":"StructuredDocumentation","src":"71110:118:14","text":"Asserts that two arrays of `int256` values are not equal and includes error message into revert string on failure."},"functionSelector":"d3977322","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"71242:11:14","parameters":{"id":15316,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15310,"mutability":"mutable","name":"left","nameLocation":"71272:4:14","nodeType":"VariableDeclaration","scope":15318,"src":"71254:22:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":15308,"name":"int256","nodeType":"ElementaryTypeName","src":"71254:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":15309,"nodeType":"ArrayTypeName","src":"71254:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"},{"constant":false,"id":15313,"mutability":"mutable","name":"right","nameLocation":"71296:5:14","nodeType":"VariableDeclaration","scope":15318,"src":"71278:23:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":15311,"name":"int256","nodeType":"ElementaryTypeName","src":"71278:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":15312,"nodeType":"ArrayTypeName","src":"71278:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"},{"constant":false,"id":15315,"mutability":"mutable","name":"error","nameLocation":"71319:5:14","nodeType":"VariableDeclaration","scope":15318,"src":"71303:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15314,"name":"string","nodeType":"ElementaryTypeName","src":"71303:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"71253:72:14"},"returnParameters":{"id":15317,"nodeType":"ParameterList","parameters":[],"src":"71339:0:14"},"scope":15864,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15326,"nodeType":"FunctionDefinition","src":"71403:64:14","nodes":[],"documentation":{"id":15319,"nodeType":"StructuredDocumentation","src":"71346:52:14","text":"Asserts that two `uint256` values are not equal."},"functionSelector":"b7909320","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"71412:11:14","parameters":{"id":15324,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15321,"mutability":"mutable","name":"left","nameLocation":"71432:4:14","nodeType":"VariableDeclaration","scope":15326,"src":"71424:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15320,"name":"uint256","nodeType":"ElementaryTypeName","src":"71424:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15323,"mutability":"mutable","name":"right","nameLocation":"71446:5:14","nodeType":"VariableDeclaration","scope":15326,"src":"71438:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15322,"name":"uint256","nodeType":"ElementaryTypeName","src":"71438:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"71423:29:14"},"returnParameters":{"id":15325,"nodeType":"ParameterList","parameters":[],"src":"71466:0:14"},"scope":15864,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15336,"nodeType":"FunctionDefinition","src":"71540:86:14","nodes":[],"documentation":{"id":15327,"nodeType":"StructuredDocumentation","src":"71473:62:14","text":"Asserts that two arrays of `address` values are not equal."},"functionSelector":"46d0b252","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"71549:11:14","parameters":{"id":15334,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15330,"mutability":"mutable","name":"left","nameLocation":"71580:4:14","nodeType":"VariableDeclaration","scope":15336,"src":"71561:23:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":15328,"name":"address","nodeType":"ElementaryTypeName","src":"71561:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":15329,"nodeType":"ArrayTypeName","src":"71561:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":15333,"mutability":"mutable","name":"right","nameLocation":"71605:5:14","nodeType":"VariableDeclaration","scope":15336,"src":"71586:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":15331,"name":"address","nodeType":"ElementaryTypeName","src":"71586:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":15332,"nodeType":"ArrayTypeName","src":"71586:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"71560:51:14"},"returnParameters":{"id":15335,"nodeType":"ParameterList","parameters":[],"src":"71625:0:14"},"scope":15864,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15348,"nodeType":"FunctionDefinition","src":"71756:109:14","nodes":[],"documentation":{"id":15337,"nodeType":"StructuredDocumentation","src":"71632:119:14","text":"Asserts that two arrays of `address` values are not equal and includes error message into revert string on failure."},"functionSelector":"72c7e0b5","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"71765:11:14","parameters":{"id":15346,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15340,"mutability":"mutable","name":"left","nameLocation":"71796:4:14","nodeType":"VariableDeclaration","scope":15348,"src":"71777:23:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":15338,"name":"address","nodeType":"ElementaryTypeName","src":"71777:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":15339,"nodeType":"ArrayTypeName","src":"71777:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":15343,"mutability":"mutable","name":"right","nameLocation":"71821:5:14","nodeType":"VariableDeclaration","scope":15348,"src":"71802:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":15341,"name":"address","nodeType":"ElementaryTypeName","src":"71802:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":15342,"nodeType":"ArrayTypeName","src":"71802:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":15345,"mutability":"mutable","name":"error","nameLocation":"71844:5:14","nodeType":"VariableDeclaration","scope":15348,"src":"71828:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15344,"name":"string","nodeType":"ElementaryTypeName","src":"71828:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"71776:74:14"},"returnParameters":{"id":15347,"nodeType":"ParameterList","parameters":[],"src":"71864:0:14"},"scope":15864,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15358,"nodeType":"FunctionDefinition","src":"71938:86:14","nodes":[],"documentation":{"id":15349,"nodeType":"StructuredDocumentation","src":"71871:62:14","text":"Asserts that two arrays of `bytes32` values are not equal."},"functionSelector":"0603ea68","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"71947:11:14","parameters":{"id":15356,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15352,"mutability":"mutable","name":"left","nameLocation":"71978:4:14","nodeType":"VariableDeclaration","scope":15358,"src":"71959:23:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":15350,"name":"bytes32","nodeType":"ElementaryTypeName","src":"71959:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":15351,"nodeType":"ArrayTypeName","src":"71959:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":15355,"mutability":"mutable","name":"right","nameLocation":"72003:5:14","nodeType":"VariableDeclaration","scope":15358,"src":"71984:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":15353,"name":"bytes32","nodeType":"ElementaryTypeName","src":"71984:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":15354,"nodeType":"ArrayTypeName","src":"71984:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"71958:51:14"},"returnParameters":{"id":15357,"nodeType":"ParameterList","parameters":[],"src":"72023:0:14"},"scope":15864,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15370,"nodeType":"FunctionDefinition","src":"72154:109:14","nodes":[],"documentation":{"id":15359,"nodeType":"StructuredDocumentation","src":"72030:119:14","text":"Asserts that two arrays of `bytes32` values are not equal and includes error message into revert string on failure."},"functionSelector":"b873634c","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"72163:11:14","parameters":{"id":15368,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15362,"mutability":"mutable","name":"left","nameLocation":"72194:4:14","nodeType":"VariableDeclaration","scope":15370,"src":"72175:23:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":15360,"name":"bytes32","nodeType":"ElementaryTypeName","src":"72175:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":15361,"nodeType":"ArrayTypeName","src":"72175:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":15365,"mutability":"mutable","name":"right","nameLocation":"72219:5:14","nodeType":"VariableDeclaration","scope":15370,"src":"72200:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":15363,"name":"bytes32","nodeType":"ElementaryTypeName","src":"72200:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":15364,"nodeType":"ArrayTypeName","src":"72200:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":15367,"mutability":"mutable","name":"error","nameLocation":"72242:5:14","nodeType":"VariableDeclaration","scope":15370,"src":"72226:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15366,"name":"string","nodeType":"ElementaryTypeName","src":"72226:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"72174:74:14"},"returnParameters":{"id":15369,"nodeType":"ParameterList","parameters":[],"src":"72262:0:14"},"scope":15864,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15380,"nodeType":"FunctionDefinition","src":"72335:84:14","nodes":[],"documentation":{"id":15371,"nodeType":"StructuredDocumentation","src":"72269:61:14","text":"Asserts that two arrays of `string` values are not equal."},"functionSelector":"bdfacbe8","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"72344:11:14","parameters":{"id":15378,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15374,"mutability":"mutable","name":"left","nameLocation":"72374:4:14","nodeType":"VariableDeclaration","scope":15380,"src":"72356:22:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":15372,"name":"string","nodeType":"ElementaryTypeName","src":"72356:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":15373,"nodeType":"ArrayTypeName","src":"72356:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":15377,"mutability":"mutable","name":"right","nameLocation":"72398:5:14","nodeType":"VariableDeclaration","scope":15380,"src":"72380:23:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":15375,"name":"string","nodeType":"ElementaryTypeName","src":"72380:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":15376,"nodeType":"ArrayTypeName","src":"72380:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"72355:49:14"},"returnParameters":{"id":15379,"nodeType":"ParameterList","parameters":[],"src":"72418:0:14"},"scope":15864,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15392,"nodeType":"FunctionDefinition","src":"72548:107:14","nodes":[],"documentation":{"id":15381,"nodeType":"StructuredDocumentation","src":"72425:118:14","text":"Asserts that two arrays of `string` values are not equal and includes error message into revert string on failure."},"functionSelector":"b67187f3","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"72557:11:14","parameters":{"id":15390,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15384,"mutability":"mutable","name":"left","nameLocation":"72587:4:14","nodeType":"VariableDeclaration","scope":15392,"src":"72569:22:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":15382,"name":"string","nodeType":"ElementaryTypeName","src":"72569:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":15383,"nodeType":"ArrayTypeName","src":"72569:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":15387,"mutability":"mutable","name":"right","nameLocation":"72611:5:14","nodeType":"VariableDeclaration","scope":15392,"src":"72593:23:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":15385,"name":"string","nodeType":"ElementaryTypeName","src":"72593:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":15386,"nodeType":"ArrayTypeName","src":"72593:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":15389,"mutability":"mutable","name":"error","nameLocation":"72634:5:14","nodeType":"VariableDeclaration","scope":15392,"src":"72618:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15388,"name":"string","nodeType":"ElementaryTypeName","src":"72618:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"72568:72:14"},"returnParameters":{"id":15391,"nodeType":"ParameterList","parameters":[],"src":"72654:0:14"},"scope":15864,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15402,"nodeType":"FunctionDefinition","src":"72726:82:14","nodes":[],"documentation":{"id":15393,"nodeType":"StructuredDocumentation","src":"72661:60:14","text":"Asserts that two arrays of `bytes` values are not equal."},"functionSelector":"edecd035","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"72735:11:14","parameters":{"id":15400,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15396,"mutability":"mutable","name":"left","nameLocation":"72764:4:14","nodeType":"VariableDeclaration","scope":15402,"src":"72747:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":15394,"name":"bytes","nodeType":"ElementaryTypeName","src":"72747:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":15395,"nodeType":"ArrayTypeName","src":"72747:7:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":15399,"mutability":"mutable","name":"right","nameLocation":"72787:5:14","nodeType":"VariableDeclaration","scope":15402,"src":"72770:22:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":15397,"name":"bytes","nodeType":"ElementaryTypeName","src":"72770:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":15398,"nodeType":"ArrayTypeName","src":"72770:7:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"72746:47:14"},"returnParameters":{"id":15401,"nodeType":"ParameterList","parameters":[],"src":"72807:0:14"},"scope":15864,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15414,"nodeType":"FunctionDefinition","src":"72936:105:14","nodes":[],"documentation":{"id":15403,"nodeType":"StructuredDocumentation","src":"72814:117:14","text":"Asserts that two arrays of `bytes` values are not equal and includes error message into revert string on failure."},"functionSelector":"1dcd1f68","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"72945:11:14","parameters":{"id":15412,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15406,"mutability":"mutable","name":"left","nameLocation":"72974:4:14","nodeType":"VariableDeclaration","scope":15414,"src":"72957:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":15404,"name":"bytes","nodeType":"ElementaryTypeName","src":"72957:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":15405,"nodeType":"ArrayTypeName","src":"72957:7:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":15409,"mutability":"mutable","name":"right","nameLocation":"72997:5:14","nodeType":"VariableDeclaration","scope":15414,"src":"72980:22:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":15407,"name":"bytes","nodeType":"ElementaryTypeName","src":"72980:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":15408,"nodeType":"ArrayTypeName","src":"72980:7:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":15411,"mutability":"mutable","name":"error","nameLocation":"73020:5:14","nodeType":"VariableDeclaration","scope":15414,"src":"73004:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15410,"name":"string","nodeType":"ElementaryTypeName","src":"73004:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"72956:70:14"},"returnParameters":{"id":15413,"nodeType":"ParameterList","parameters":[],"src":"73040:0:14"},"scope":15864,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15424,"nodeType":"FunctionDefinition","src":"73161:87:14","nodes":[],"documentation":{"id":15415,"nodeType":"StructuredDocumentation","src":"73047:109:14","text":"Asserts that two `uint256` values are not equal and includes error message into revert string on failure."},"functionSelector":"98f9bdbd","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"73170:11:14","parameters":{"id":15422,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15417,"mutability":"mutable","name":"left","nameLocation":"73190:4:14","nodeType":"VariableDeclaration","scope":15424,"src":"73182:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15416,"name":"uint256","nodeType":"ElementaryTypeName","src":"73182:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15419,"mutability":"mutable","name":"right","nameLocation":"73204:5:14","nodeType":"VariableDeclaration","scope":15424,"src":"73196:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15418,"name":"uint256","nodeType":"ElementaryTypeName","src":"73196:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15421,"mutability":"mutable","name":"error","nameLocation":"73227:5:14","nodeType":"VariableDeclaration","scope":15424,"src":"73211:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15420,"name":"string","nodeType":"ElementaryTypeName","src":"73211:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"73181:52:14"},"returnParameters":{"id":15423,"nodeType":"ParameterList","parameters":[],"src":"73247:0:14"},"scope":15864,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15432,"nodeType":"FunctionDefinition","src":"73310:62:14","nodes":[],"documentation":{"id":15425,"nodeType":"StructuredDocumentation","src":"73254:51:14","text":"Asserts that two `int256` values are not equal."},"functionSelector":"f4c004e3","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"73319:11:14","parameters":{"id":15430,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15427,"mutability":"mutable","name":"left","nameLocation":"73338:4:14","nodeType":"VariableDeclaration","scope":15432,"src":"73331:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15426,"name":"int256","nodeType":"ElementaryTypeName","src":"73331:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":15429,"mutability":"mutable","name":"right","nameLocation":"73351:5:14","nodeType":"VariableDeclaration","scope":15432,"src":"73344:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15428,"name":"int256","nodeType":"ElementaryTypeName","src":"73344:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"73330:27:14"},"returnParameters":{"id":15431,"nodeType":"ParameterList","parameters":[],"src":"73371:0:14"},"scope":15864,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15442,"nodeType":"FunctionDefinition","src":"73491:85:14","nodes":[],"documentation":{"id":15433,"nodeType":"StructuredDocumentation","src":"73378:108:14","text":"Asserts that two `int256` values are not equal and includes error message into revert string on failure."},"functionSelector":"4724c5b9","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"73500:11:14","parameters":{"id":15440,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15435,"mutability":"mutable","name":"left","nameLocation":"73519:4:14","nodeType":"VariableDeclaration","scope":15442,"src":"73512:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15434,"name":"int256","nodeType":"ElementaryTypeName","src":"73512:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":15437,"mutability":"mutable","name":"right","nameLocation":"73532:5:14","nodeType":"VariableDeclaration","scope":15442,"src":"73525:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15436,"name":"int256","nodeType":"ElementaryTypeName","src":"73525:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":15439,"mutability":"mutable","name":"error","nameLocation":"73555:5:14","nodeType":"VariableDeclaration","scope":15442,"src":"73539:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15438,"name":"string","nodeType":"ElementaryTypeName","src":"73539:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"73511:50:14"},"returnParameters":{"id":15441,"nodeType":"ParameterList","parameters":[],"src":"73575:0:14"},"scope":15864,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15450,"nodeType":"FunctionDefinition","src":"73639:64:14","nodes":[],"documentation":{"id":15443,"nodeType":"StructuredDocumentation","src":"73582:52:14","text":"Asserts that two `address` values are not equal."},"functionSelector":"b12e1694","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"73648:11:14","parameters":{"id":15448,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15445,"mutability":"mutable","name":"left","nameLocation":"73668:4:14","nodeType":"VariableDeclaration","scope":15450,"src":"73660:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15444,"name":"address","nodeType":"ElementaryTypeName","src":"73660:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":15447,"mutability":"mutable","name":"right","nameLocation":"73682:5:14","nodeType":"VariableDeclaration","scope":15450,"src":"73674:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15446,"name":"address","nodeType":"ElementaryTypeName","src":"73674:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"73659:29:14"},"returnParameters":{"id":15449,"nodeType":"ParameterList","parameters":[],"src":"73702:0:14"},"scope":15864,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15460,"nodeType":"FunctionDefinition","src":"73823:87:14","nodes":[],"documentation":{"id":15451,"nodeType":"StructuredDocumentation","src":"73709:109:14","text":"Asserts that two `address` values are not equal and includes error message into revert string on failure."},"functionSelector":"8775a591","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"73832:11:14","parameters":{"id":15458,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15453,"mutability":"mutable","name":"left","nameLocation":"73852:4:14","nodeType":"VariableDeclaration","scope":15460,"src":"73844:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15452,"name":"address","nodeType":"ElementaryTypeName","src":"73844:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":15455,"mutability":"mutable","name":"right","nameLocation":"73866:5:14","nodeType":"VariableDeclaration","scope":15460,"src":"73858:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15454,"name":"address","nodeType":"ElementaryTypeName","src":"73858:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":15457,"mutability":"mutable","name":"error","nameLocation":"73889:5:14","nodeType":"VariableDeclaration","scope":15460,"src":"73873:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15456,"name":"string","nodeType":"ElementaryTypeName","src":"73873:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"73843:52:14"},"returnParameters":{"id":15459,"nodeType":"ParameterList","parameters":[],"src":"73909:0:14"},"scope":15864,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15468,"nodeType":"FunctionDefinition","src":"73973:64:14","nodes":[],"documentation":{"id":15461,"nodeType":"StructuredDocumentation","src":"73916:52:14","text":"Asserts that two `bytes32` values are not equal."},"functionSelector":"898e83fc","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"73982:11:14","parameters":{"id":15466,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15463,"mutability":"mutable","name":"left","nameLocation":"74002:4:14","nodeType":"VariableDeclaration","scope":15468,"src":"73994:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15462,"name":"bytes32","nodeType":"ElementaryTypeName","src":"73994:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":15465,"mutability":"mutable","name":"right","nameLocation":"74016:5:14","nodeType":"VariableDeclaration","scope":15468,"src":"74008:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15464,"name":"bytes32","nodeType":"ElementaryTypeName","src":"74008:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"73993:29:14"},"returnParameters":{"id":15467,"nodeType":"ParameterList","parameters":[],"src":"74036:0:14"},"scope":15864,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15478,"nodeType":"FunctionDefinition","src":"74157:87:14","nodes":[],"documentation":{"id":15469,"nodeType":"StructuredDocumentation","src":"74043:109:14","text":"Asserts that two `bytes32` values are not equal and includes error message into revert string on failure."},"functionSelector":"b2332f51","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"74166:11:14","parameters":{"id":15476,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15471,"mutability":"mutable","name":"left","nameLocation":"74186:4:14","nodeType":"VariableDeclaration","scope":15478,"src":"74178:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15470,"name":"bytes32","nodeType":"ElementaryTypeName","src":"74178:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":15473,"mutability":"mutable","name":"right","nameLocation":"74200:5:14","nodeType":"VariableDeclaration","scope":15478,"src":"74192:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15472,"name":"bytes32","nodeType":"ElementaryTypeName","src":"74192:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":15475,"mutability":"mutable","name":"error","nameLocation":"74223:5:14","nodeType":"VariableDeclaration","scope":15478,"src":"74207:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15474,"name":"string","nodeType":"ElementaryTypeName","src":"74207:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"74177:52:14"},"returnParameters":{"id":15477,"nodeType":"ParameterList","parameters":[],"src":"74243:0:14"},"scope":15864,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15484,"nodeType":"FunctionDefinition","src":"74300:50:14","nodes":[],"documentation":{"id":15479,"nodeType":"StructuredDocumentation","src":"74250:45:14","text":"Asserts that the given condition is true."},"functionSelector":"0c9fd581","implemented":false,"kind":"function","modifiers":[],"name":"assertTrue","nameLocation":"74309:10:14","parameters":{"id":15482,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15481,"mutability":"mutable","name":"condition","nameLocation":"74325:9:14","nodeType":"VariableDeclaration","scope":15484,"src":"74320:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":15480,"name":"bool","nodeType":"ElementaryTypeName","src":"74320:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"74319:16:14"},"returnParameters":{"id":15483,"nodeType":"ParameterList","parameters":[],"src":"74349:0:14"},"scope":15864,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15492,"nodeType":"FunctionDefinition","src":"74463:73:14","nodes":[],"documentation":{"id":15485,"nodeType":"StructuredDocumentation","src":"74356:102:14","text":"Asserts that the given condition is true and includes error message into revert string on failure."},"functionSelector":"a34edc03","implemented":false,"kind":"function","modifiers":[],"name":"assertTrue","nameLocation":"74472:10:14","parameters":{"id":15490,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15487,"mutability":"mutable","name":"condition","nameLocation":"74488:9:14","nodeType":"VariableDeclaration","scope":15492,"src":"74483:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":15486,"name":"bool","nodeType":"ElementaryTypeName","src":"74483:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":15489,"mutability":"mutable","name":"error","nameLocation":"74515:5:14","nodeType":"VariableDeclaration","scope":15492,"src":"74499:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15488,"name":"string","nodeType":"ElementaryTypeName","src":"74499:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"74482:39:14"},"returnParameters":{"id":15491,"nodeType":"ParameterList","parameters":[],"src":"74535:0:14"},"scope":15864,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15498,"nodeType":"FunctionDefinition","src":"74631:46:14","nodes":[],"documentation":{"id":15493,"nodeType":"StructuredDocumentation","src":"74542:84:14","text":"If the condition is false, discard this run's fuzz inputs and generate new ones."},"functionSelector":"4c63e562","implemented":false,"kind":"function","modifiers":[],"name":"assume","nameLocation":"74640:6:14","parameters":{"id":15496,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15495,"mutability":"mutable","name":"condition","nameLocation":"74652:9:14","nodeType":"VariableDeclaration","scope":15498,"src":"74647:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":15494,"name":"bool","nodeType":"ElementaryTypeName","src":"74647:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"74646:16:14"},"returnParameters":{"id":15497,"nodeType":"ParameterList","parameters":[],"src":"74676:0:14"},"scope":15864,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15504,"nodeType":"FunctionDefinition","src":"74739:51:14","nodes":[],"documentation":{"id":15499,"nodeType":"StructuredDocumentation","src":"74683:51:14","text":"Writes a breakpoint to jump to in the debugger."},"functionSelector":"f0259e92","implemented":false,"kind":"function","modifiers":[],"name":"breakpoint","nameLocation":"74748:10:14","parameters":{"id":15502,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15501,"mutability":"mutable","name":"char","nameLocation":"74775:4:14","nodeType":"VariableDeclaration","scope":15504,"src":"74759:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15500,"name":"string","nodeType":"ElementaryTypeName","src":"74759:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"74758:22:14"},"returnParameters":{"id":15503,"nodeType":"ParameterList","parameters":[],"src":"74789:0:14"},"scope":15864,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15512,"nodeType":"FunctionDefinition","src":"74864:63:14","nodes":[],"documentation":{"id":15505,"nodeType":"StructuredDocumentation","src":"74796:63:14","text":"Writes a conditional breakpoint to jump to in the debugger."},"functionSelector":"f7d39a8d","implemented":false,"kind":"function","modifiers":[],"name":"breakpoint","nameLocation":"74873:10:14","parameters":{"id":15510,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15507,"mutability":"mutable","name":"char","nameLocation":"74900:4:14","nodeType":"VariableDeclaration","scope":15512,"src":"74884:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15506,"name":"string","nodeType":"ElementaryTypeName","src":"74884:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15509,"mutability":"mutable","name":"value","nameLocation":"74911:5:14","nodeType":"VariableDeclaration","scope":15512,"src":"74906:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":15508,"name":"bool","nodeType":"ElementaryTypeName","src":"74906:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"74883:34:14"},"returnParameters":{"id":15511,"nodeType":"ParameterList","parameters":[],"src":"74926:0:14"},"scope":15864,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15518,"nodeType":"FunctionDefinition","src":"75332:75:14","nodes":[],"documentation":{"id":15513,"nodeType":"StructuredDocumentation","src":"74933:394:14","text":"Returns the Foundry version.\n Format: <cargo_version>+<git_sha>+<build_timestamp>\n Sample output: 0.2.0+faa94c384+202407110019\n Note: Build timestamps may vary slightly across platforms due to separate CI jobs.\n For reliable version comparisons, use YYYYMMDD0000 format (e.g., >= 202407110000)\n to compare timestamps while ignoring minor time differences."},"functionSelector":"ea991bb5","implemented":false,"kind":"function","modifiers":[],"name":"getFoundryVersion","nameLocation":"75341:17:14","parameters":{"id":15514,"nodeType":"ParameterList","parameters":[],"src":"75358:2:14"},"returnParameters":{"id":15517,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15516,"mutability":"mutable","name":"version","nameLocation":"75398:7:14","nodeType":"VariableDeclaration","scope":15518,"src":"75384:21:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":15515,"name":"string","nodeType":"ElementaryTypeName","src":"75384:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"75383:23:14"},"scope":15864,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":15526,"nodeType":"FunctionDefinition","src":"75462:85:14","nodes":[],"documentation":{"id":15519,"nodeType":"StructuredDocumentation","src":"75413:44:14","text":"Returns the RPC url for the given alias."},"functionSelector":"975a6ce9","implemented":false,"kind":"function","modifiers":[],"name":"rpcUrl","nameLocation":"75471:6:14","parameters":{"id":15522,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15521,"mutability":"mutable","name":"rpcAlias","nameLocation":"75494:8:14","nodeType":"VariableDeclaration","scope":15526,"src":"75478:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15520,"name":"string","nodeType":"ElementaryTypeName","src":"75478:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"75477:26:14"},"returnParameters":{"id":15525,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15524,"mutability":"mutable","name":"json","nameLocation":"75541:4:14","nodeType":"VariableDeclaration","scope":15526,"src":"75527:18:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":15523,"name":"string","nodeType":"ElementaryTypeName","src":"75527:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"75526:20:14"},"scope":15864,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":15534,"nodeType":"FunctionDefinition","src":"75612:67:14","nodes":[],"documentation":{"id":15527,"nodeType":"StructuredDocumentation","src":"75553:54:14","text":"Returns all rpc urls and their aliases as structs."},"functionSelector":"9d2ad72a","implemented":false,"kind":"function","modifiers":[],"name":"rpcUrlStructs","nameLocation":"75621:13:14","parameters":{"id":15528,"nodeType":"ParameterList","parameters":[],"src":"75634:2:14"},"returnParameters":{"id":15533,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15532,"mutability":"mutable","name":"urls","nameLocation":"75673:4:14","nodeType":"VariableDeclaration","scope":15534,"src":"75660:17:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Rpc_$12525_memory_ptr_$dyn_memory_ptr","typeString":"struct VmSafe.Rpc[]"},"typeName":{"baseType":{"id":15530,"nodeType":"UserDefinedTypeName","pathNode":{"id":15529,"name":"Rpc","nameLocations":["75660:3:14"],"nodeType":"IdentifierPath","referencedDeclaration":12525,"src":"75660:3:14"},"referencedDeclaration":12525,"src":"75660:3:14","typeDescriptions":{"typeIdentifier":"t_struct$_Rpc_$12525_storage_ptr","typeString":"struct VmSafe.Rpc"}},"id":15531,"nodeType":"ArrayTypeName","src":"75660:5:14","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Rpc_$12525_storage_$dyn_storage_ptr","typeString":"struct VmSafe.Rpc[]"}},"visibility":"internal"}],"src":"75659:19:14"},"scope":15864,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":15543,"nodeType":"FunctionDefinition","src":"75750:67:14","nodes":[],"documentation":{"id":15535,"nodeType":"StructuredDocumentation","src":"75685:60:14","text":"Returns all rpc urls and their aliases `[alias, url][]`."},"functionSelector":"a85a8418","implemented":false,"kind":"function","modifiers":[],"name":"rpcUrls","nameLocation":"75759:7:14","parameters":{"id":15536,"nodeType":"ParameterList","parameters":[],"src":"75766:2:14"},"returnParameters":{"id":15542,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15541,"mutability":"mutable","name":"urls","nameLocation":"75811:4:14","nodeType":"VariableDeclaration","scope":15543,"src":"75792:23:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_string_memory_ptr_$2_memory_ptr_$dyn_memory_ptr","typeString":"string[2][]"},"typeName":{"baseType":{"baseType":{"id":15537,"name":"string","nodeType":"ElementaryTypeName","src":"75792:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":15539,"length":{"hexValue":"32","id":15538,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"75799:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"ArrayTypeName","src":"75792:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$2_storage_ptr","typeString":"string[2]"}},"id":15540,"nodeType":"ArrayTypeName","src":"75792:11:14","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_string_storage_$2_storage_$dyn_storage_ptr","typeString":"string[2][]"}},"visibility":"internal"}],"src":"75791:25:14"},"scope":15864,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":15549,"nodeType":"FunctionDefinition","src":"75898:42:14","nodes":[],"documentation":{"id":15544,"nodeType":"StructuredDocumentation","src":"75823:70:14","text":"Suspends execution of the main thread for `duration` milliseconds."},"functionSelector":"fa9d8713","implemented":false,"kind":"function","modifiers":[],"name":"sleep","nameLocation":"75907:5:14","parameters":{"id":15547,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15546,"mutability":"mutable","name":"duration","nameLocation":"75921:8:14","nodeType":"VariableDeclaration","scope":15549,"src":"75913:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15545,"name":"uint256","nodeType":"ElementaryTypeName","src":"75913:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"75912:18:14"},"returnParameters":{"id":15548,"nodeType":"ParameterList","parameters":[],"src":"75939:0:14"},"scope":15864,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15559,"nodeType":"FunctionDefinition","src":"76025:95:14","nodes":[],"documentation":{"id":15550,"nodeType":"StructuredDocumentation","src":"75977:43:14","text":"Checks if `key` exists in a TOML table."},"functionSelector":"600903ad","implemented":false,"kind":"function","modifiers":[],"name":"keyExistsToml","nameLocation":"76034:13:14","parameters":{"id":15555,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15552,"mutability":"mutable","name":"toml","nameLocation":"76064:4:14","nodeType":"VariableDeclaration","scope":15559,"src":"76048:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15551,"name":"string","nodeType":"ElementaryTypeName","src":"76048:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15554,"mutability":"mutable","name":"key","nameLocation":"76086:3:14","nodeType":"VariableDeclaration","scope":15559,"src":"76070:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15553,"name":"string","nodeType":"ElementaryTypeName","src":"76070:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"76047:43:14"},"returnParameters":{"id":15558,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15557,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":15559,"src":"76114:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":15556,"name":"bool","nodeType":"ElementaryTypeName","src":"76114:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"76113:6:14"},"scope":15864,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":15569,"nodeType":"FunctionDefinition","src":"76201:101:14","nodes":[],"documentation":{"id":15560,"nodeType":"StructuredDocumentation","src":"76126:70:14","text":"Parses a string of TOML data at `key` and coerces it to `address`."},"functionSelector":"65e7c844","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlAddress","nameLocation":"76210:16:14","parameters":{"id":15565,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15562,"mutability":"mutable","name":"toml","nameLocation":"76243:4:14","nodeType":"VariableDeclaration","scope":15569,"src":"76227:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15561,"name":"string","nodeType":"ElementaryTypeName","src":"76227:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15564,"mutability":"mutable","name":"key","nameLocation":"76265:3:14","nodeType":"VariableDeclaration","scope":15569,"src":"76249:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15563,"name":"string","nodeType":"ElementaryTypeName","src":"76249:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"76226:43:14"},"returnParameters":{"id":15568,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15567,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":15569,"src":"76293:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15566,"name":"address","nodeType":"ElementaryTypeName","src":"76293:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"76292:9:14"},"scope":15864,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15580,"nodeType":"FunctionDefinition","src":"76385:139:14","nodes":[],"documentation":{"id":15570,"nodeType":"StructuredDocumentation","src":"76308:72:14","text":"Parses a string of TOML data at `key` and coerces it to `address[]`."},"functionSelector":"65c428e7","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlAddressArray","nameLocation":"76394:21:14","parameters":{"id":15575,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15572,"mutability":"mutable","name":"toml","nameLocation":"76432:4:14","nodeType":"VariableDeclaration","scope":15580,"src":"76416:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15571,"name":"string","nodeType":"ElementaryTypeName","src":"76416:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15574,"mutability":"mutable","name":"key","nameLocation":"76454:3:14","nodeType":"VariableDeclaration","scope":15580,"src":"76438:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15573,"name":"string","nodeType":"ElementaryTypeName","src":"76438:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"76415:43:14"},"returnParameters":{"id":15579,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15578,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":15580,"src":"76506:16:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":15576,"name":"address","nodeType":"ElementaryTypeName","src":"76506:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":15577,"nodeType":"ArrayTypeName","src":"76506:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"76505:18:14"},"scope":15864,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15590,"nodeType":"FunctionDefinition","src":"76602:95:14","nodes":[],"documentation":{"id":15581,"nodeType":"StructuredDocumentation","src":"76530:67:14","text":"Parses a string of TOML data at `key` and coerces it to `bool`."},"functionSelector":"d30dced6","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlBool","nameLocation":"76611:13:14","parameters":{"id":15586,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15583,"mutability":"mutable","name":"toml","nameLocation":"76641:4:14","nodeType":"VariableDeclaration","scope":15590,"src":"76625:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15582,"name":"string","nodeType":"ElementaryTypeName","src":"76625:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15585,"mutability":"mutable","name":"key","nameLocation":"76663:3:14","nodeType":"VariableDeclaration","scope":15590,"src":"76647:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15584,"name":"string","nodeType":"ElementaryTypeName","src":"76647:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"76624:43:14"},"returnParameters":{"id":15589,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15588,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":15590,"src":"76691:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":15587,"name":"bool","nodeType":"ElementaryTypeName","src":"76691:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"76690:6:14"},"scope":15864,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15601,"nodeType":"FunctionDefinition","src":"76777:109:14","nodes":[],"documentation":{"id":15591,"nodeType":"StructuredDocumentation","src":"76703:69:14","text":"Parses a string of TOML data at `key` and coerces it to `bool[]`."},"functionSelector":"127cfe9a","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlBoolArray","nameLocation":"76786:18:14","parameters":{"id":15596,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15593,"mutability":"mutable","name":"toml","nameLocation":"76821:4:14","nodeType":"VariableDeclaration","scope":15601,"src":"76805:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15592,"name":"string","nodeType":"ElementaryTypeName","src":"76805:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15595,"mutability":"mutable","name":"key","nameLocation":"76843:3:14","nodeType":"VariableDeclaration","scope":15601,"src":"76827:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15594,"name":"string","nodeType":"ElementaryTypeName","src":"76827:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"76804:43:14"},"returnParameters":{"id":15600,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15599,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":15601,"src":"76871:13:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":15597,"name":"bool","nodeType":"ElementaryTypeName","src":"76871:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":15598,"nodeType":"ArrayTypeName","src":"76871:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"src":"76870:15:14"},"scope":15864,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15611,"nodeType":"FunctionDefinition","src":"76965:104:14","nodes":[],"documentation":{"id":15602,"nodeType":"StructuredDocumentation","src":"76892:68:14","text":"Parses a string of TOML data at `key` and coerces it to `bytes`."},"functionSelector":"d77bfdb9","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlBytes","nameLocation":"76974:14:14","parameters":{"id":15607,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15604,"mutability":"mutable","name":"toml","nameLocation":"77005:4:14","nodeType":"VariableDeclaration","scope":15611,"src":"76989:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15603,"name":"string","nodeType":"ElementaryTypeName","src":"76989:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15606,"mutability":"mutable","name":"key","nameLocation":"77027:3:14","nodeType":"VariableDeclaration","scope":15611,"src":"77011:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15605,"name":"string","nodeType":"ElementaryTypeName","src":"77011:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"76988:43:14"},"returnParameters":{"id":15610,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15609,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":15611,"src":"77055:12:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":15608,"name":"bytes","nodeType":"ElementaryTypeName","src":"77055:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"77054:14:14"},"scope":15864,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15621,"nodeType":"FunctionDefinition","src":"77150:101:14","nodes":[],"documentation":{"id":15612,"nodeType":"StructuredDocumentation","src":"77075:70:14","text":"Parses a string of TOML data at `key` and coerces it to `bytes32`."},"functionSelector":"8e214810","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlBytes32","nameLocation":"77159:16:14","parameters":{"id":15617,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15614,"mutability":"mutable","name":"toml","nameLocation":"77192:4:14","nodeType":"VariableDeclaration","scope":15621,"src":"77176:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15613,"name":"string","nodeType":"ElementaryTypeName","src":"77176:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15616,"mutability":"mutable","name":"key","nameLocation":"77214:3:14","nodeType":"VariableDeclaration","scope":15621,"src":"77198:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15615,"name":"string","nodeType":"ElementaryTypeName","src":"77198:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"77175:43:14"},"returnParameters":{"id":15620,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15619,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":15621,"src":"77242:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15618,"name":"bytes32","nodeType":"ElementaryTypeName","src":"77242:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"77241:9:14"},"scope":15864,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15632,"nodeType":"FunctionDefinition","src":"77334:139:14","nodes":[],"documentation":{"id":15622,"nodeType":"StructuredDocumentation","src":"77257:72:14","text":"Parses a string of TOML data at `key` and coerces it to `bytes32[]`."},"functionSelector":"3e716f81","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlBytes32Array","nameLocation":"77343:21:14","parameters":{"id":15627,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15624,"mutability":"mutable","name":"toml","nameLocation":"77381:4:14","nodeType":"VariableDeclaration","scope":15632,"src":"77365:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15623,"name":"string","nodeType":"ElementaryTypeName","src":"77365:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15626,"mutability":"mutable","name":"key","nameLocation":"77403:3:14","nodeType":"VariableDeclaration","scope":15632,"src":"77387:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15625,"name":"string","nodeType":"ElementaryTypeName","src":"77387:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"77364:43:14"},"returnParameters":{"id":15631,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15630,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":15632,"src":"77455:16:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":15628,"name":"bytes32","nodeType":"ElementaryTypeName","src":"77455:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":15629,"nodeType":"ArrayTypeName","src":"77455:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"77454:18:14"},"scope":15864,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15643,"nodeType":"FunctionDefinition","src":"77554:111:14","nodes":[],"documentation":{"id":15633,"nodeType":"StructuredDocumentation","src":"77479:70:14","text":"Parses a string of TOML data at `key` and coerces it to `bytes[]`."},"functionSelector":"b197c247","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlBytesArray","nameLocation":"77563:19:14","parameters":{"id":15638,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15635,"mutability":"mutable","name":"toml","nameLocation":"77599:4:14","nodeType":"VariableDeclaration","scope":15643,"src":"77583:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15634,"name":"string","nodeType":"ElementaryTypeName","src":"77583:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15637,"mutability":"mutable","name":"key","nameLocation":"77621:3:14","nodeType":"VariableDeclaration","scope":15643,"src":"77605:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15636,"name":"string","nodeType":"ElementaryTypeName","src":"77605:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"77582:43:14"},"returnParameters":{"id":15642,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15641,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":15643,"src":"77649:14:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":15639,"name":"bytes","nodeType":"ElementaryTypeName","src":"77649:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":15640,"nodeType":"ArrayTypeName","src":"77649:7:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"77648:16:14"},"scope":15864,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15653,"nodeType":"FunctionDefinition","src":"77745:96:14","nodes":[],"documentation":{"id":15644,"nodeType":"StructuredDocumentation","src":"77671:69:14","text":"Parses a string of TOML data at `key` and coerces it to `int256`."},"functionSelector":"c1350739","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlInt","nameLocation":"77754:12:14","parameters":{"id":15649,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15646,"mutability":"mutable","name":"toml","nameLocation":"77783:4:14","nodeType":"VariableDeclaration","scope":15653,"src":"77767:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15645,"name":"string","nodeType":"ElementaryTypeName","src":"77767:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15648,"mutability":"mutable","name":"key","nameLocation":"77805:3:14","nodeType":"VariableDeclaration","scope":15653,"src":"77789:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15647,"name":"string","nodeType":"ElementaryTypeName","src":"77789:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"77766:43:14"},"returnParameters":{"id":15652,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15651,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":15653,"src":"77833:6:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15650,"name":"int256","nodeType":"ElementaryTypeName","src":"77833:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"77832:8:14"},"scope":15864,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15664,"nodeType":"FunctionDefinition","src":"77923:110:14","nodes":[],"documentation":{"id":15654,"nodeType":"StructuredDocumentation","src":"77847:71:14","text":"Parses a string of TOML data at `key` and coerces it to `int256[]`."},"functionSelector":"d3522ae6","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlIntArray","nameLocation":"77932:17:14","parameters":{"id":15659,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15656,"mutability":"mutable","name":"toml","nameLocation":"77966:4:14","nodeType":"VariableDeclaration","scope":15664,"src":"77950:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15655,"name":"string","nodeType":"ElementaryTypeName","src":"77950:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15658,"mutability":"mutable","name":"key","nameLocation":"77988:3:14","nodeType":"VariableDeclaration","scope":15664,"src":"77972:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15657,"name":"string","nodeType":"ElementaryTypeName","src":"77972:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"77949:43:14"},"returnParameters":{"id":15663,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15662,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":15664,"src":"78016:15:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_memory_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":15660,"name":"int256","nodeType":"ElementaryTypeName","src":"78016:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":15661,"nodeType":"ArrayTypeName","src":"78016:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"}],"src":"78015:17:14"},"scope":15864,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15675,"nodeType":"FunctionDefinition","src":"78097:111:14","nodes":[],"documentation":{"id":15665,"nodeType":"StructuredDocumentation","src":"78039:53:14","text":"Returns an array of all the keys in a TOML table."},"functionSelector":"812a44b2","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlKeys","nameLocation":"78106:13:14","parameters":{"id":15670,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15667,"mutability":"mutable","name":"toml","nameLocation":"78136:4:14","nodeType":"VariableDeclaration","scope":15675,"src":"78120:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15666,"name":"string","nodeType":"ElementaryTypeName","src":"78120:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15669,"mutability":"mutable","name":"key","nameLocation":"78158:3:14","nodeType":"VariableDeclaration","scope":15675,"src":"78142:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15668,"name":"string","nodeType":"ElementaryTypeName","src":"78142:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"78119:43:14"},"returnParameters":{"id":15674,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15673,"mutability":"mutable","name":"keys","nameLocation":"78202:4:14","nodeType":"VariableDeclaration","scope":15675,"src":"78186:20:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":15671,"name":"string","nodeType":"ElementaryTypeName","src":"78186:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":15672,"nodeType":"ArrayTypeName","src":"78186:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"78185:22:14"},"scope":15864,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15685,"nodeType":"FunctionDefinition","src":"78288:106:14","nodes":[],"documentation":{"id":15676,"nodeType":"StructuredDocumentation","src":"78214:69:14","text":"Parses a string of TOML data at `key` and coerces it to `string`."},"functionSelector":"8bb8dd43","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlString","nameLocation":"78297:15:14","parameters":{"id":15681,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15678,"mutability":"mutable","name":"toml","nameLocation":"78329:4:14","nodeType":"VariableDeclaration","scope":15685,"src":"78313:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15677,"name":"string","nodeType":"ElementaryTypeName","src":"78313:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15680,"mutability":"mutable","name":"key","nameLocation":"78351:3:14","nodeType":"VariableDeclaration","scope":15685,"src":"78335:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15679,"name":"string","nodeType":"ElementaryTypeName","src":"78335:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"78312:43:14"},"returnParameters":{"id":15684,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15683,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":15685,"src":"78379:13:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":15682,"name":"string","nodeType":"ElementaryTypeName","src":"78379:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"78378:15:14"},"scope":15864,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15696,"nodeType":"FunctionDefinition","src":"78476:113:14","nodes":[],"documentation":{"id":15686,"nodeType":"StructuredDocumentation","src":"78400:71:14","text":"Parses a string of TOML data at `key` and coerces it to `string[]`."},"functionSelector":"9f629281","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlStringArray","nameLocation":"78485:20:14","parameters":{"id":15691,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15688,"mutability":"mutable","name":"toml","nameLocation":"78522:4:14","nodeType":"VariableDeclaration","scope":15696,"src":"78506:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15687,"name":"string","nodeType":"ElementaryTypeName","src":"78506:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15690,"mutability":"mutable","name":"key","nameLocation":"78544:3:14","nodeType":"VariableDeclaration","scope":15696,"src":"78528:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15689,"name":"string","nodeType":"ElementaryTypeName","src":"78528:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"78505:43:14"},"returnParameters":{"id":15695,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15694,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":15696,"src":"78572:15:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":15692,"name":"string","nodeType":"ElementaryTypeName","src":"78572:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":15693,"nodeType":"ArrayTypeName","src":"78572:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"78571:17:14"},"scope":15864,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15706,"nodeType":"FunctionDefinition","src":"78670:98:14","nodes":[],"documentation":{"id":15697,"nodeType":"StructuredDocumentation","src":"78595:70:14","text":"Parses a string of TOML data at `key` and coerces it to `uint256`."},"functionSelector":"cc7b0487","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlUint","nameLocation":"78679:13:14","parameters":{"id":15702,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15699,"mutability":"mutable","name":"toml","nameLocation":"78709:4:14","nodeType":"VariableDeclaration","scope":15706,"src":"78693:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15698,"name":"string","nodeType":"ElementaryTypeName","src":"78693:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15701,"mutability":"mutable","name":"key","nameLocation":"78731:3:14","nodeType":"VariableDeclaration","scope":15706,"src":"78715:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15700,"name":"string","nodeType":"ElementaryTypeName","src":"78715:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"78692:43:14"},"returnParameters":{"id":15705,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15704,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":15706,"src":"78759:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15703,"name":"uint256","nodeType":"ElementaryTypeName","src":"78759:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"78758:9:14"},"scope":15864,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15717,"nodeType":"FunctionDefinition","src":"78851:112:14","nodes":[],"documentation":{"id":15707,"nodeType":"StructuredDocumentation","src":"78774:72:14","text":"Parses a string of TOML data at `key` and coerces it to `uint256[]`."},"functionSelector":"b5df27c8","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlUintArray","nameLocation":"78860:18:14","parameters":{"id":15712,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15709,"mutability":"mutable","name":"toml","nameLocation":"78895:4:14","nodeType":"VariableDeclaration","scope":15717,"src":"78879:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15708,"name":"string","nodeType":"ElementaryTypeName","src":"78879:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15711,"mutability":"mutable","name":"key","nameLocation":"78917:3:14","nodeType":"VariableDeclaration","scope":15717,"src":"78901:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15710,"name":"string","nodeType":"ElementaryTypeName","src":"78901:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"78878:43:14"},"returnParameters":{"id":15716,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15715,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":15717,"src":"78945:16:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":15713,"name":"uint256","nodeType":"ElementaryTypeName","src":"78945:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":15714,"nodeType":"ArrayTypeName","src":"78945:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"78944:18:14"},"scope":15864,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15725,"nodeType":"FunctionDefinition","src":"79003:93:14","nodes":[],"documentation":{"id":15718,"nodeType":"StructuredDocumentation","src":"78969:29:14","text":"ABI-encodes a TOML table."},"functionSelector":"592151f0","implemented":false,"kind":"function","modifiers":[],"name":"parseToml","nameLocation":"79012:9:14","parameters":{"id":15721,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15720,"mutability":"mutable","name":"toml","nameLocation":"79038:4:14","nodeType":"VariableDeclaration","scope":15725,"src":"79022:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15719,"name":"string","nodeType":"ElementaryTypeName","src":"79022:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"79021:22:14"},"returnParameters":{"id":15724,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15723,"mutability":"mutable","name":"abiEncodedData","nameLocation":"79080:14:14","nodeType":"VariableDeclaration","scope":15725,"src":"79067:27:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":15722,"name":"bytes","nodeType":"ElementaryTypeName","src":"79067:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"79066:29:14"},"scope":15864,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15735,"nodeType":"FunctionDefinition","src":"79145:114:14","nodes":[],"documentation":{"id":15726,"nodeType":"StructuredDocumentation","src":"79102:38:14","text":"ABI-encodes a TOML table at `key`."},"functionSelector":"37736e08","implemented":false,"kind":"function","modifiers":[],"name":"parseToml","nameLocation":"79154:9:14","parameters":{"id":15731,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15728,"mutability":"mutable","name":"toml","nameLocation":"79180:4:14","nodeType":"VariableDeclaration","scope":15735,"src":"79164:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15727,"name":"string","nodeType":"ElementaryTypeName","src":"79164:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15730,"mutability":"mutable","name":"key","nameLocation":"79202:3:14","nodeType":"VariableDeclaration","scope":15735,"src":"79186:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15729,"name":"string","nodeType":"ElementaryTypeName","src":"79186:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"79163:43:14"},"returnParameters":{"id":15734,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15733,"mutability":"mutable","name":"abiEncodedData","nameLocation":"79243:14:14","nodeType":"VariableDeclaration","scope":15735,"src":"79230:27:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":15732,"name":"bytes","nodeType":"ElementaryTypeName","src":"79230:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"79229:29:14"},"scope":15864,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15743,"nodeType":"FunctionDefinition","src":"79352:72:14","nodes":[],"documentation":{"id":15736,"nodeType":"StructuredDocumentation","src":"79265:82:14","text":"Takes serialized JSON, converts to TOML and write a serialized TOML to a file."},"functionSelector":"c0865ba7","implemented":false,"kind":"function","modifiers":[],"name":"writeToml","nameLocation":"79361:9:14","parameters":{"id":15741,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15738,"mutability":"mutable","name":"json","nameLocation":"79387:4:14","nodeType":"VariableDeclaration","scope":15743,"src":"79371:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15737,"name":"string","nodeType":"ElementaryTypeName","src":"79371:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15740,"mutability":"mutable","name":"path","nameLocation":"79409:4:14","nodeType":"VariableDeclaration","scope":15743,"src":"79393:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15739,"name":"string","nodeType":"ElementaryTypeName","src":"79393:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"79370:44:14"},"returnParameters":{"id":15742,"nodeType":"ParameterList","parameters":[],"src":"79423:0:14"},"scope":15864,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15753,"nodeType":"FunctionDefinition","src":"79693:98:14","nodes":[],"documentation":{"id":15744,"nodeType":"StructuredDocumentation","src":"79430:258:14","text":"Takes serialized JSON, converts to TOML and write a serialized TOML table to an **existing** TOML file, replacing a value with key = <value_key.>\n This is useful to replace a specific value of a TOML file, without having to parse the entire thing."},"functionSelector":"51ac6a33","implemented":false,"kind":"function","modifiers":[],"name":"writeToml","nameLocation":"79702:9:14","parameters":{"id":15751,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15746,"mutability":"mutable","name":"json","nameLocation":"79728:4:14","nodeType":"VariableDeclaration","scope":15753,"src":"79712:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15745,"name":"string","nodeType":"ElementaryTypeName","src":"79712:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15748,"mutability":"mutable","name":"path","nameLocation":"79750:4:14","nodeType":"VariableDeclaration","scope":15753,"src":"79734:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15747,"name":"string","nodeType":"ElementaryTypeName","src":"79734:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15750,"mutability":"mutable","name":"valueKey","nameLocation":"79772:8:14","nodeType":"VariableDeclaration","scope":15753,"src":"79756:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15749,"name":"string","nodeType":"ElementaryTypeName","src":"79756:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"79711:70:14"},"returnParameters":{"id":15752,"nodeType":"ParameterList","parameters":[],"src":"79790:0:14"},"scope":15864,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15765,"nodeType":"FunctionDefinition","src":"79930:141:14","nodes":[],"documentation":{"id":15754,"nodeType":"StructuredDocumentation","src":"79833:92:14","text":"Compute the address of a contract created with CREATE2 using the given CREATE2 deployer."},"functionSelector":"d323826a","implemented":false,"kind":"function","modifiers":[],"name":"computeCreate2Address","nameLocation":"79939:21:14","parameters":{"id":15761,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15756,"mutability":"mutable","name":"salt","nameLocation":"79969:4:14","nodeType":"VariableDeclaration","scope":15765,"src":"79961:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15755,"name":"bytes32","nodeType":"ElementaryTypeName","src":"79961:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":15758,"mutability":"mutable","name":"initCodeHash","nameLocation":"79983:12:14","nodeType":"VariableDeclaration","scope":15765,"src":"79975:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15757,"name":"bytes32","nodeType":"ElementaryTypeName","src":"79975:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":15760,"mutability":"mutable","name":"deployer","nameLocation":"80005:8:14","nodeType":"VariableDeclaration","scope":15765,"src":"79997:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15759,"name":"address","nodeType":"ElementaryTypeName","src":"79997:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"79960:54:14"},"returnParameters":{"id":15764,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15763,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":15765,"src":"80062:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15762,"name":"address","nodeType":"ElementaryTypeName","src":"80062:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"80061:9:14"},"scope":15864,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15775,"nodeType":"FunctionDefinition","src":"80176:99:14","nodes":[],"documentation":{"id":15766,"nodeType":"StructuredDocumentation","src":"80077:94:14","text":"Compute the address of a contract created with CREATE2 using the default CREATE2 deployer."},"functionSelector":"890c283b","implemented":false,"kind":"function","modifiers":[],"name":"computeCreate2Address","nameLocation":"80185:21:14","parameters":{"id":15771,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15768,"mutability":"mutable","name":"salt","nameLocation":"80215:4:14","nodeType":"VariableDeclaration","scope":15775,"src":"80207:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15767,"name":"bytes32","nodeType":"ElementaryTypeName","src":"80207:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":15770,"mutability":"mutable","name":"initCodeHash","nameLocation":"80229:12:14","nodeType":"VariableDeclaration","scope":15775,"src":"80221:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15769,"name":"bytes32","nodeType":"ElementaryTypeName","src":"80221:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"80206:36:14"},"returnParameters":{"id":15774,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15773,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":15775,"src":"80266:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15772,"name":"address","nodeType":"ElementaryTypeName","src":"80266:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"80265:9:14"},"scope":15864,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15785,"nodeType":"FunctionDefinition","src":"80380:95:14","nodes":[],"documentation":{"id":15776,"nodeType":"StructuredDocumentation","src":"80281:94:14","text":"Compute the address a contract will be deployed at for a given deployer address and nonce."},"functionSelector":"74637a7a","implemented":false,"kind":"function","modifiers":[],"name":"computeCreateAddress","nameLocation":"80389:20:14","parameters":{"id":15781,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15778,"mutability":"mutable","name":"deployer","nameLocation":"80418:8:14","nodeType":"VariableDeclaration","scope":15785,"src":"80410:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15777,"name":"address","nodeType":"ElementaryTypeName","src":"80410:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":15780,"mutability":"mutable","name":"nonce","nameLocation":"80436:5:14","nodeType":"VariableDeclaration","scope":15785,"src":"80428:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15779,"name":"uint256","nodeType":"ElementaryTypeName","src":"80428:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"80409:33:14"},"returnParameters":{"id":15784,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15783,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":15785,"src":"80466:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15782,"name":"address","nodeType":"ElementaryTypeName","src":"80466:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"80465:9:14"},"scope":15864,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15793,"nodeType":"FunctionDefinition","src":"80531:75:14","nodes":[],"documentation":{"id":15786,"nodeType":"StructuredDocumentation","src":"80481:45:14","text":"Returns ENS namehash for provided string."},"functionSelector":"8c374c65","implemented":false,"kind":"function","modifiers":[],"name":"ensNamehash","nameLocation":"80540:11:14","parameters":{"id":15789,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15788,"mutability":"mutable","name":"name","nameLocation":"80568:4:14","nodeType":"VariableDeclaration","scope":15793,"src":"80552:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15787,"name":"string","nodeType":"ElementaryTypeName","src":"80552:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"80551:22:14"},"returnParameters":{"id":15792,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15791,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":15793,"src":"80597:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15790,"name":"bytes32","nodeType":"ElementaryTypeName","src":"80597:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"80596:9:14"},"scope":15864,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15801,"nodeType":"FunctionDefinition","src":"80662:86:14","nodes":[],"documentation":{"id":15794,"nodeType":"StructuredDocumentation","src":"80612:45:14","text":"Gets the label for the specified address."},"functionSelector":"28a249b0","implemented":false,"kind":"function","modifiers":[],"name":"getLabel","nameLocation":"80671:8:14","parameters":{"id":15797,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15796,"mutability":"mutable","name":"account","nameLocation":"80688:7:14","nodeType":"VariableDeclaration","scope":15801,"src":"80680:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15795,"name":"address","nodeType":"ElementaryTypeName","src":"80680:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"80679:17:14"},"returnParameters":{"id":15800,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15799,"mutability":"mutable","name":"currentLabel","nameLocation":"80734:12:14","nodeType":"VariableDeclaration","scope":15801,"src":"80720:26:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":15798,"name":"string","nodeType":"ElementaryTypeName","src":"80720:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"80719:28:14"},"scope":15864,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":15809,"nodeType":"FunctionDefinition","src":"80796:67:14","nodes":[],"documentation":{"id":15802,"nodeType":"StructuredDocumentation","src":"80754:37:14","text":"Labels an address in call traces."},"functionSelector":"c657c718","implemented":false,"kind":"function","modifiers":[],"name":"label","nameLocation":"80805:5:14","parameters":{"id":15807,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15804,"mutability":"mutable","name":"account","nameLocation":"80819:7:14","nodeType":"VariableDeclaration","scope":15809,"src":"80811:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15803,"name":"address","nodeType":"ElementaryTypeName","src":"80811:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":15806,"mutability":"mutable","name":"newLabel","nameLocation":"80844:8:14","nodeType":"VariableDeclaration","scope":15809,"src":"80828:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15805,"name":"string","nodeType":"ElementaryTypeName","src":"80828:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"80810:43:14"},"returnParameters":{"id":15808,"nodeType":"ParameterList","parameters":[],"src":"80862:0:14"},"scope":15864,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15815,"nodeType":"FunctionDefinition","src":"80905:52:14","nodes":[],"documentation":{"id":15810,"nodeType":"StructuredDocumentation","src":"80869:31:14","text":"Returns a random `address`."},"functionSelector":"d5bee9f5","implemented":false,"kind":"function","modifiers":[],"name":"randomAddress","nameLocation":"80914:13:14","parameters":{"id":15811,"nodeType":"ParameterList","parameters":[],"src":"80927:2:14"},"returnParameters":{"id":15814,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15813,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":15815,"src":"80948:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15812,"name":"address","nodeType":"ElementaryTypeName","src":"80948:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"80947:9:14"},"scope":15864,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15821,"nodeType":"FunctionDefinition","src":"81003:49:14","nodes":[],"documentation":{"id":15816,"nodeType":"StructuredDocumentation","src":"80963:35:14","text":"Returns a random uint256 value."},"functionSelector":"25124730","implemented":false,"kind":"function","modifiers":[],"name":"randomUint","nameLocation":"81012:10:14","parameters":{"id":15817,"nodeType":"ParameterList","parameters":[],"src":"81022:2:14"},"returnParameters":{"id":15820,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15819,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":15821,"src":"81043:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15818,"name":"uint256","nodeType":"ElementaryTypeName","src":"81043:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"81042:9:14"},"scope":15864,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15831,"nodeType":"FunctionDefinition","src":"81135:73:14","nodes":[],"documentation":{"id":15822,"nodeType":"StructuredDocumentation","src":"81058:72:14","text":"Returns random uin256 value between the provided range (=min..=max)."},"functionSelector":"d61b051b","implemented":false,"kind":"function","modifiers":[],"name":"randomUint","nameLocation":"81144:10:14","parameters":{"id":15827,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15824,"mutability":"mutable","name":"min","nameLocation":"81163:3:14","nodeType":"VariableDeclaration","scope":15831,"src":"81155:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15823,"name":"uint256","nodeType":"ElementaryTypeName","src":"81155:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15826,"mutability":"mutable","name":"max","nameLocation":"81176:3:14","nodeType":"VariableDeclaration","scope":15831,"src":"81168:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15825,"name":"uint256","nodeType":"ElementaryTypeName","src":"81168:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"81154:26:14"},"returnParameters":{"id":15830,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15829,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":15831,"src":"81199:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15828,"name":"uint256","nodeType":"ElementaryTypeName","src":"81199:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"81198:9:14"},"scope":15864,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15839,"nodeType":"FunctionDefinition","src":"81269:80:14","nodes":[],"documentation":{"id":15832,"nodeType":"StructuredDocumentation","src":"81214:50:14","text":"Encodes a `bytes` value to a base64url string."},"functionSelector":"c8bd0e4a","implemented":false,"kind":"function","modifiers":[],"name":"toBase64URL","nameLocation":"81278:11:14","parameters":{"id":15835,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15834,"mutability":"mutable","name":"data","nameLocation":"81305:4:14","nodeType":"VariableDeclaration","scope":15839,"src":"81290:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":15833,"name":"bytes","nodeType":"ElementaryTypeName","src":"81290:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"81289:21:14"},"returnParameters":{"id":15838,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15837,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":15839,"src":"81334:13:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":15836,"name":"string","nodeType":"ElementaryTypeName","src":"81334:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"81333:15:14"},"scope":15864,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15847,"nodeType":"FunctionDefinition","src":"81411:81:14","nodes":[],"documentation":{"id":15840,"nodeType":"StructuredDocumentation","src":"81355:51:14","text":"Encodes a `string` value to a base64url string."},"functionSelector":"ae3165b3","implemented":false,"kind":"function","modifiers":[],"name":"toBase64URL","nameLocation":"81420:11:14","parameters":{"id":15843,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15842,"mutability":"mutable","name":"data","nameLocation":"81448:4:14","nodeType":"VariableDeclaration","scope":15847,"src":"81432:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15841,"name":"string","nodeType":"ElementaryTypeName","src":"81432:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"81431:22:14"},"returnParameters":{"id":15846,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15845,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":15847,"src":"81477:13:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":15844,"name":"string","nodeType":"ElementaryTypeName","src":"81477:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"81476:15:14"},"scope":15864,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15855,"nodeType":"FunctionDefinition","src":"81550:77:14","nodes":[],"documentation":{"id":15848,"nodeType":"StructuredDocumentation","src":"81498:47:14","text":"Encodes a `bytes` value to a base64 string."},"functionSelector":"a5cbfe65","implemented":false,"kind":"function","modifiers":[],"name":"toBase64","nameLocation":"81559:8:14","parameters":{"id":15851,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15850,"mutability":"mutable","name":"data","nameLocation":"81583:4:14","nodeType":"VariableDeclaration","scope":15855,"src":"81568:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":15849,"name":"bytes","nodeType":"ElementaryTypeName","src":"81568:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"81567:21:14"},"returnParameters":{"id":15854,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15853,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":15855,"src":"81612:13:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":15852,"name":"string","nodeType":"ElementaryTypeName","src":"81612:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"81611:15:14"},"scope":15864,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15863,"nodeType":"FunctionDefinition","src":"81686:78:14","nodes":[],"documentation":{"id":15856,"nodeType":"StructuredDocumentation","src":"81633:48:14","text":"Encodes a `string` value to a base64 string."},"functionSelector":"3f8be2c8","implemented":false,"kind":"function","modifiers":[],"name":"toBase64","nameLocation":"81695:8:14","parameters":{"id":15859,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15858,"mutability":"mutable","name":"data","nameLocation":"81720:4:14","nodeType":"VariableDeclaration","scope":15863,"src":"81704:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15857,"name":"string","nodeType":"ElementaryTypeName","src":"81704:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"81703:22:14"},"returnParameters":{"id":15862,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15861,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":15863,"src":"81749:13:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":15860,"name":"string","nodeType":"ElementaryTypeName","src":"81749:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"81748:15:14"},"scope":15864,"stateMutability":"pure","virtual":false,"visibility":"external"}],"abstract":false,"baseContracts":[],"canonicalName":"VmSafe","contractDependencies":[],"contractKind":"interface","documentation":{"id":12479,"nodeType":"StructuredDocumentation","src":"184:225:14","text":"The `VmSafe` interface does not allow manipulation of the EVM state or other actions that may\n result in Script simulations differing from on-chain execution. It is recommended to only use\n these cheats in scripts."},"fullyImplemented":false,"linearizedBaseContracts":[15864],"name":"VmSafe","nameLocation":"419:6:14","scope":16514,"usedErrors":[],"usedEvents":[]},{"id":16513,"nodeType":"ContractDefinition","src":"81939:15888:14","nodes":[{"id":15873,"nodeType":"FunctionDefinition","src":"82099:61:14","nodes":[],"documentation":{"id":15868,"nodeType":"StructuredDocumentation","src":"81998:96:14","text":"Returns the identifier of the currently active fork. Reverts if no fork is currently active."},"functionSelector":"2f103f22","implemented":false,"kind":"function","modifiers":[],"name":"activeFork","nameLocation":"82108:10:14","parameters":{"id":15869,"nodeType":"ParameterList","parameters":[],"src":"82118:2:14"},"returnParameters":{"id":15872,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15871,"mutability":"mutable","name":"forkId","nameLocation":"82152:6:14","nodeType":"VariableDeclaration","scope":15873,"src":"82144:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15870,"name":"uint256","nodeType":"ElementaryTypeName","src":"82144:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"82143:16:14"},"scope":16513,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":15879,"nodeType":"FunctionDefinition","src":"82244:51:14","nodes":[],"documentation":{"id":15874,"nodeType":"StructuredDocumentation","src":"82166:73:14","text":"In forking mode, explicitly grant the given address cheatcode access."},"functionSelector":"ea060291","implemented":false,"kind":"function","modifiers":[],"name":"allowCheatcodes","nameLocation":"82253:15:14","parameters":{"id":15877,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15876,"mutability":"mutable","name":"account","nameLocation":"82277:7:14","nodeType":"VariableDeclaration","scope":15879,"src":"82269:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15875,"name":"address","nodeType":"ElementaryTypeName","src":"82269:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"82268:17:14"},"returnParameters":{"id":15878,"nodeType":"ParameterList","parameters":[],"src":"82294:0:14"},"scope":16513,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15885,"nodeType":"FunctionDefinition","src":"82334:54:14","nodes":[],"documentation":{"id":15880,"nodeType":"StructuredDocumentation","src":"82301:28:14","text":"Sets `block.blobbasefee`"},"functionSelector":"6d315d7e","implemented":false,"kind":"function","modifiers":[],"name":"blobBaseFee","nameLocation":"82343:11:14","parameters":{"id":15883,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15882,"mutability":"mutable","name":"newBlobBaseFee","nameLocation":"82363:14:14","nodeType":"VariableDeclaration","scope":15885,"src":"82355:22:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15881,"name":"uint256","nodeType":"ElementaryTypeName","src":"82355:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"82354:24:14"},"returnParameters":{"id":15884,"nodeType":"ParameterList","parameters":[],"src":"82387:0:14"},"scope":16513,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15892,"nodeType":"FunctionDefinition","src":"82555:56:14","nodes":[],"documentation":{"id":15886,"nodeType":"StructuredDocumentation","src":"82394:156:14","text":"Sets the blobhashes in the transaction.\n Not available on EVM versions before Cancun.\n If used on unsupported EVM versions it will revert."},"functionSelector":"129de7eb","implemented":false,"kind":"function","modifiers":[],"name":"blobhashes","nameLocation":"82564:10:14","parameters":{"id":15890,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15889,"mutability":"mutable","name":"hashes","nameLocation":"82594:6:14","nodeType":"VariableDeclaration","scope":15892,"src":"82575:25:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":15887,"name":"bytes32","nodeType":"ElementaryTypeName","src":"82575:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":15888,"nodeType":"ArrayTypeName","src":"82575:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"82574:27:14"},"returnParameters":{"id":15891,"nodeType":"ParameterList","parameters":[],"src":"82610:0:14"},"scope":16513,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15898,"nodeType":"FunctionDefinition","src":"82647:46:14","nodes":[],"documentation":{"id":15893,"nodeType":"StructuredDocumentation","src":"82617:25:14","text":"Sets `block.chainid`."},"functionSelector":"4049ddd2","implemented":false,"kind":"function","modifiers":[],"name":"chainId","nameLocation":"82656:7:14","parameters":{"id":15896,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15895,"mutability":"mutable","name":"newChainId","nameLocation":"82672:10:14","nodeType":"VariableDeclaration","scope":15898,"src":"82664:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15894,"name":"uint256","nodeType":"ElementaryTypeName","src":"82664:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"82663:20:14"},"returnParameters":{"id":15897,"nodeType":"ParameterList","parameters":[],"src":"82692:0:14"},"scope":16513,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15902,"nodeType":"FunctionDefinition","src":"82732:37:14","nodes":[],"documentation":{"id":15899,"nodeType":"StructuredDocumentation","src":"82699:28:14","text":"Clears all mocked calls."},"functionSelector":"3fdf4e15","implemented":false,"kind":"function","modifiers":[],"name":"clearMockedCalls","nameLocation":"82741:16:14","parameters":{"id":15900,"nodeType":"ParameterList","parameters":[],"src":"82757:2:14"},"returnParameters":{"id":15901,"nodeType":"ParameterList","parameters":[],"src":"82768:0:14"},"scope":16513,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15908,"nodeType":"FunctionDefinition","src":"82806:48:14","nodes":[],"documentation":{"id":15903,"nodeType":"StructuredDocumentation","src":"82775:26:14","text":"Sets `block.coinbase`."},"functionSelector":"ff483c54","implemented":false,"kind":"function","modifiers":[],"name":"coinbase","nameLocation":"82815:8:14","parameters":{"id":15906,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15905,"mutability":"mutable","name":"newCoinbase","nameLocation":"82832:11:14","nodeType":"VariableDeclaration","scope":15908,"src":"82824:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15904,"name":"address","nodeType":"ElementaryTypeName","src":"82824:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"82823:21:14"},"returnParameters":{"id":15907,"nodeType":"ParameterList","parameters":[],"src":"82853:0:14"},"scope":16513,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15916,"nodeType":"FunctionDefinition","src":"82974:82:14","nodes":[],"documentation":{"id":15909,"nodeType":"StructuredDocumentation","src":"82860:109:14","text":"Creates a new fork with the given endpoint and the _latest_ block and returns the identifier of the fork."},"functionSelector":"31ba3498","implemented":false,"kind":"function","modifiers":[],"name":"createFork","nameLocation":"82983:10:14","parameters":{"id":15912,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15911,"mutability":"mutable","name":"urlOrAlias","nameLocation":"83010:10:14","nodeType":"VariableDeclaration","scope":15916,"src":"82994:26:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15910,"name":"string","nodeType":"ElementaryTypeName","src":"82994:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"82993:28:14"},"returnParameters":{"id":15915,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15914,"mutability":"mutable","name":"forkId","nameLocation":"83048:6:14","nodeType":"VariableDeclaration","scope":15916,"src":"83040:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15913,"name":"uint256","nodeType":"ElementaryTypeName","src":"83040:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"83039:16:14"},"scope":16513,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15926,"nodeType":"FunctionDefinition","src":"83163:103:14","nodes":[],"documentation":{"id":15917,"nodeType":"StructuredDocumentation","src":"83062:96:14","text":"Creates a new fork with the given endpoint and block and returns the identifier of the fork."},"functionSelector":"6ba3ba2b","implemented":false,"kind":"function","modifiers":[],"name":"createFork","nameLocation":"83172:10:14","parameters":{"id":15922,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15919,"mutability":"mutable","name":"urlOrAlias","nameLocation":"83199:10:14","nodeType":"VariableDeclaration","scope":15926,"src":"83183:26:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15918,"name":"string","nodeType":"ElementaryTypeName","src":"83183:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15921,"mutability":"mutable","name":"blockNumber","nameLocation":"83219:11:14","nodeType":"VariableDeclaration","scope":15926,"src":"83211:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15920,"name":"uint256","nodeType":"ElementaryTypeName","src":"83211:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"83182:49:14"},"returnParameters":{"id":15925,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15924,"mutability":"mutable","name":"forkId","nameLocation":"83258:6:14","nodeType":"VariableDeclaration","scope":15926,"src":"83250:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15923,"name":"uint256","nodeType":"ElementaryTypeName","src":"83250:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"83249:16:14"},"scope":16513,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15936,"nodeType":"FunctionDefinition","src":"83491:98:14","nodes":[],"documentation":{"id":15927,"nodeType":"StructuredDocumentation","src":"83272:214:14","text":"Creates a new fork with the given endpoint and at the block the given transaction was mined in,\n replays all transaction mined in the block before the transaction, and returns the identifier of the fork."},"functionSelector":"7ca29682","implemented":false,"kind":"function","modifiers":[],"name":"createFork","nameLocation":"83500:10:14","parameters":{"id":15932,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15929,"mutability":"mutable","name":"urlOrAlias","nameLocation":"83527:10:14","nodeType":"VariableDeclaration","scope":15936,"src":"83511:26:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15928,"name":"string","nodeType":"ElementaryTypeName","src":"83511:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15931,"mutability":"mutable","name":"txHash","nameLocation":"83547:6:14","nodeType":"VariableDeclaration","scope":15936,"src":"83539:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15930,"name":"bytes32","nodeType":"ElementaryTypeName","src":"83539:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"83510:44:14"},"returnParameters":{"id":15935,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15934,"mutability":"mutable","name":"forkId","nameLocation":"83581:6:14","nodeType":"VariableDeclaration","scope":15936,"src":"83573:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15933,"name":"uint256","nodeType":"ElementaryTypeName","src":"83573:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"83572:16:14"},"scope":16513,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15944,"nodeType":"FunctionDefinition","src":"83724:88:14","nodes":[],"documentation":{"id":15937,"nodeType":"StructuredDocumentation","src":"83595:124:14","text":"Creates and also selects a new fork with the given endpoint and the latest block and returns the identifier of the fork."},"functionSelector":"98680034","implemented":false,"kind":"function","modifiers":[],"name":"createSelectFork","nameLocation":"83733:16:14","parameters":{"id":15940,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15939,"mutability":"mutable","name":"urlOrAlias","nameLocation":"83766:10:14","nodeType":"VariableDeclaration","scope":15944,"src":"83750:26:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15938,"name":"string","nodeType":"ElementaryTypeName","src":"83750:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"83749:28:14"},"returnParameters":{"id":15943,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15942,"mutability":"mutable","name":"forkId","nameLocation":"83804:6:14","nodeType":"VariableDeclaration","scope":15944,"src":"83796:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15941,"name":"uint256","nodeType":"ElementaryTypeName","src":"83796:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"83795:16:14"},"scope":16513,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15954,"nodeType":"FunctionDefinition","src":"83936:109:14","nodes":[],"documentation":{"id":15945,"nodeType":"StructuredDocumentation","src":"83818:113:14","text":"Creates and also selects a new fork with the given endpoint and block and returns the identifier of the fork."},"functionSelector":"71ee464d","implemented":false,"kind":"function","modifiers":[],"name":"createSelectFork","nameLocation":"83945:16:14","parameters":{"id":15950,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15947,"mutability":"mutable","name":"urlOrAlias","nameLocation":"83978:10:14","nodeType":"VariableDeclaration","scope":15954,"src":"83962:26:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15946,"name":"string","nodeType":"ElementaryTypeName","src":"83962:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15949,"mutability":"mutable","name":"blockNumber","nameLocation":"83998:11:14","nodeType":"VariableDeclaration","scope":15954,"src":"83990:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15948,"name":"uint256","nodeType":"ElementaryTypeName","src":"83990:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"83961:49:14"},"returnParameters":{"id":15953,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15952,"mutability":"mutable","name":"forkId","nameLocation":"84037:6:14","nodeType":"VariableDeclaration","scope":15954,"src":"84029:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15951,"name":"uint256","nodeType":"ElementaryTypeName","src":"84029:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"84028:16:14"},"scope":16513,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15964,"nodeType":"FunctionDefinition","src":"84281:104:14","nodes":[],"documentation":{"id":15955,"nodeType":"StructuredDocumentation","src":"84051:225:14","text":"Creates and also selects new fork with the given endpoint and at the block the given transaction was mined in,\n replays all transaction mined in the block before the transaction, returns the identifier of the fork."},"functionSelector":"84d52b7a","implemented":false,"kind":"function","modifiers":[],"name":"createSelectFork","nameLocation":"84290:16:14","parameters":{"id":15960,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15957,"mutability":"mutable","name":"urlOrAlias","nameLocation":"84323:10:14","nodeType":"VariableDeclaration","scope":15964,"src":"84307:26:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15956,"name":"string","nodeType":"ElementaryTypeName","src":"84307:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15959,"mutability":"mutable","name":"txHash","nameLocation":"84343:6:14","nodeType":"VariableDeclaration","scope":15964,"src":"84335:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15958,"name":"bytes32","nodeType":"ElementaryTypeName","src":"84335:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"84306:44:14"},"returnParameters":{"id":15963,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15962,"mutability":"mutable","name":"forkId","nameLocation":"84377:6:14","nodeType":"VariableDeclaration","scope":15964,"src":"84369:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15961,"name":"uint256","nodeType":"ElementaryTypeName","src":"84369:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"84368:16:14"},"scope":16513,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15972,"nodeType":"FunctionDefinition","src":"84425:60:14","nodes":[],"documentation":{"id":15965,"nodeType":"StructuredDocumentation","src":"84391:29:14","text":"Sets an address' balance."},"functionSelector":"c88a5e6d","implemented":false,"kind":"function","modifiers":[],"name":"deal","nameLocation":"84434:4:14","parameters":{"id":15970,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15967,"mutability":"mutable","name":"account","nameLocation":"84447:7:14","nodeType":"VariableDeclaration","scope":15972,"src":"84439:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15966,"name":"address","nodeType":"ElementaryTypeName","src":"84439:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":15969,"mutability":"mutable","name":"newBalance","nameLocation":"84464:10:14","nodeType":"VariableDeclaration","scope":15972,"src":"84456:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15968,"name":"uint256","nodeType":"ElementaryTypeName","src":"84456:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"84438:37:14"},"returnParameters":{"id":15971,"nodeType":"ParameterList","parameters":[],"src":"84484:0:14"},"scope":16513,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15980,"nodeType":"FunctionDefinition","src":"84723:76:14","nodes":[],"documentation":{"id":15973,"nodeType":"StructuredDocumentation","src":"84491:227:14","text":"Removes the snapshot with the given ID created by `snapshot`.\n Takes the snapshot ID to delete.\n Returns `true` if the snapshot was successfully deleted.\n Returns `false` if the snapshot does not exist."},"functionSelector":"a6368557","implemented":false,"kind":"function","modifiers":[],"name":"deleteSnapshot","nameLocation":"84732:14:14","parameters":{"id":15976,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15975,"mutability":"mutable","name":"snapshotId","nameLocation":"84755:10:14","nodeType":"VariableDeclaration","scope":15980,"src":"84747:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15974,"name":"uint256","nodeType":"ElementaryTypeName","src":"84747:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"84746:20:14"},"returnParameters":{"id":15979,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15978,"mutability":"mutable","name":"success","nameLocation":"84790:7:14","nodeType":"VariableDeclaration","scope":15980,"src":"84785:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":15977,"name":"bool","nodeType":"ElementaryTypeName","src":"84785:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"84784:14:14"},"scope":16513,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15984,"nodeType":"FunctionDefinition","src":"84871:36:14","nodes":[],"documentation":{"id":15981,"nodeType":"StructuredDocumentation","src":"84805:61:14","text":"Removes _all_ snapshots previously created by `snapshot`."},"functionSelector":"421ae469","implemented":false,"kind":"function","modifiers":[],"name":"deleteSnapshots","nameLocation":"84880:15:14","parameters":{"id":15982,"nodeType":"ParameterList","parameters":[],"src":"84895:2:14"},"returnParameters":{"id":15983,"nodeType":"ParameterList","parameters":[],"src":"84906:0:14"},"scope":16513,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15990,"nodeType":"FunctionDefinition","src":"85083:52:14","nodes":[],"documentation":{"id":15985,"nodeType":"StructuredDocumentation","src":"84913:165:14","text":"Sets `block.difficulty`.\n Not available on EVM versions from Paris onwards. Use `prevrandao` instead.\n Reverts if used on unsupported EVM versions."},"functionSelector":"46cc92d9","implemented":false,"kind":"function","modifiers":[],"name":"difficulty","nameLocation":"85092:10:14","parameters":{"id":15988,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15987,"mutability":"mutable","name":"newDifficulty","nameLocation":"85111:13:14","nodeType":"VariableDeclaration","scope":15990,"src":"85103:21:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15986,"name":"uint256","nodeType":"ElementaryTypeName","src":"85103:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"85102:23:14"},"returnParameters":{"id":15989,"nodeType":"ParameterList","parameters":[],"src":"85134:0:14"},"scope":16513,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15996,"nodeType":"FunctionDefinition","src":"85194:61:14","nodes":[],"documentation":{"id":15991,"nodeType":"StructuredDocumentation","src":"85141:48:14","text":"Dump a genesis JSON file's `allocs` to disk."},"functionSelector":"709ecd3f","implemented":false,"kind":"function","modifiers":[],"name":"dumpState","nameLocation":"85203:9:14","parameters":{"id":15994,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15993,"mutability":"mutable","name":"pathToStateJson","nameLocation":"85229:15:14","nodeType":"VariableDeclaration","scope":15996,"src":"85213:31:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15992,"name":"string","nodeType":"ElementaryTypeName","src":"85213:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"85212:33:14"},"returnParameters":{"id":15995,"nodeType":"ParameterList","parameters":[],"src":"85254:0:14"},"scope":16513,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16004,"nodeType":"FunctionDefinition","src":"85292:74:14","nodes":[],"documentation":{"id":15997,"nodeType":"StructuredDocumentation","src":"85261:26:14","text":"Sets an address' code."},"functionSelector":"b4d6c782","implemented":false,"kind":"function","modifiers":[],"name":"etch","nameLocation":"85301:4:14","parameters":{"id":16002,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15999,"mutability":"mutable","name":"target","nameLocation":"85314:6:14","nodeType":"VariableDeclaration","scope":16004,"src":"85306:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15998,"name":"address","nodeType":"ElementaryTypeName","src":"85306:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":16001,"mutability":"mutable","name":"newRuntimeBytecode","nameLocation":"85337:18:14","nodeType":"VariableDeclaration","scope":16004,"src":"85322:33:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":16000,"name":"bytes","nodeType":"ElementaryTypeName","src":"85322:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"85305:51:14"},"returnParameters":{"id":16003,"nodeType":"ParameterList","parameters":[],"src":"85365:0:14"},"scope":16513,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16010,"nodeType":"FunctionDefinition","src":"85402:42:14","nodes":[],"documentation":{"id":16005,"nodeType":"StructuredDocumentation","src":"85372:25:14","text":"Sets `block.basefee`."},"functionSelector":"39b37ab0","implemented":false,"kind":"function","modifiers":[],"name":"fee","nameLocation":"85411:3:14","parameters":{"id":16008,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16007,"mutability":"mutable","name":"newBasefee","nameLocation":"85423:10:14","nodeType":"VariableDeclaration","scope":16010,"src":"85415:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16006,"name":"uint256","nodeType":"ElementaryTypeName","src":"85415:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"85414:20:14"},"returnParameters":{"id":16009,"nodeType":"ParameterList","parameters":[],"src":"85443:0:14"},"scope":16513,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16017,"nodeType":"FunctionDefinition","src":"85622:73:14","nodes":[],"documentation":{"id":16011,"nodeType":"StructuredDocumentation","src":"85450:167:14","text":"Gets the blockhashes from the current transaction.\n Not available on EVM versions before Cancun.\n If used on unsupported EVM versions it will revert."},"functionSelector":"f56ff18b","implemented":false,"kind":"function","modifiers":[],"name":"getBlobhashes","nameLocation":"85631:13:14","parameters":{"id":16012,"nodeType":"ParameterList","parameters":[],"src":"85644:2:14"},"returnParameters":{"id":16016,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16015,"mutability":"mutable","name":"hashes","nameLocation":"85687:6:14","nodeType":"VariableDeclaration","scope":16017,"src":"85670:23:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":16013,"name":"bytes32","nodeType":"ElementaryTypeName","src":"85670:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":16014,"nodeType":"ArrayTypeName","src":"85670:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"85669:25:14"},"scope":16513,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16025,"nodeType":"FunctionDefinition","src":"85762:79:14","nodes":[],"documentation":{"id":16018,"nodeType":"StructuredDocumentation","src":"85701:56:14","text":"Returns true if the account is marked as persistent."},"functionSelector":"d92d8efd","implemented":false,"kind":"function","modifiers":[],"name":"isPersistent","nameLocation":"85771:12:14","parameters":{"id":16021,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16020,"mutability":"mutable","name":"account","nameLocation":"85792:7:14","nodeType":"VariableDeclaration","scope":16025,"src":"85784:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16019,"name":"address","nodeType":"ElementaryTypeName","src":"85784:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"85783:17:14"},"returnParameters":{"id":16024,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16023,"mutability":"mutable","name":"persistent","nameLocation":"85829:10:14","nodeType":"VariableDeclaration","scope":16025,"src":"85824:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":16022,"name":"bool","nodeType":"ElementaryTypeName","src":"85824:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"85823:17:14"},"scope":16513,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16031,"nodeType":"FunctionDefinition","src":"85922:63:14","nodes":[],"documentation":{"id":16026,"nodeType":"StructuredDocumentation","src":"85847:70:14","text":"Load a genesis JSON file's `allocs` into the in-memory revm state."},"functionSelector":"b3a056d7","implemented":false,"kind":"function","modifiers":[],"name":"loadAllocs","nameLocation":"85931:10:14","parameters":{"id":16029,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16028,"mutability":"mutable","name":"pathToAllocsJson","nameLocation":"85958:16:14","nodeType":"VariableDeclaration","scope":16031,"src":"85942:32:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16027,"name":"string","nodeType":"ElementaryTypeName","src":"85942:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"85941:34:14"},"returnParameters":{"id":16030,"nodeType":"ParameterList","parameters":[],"src":"85984:0:14"},"scope":16513,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16037,"nodeType":"FunctionDefinition","src":"86188:50:14","nodes":[],"documentation":{"id":16032,"nodeType":"StructuredDocumentation","src":"85991:192:14","text":"Marks that the account(s) should use persistent storage across fork swaps in a multifork setup\n Meaning, changes made to the state of this account will be kept when switching forks."},"functionSelector":"57e22dde","implemented":false,"kind":"function","modifiers":[],"name":"makePersistent","nameLocation":"86197:14:14","parameters":{"id":16035,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16034,"mutability":"mutable","name":"account","nameLocation":"86220:7:14","nodeType":"VariableDeclaration","scope":16037,"src":"86212:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16033,"name":"address","nodeType":"ElementaryTypeName","src":"86212:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"86211:17:14"},"returnParameters":{"id":16036,"nodeType":"ParameterList","parameters":[],"src":"86237:0:14"},"scope":16513,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16045,"nodeType":"FunctionDefinition","src":"86283:69:14","nodes":[],"documentation":{"id":16038,"nodeType":"StructuredDocumentation","src":"86244:34:14","text":"See `makePersistent(address)`."},"functionSelector":"4074e0a8","implemented":false,"kind":"function","modifiers":[],"name":"makePersistent","nameLocation":"86292:14:14","parameters":{"id":16043,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16040,"mutability":"mutable","name":"account0","nameLocation":"86315:8:14","nodeType":"VariableDeclaration","scope":16045,"src":"86307:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16039,"name":"address","nodeType":"ElementaryTypeName","src":"86307:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":16042,"mutability":"mutable","name":"account1","nameLocation":"86333:8:14","nodeType":"VariableDeclaration","scope":16045,"src":"86325:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16041,"name":"address","nodeType":"ElementaryTypeName","src":"86325:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"86306:36:14"},"returnParameters":{"id":16044,"nodeType":"ParameterList","parameters":[],"src":"86351:0:14"},"scope":16513,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16055,"nodeType":"FunctionDefinition","src":"86397:87:14","nodes":[],"documentation":{"id":16046,"nodeType":"StructuredDocumentation","src":"86358:34:14","text":"See `makePersistent(address)`."},"functionSelector":"efb77a75","implemented":false,"kind":"function","modifiers":[],"name":"makePersistent","nameLocation":"86406:14:14","parameters":{"id":16053,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16048,"mutability":"mutable","name":"account0","nameLocation":"86429:8:14","nodeType":"VariableDeclaration","scope":16055,"src":"86421:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16047,"name":"address","nodeType":"ElementaryTypeName","src":"86421:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":16050,"mutability":"mutable","name":"account1","nameLocation":"86447:8:14","nodeType":"VariableDeclaration","scope":16055,"src":"86439:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16049,"name":"address","nodeType":"ElementaryTypeName","src":"86439:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":16052,"mutability":"mutable","name":"account2","nameLocation":"86465:8:14","nodeType":"VariableDeclaration","scope":16055,"src":"86457:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16051,"name":"address","nodeType":"ElementaryTypeName","src":"86457:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"86420:54:14"},"returnParameters":{"id":16054,"nodeType":"ParameterList","parameters":[],"src":"86483:0:14"},"scope":16513,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16062,"nodeType":"FunctionDefinition","src":"86529:62:14","nodes":[],"documentation":{"id":16056,"nodeType":"StructuredDocumentation","src":"86490:34:14","text":"See `makePersistent(address)`."},"functionSelector":"1d9e269e","implemented":false,"kind":"function","modifiers":[],"name":"makePersistent","nameLocation":"86538:14:14","parameters":{"id":16060,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16059,"mutability":"mutable","name":"accounts","nameLocation":"86572:8:14","nodeType":"VariableDeclaration","scope":16062,"src":"86553:27:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":16057,"name":"address","nodeType":"ElementaryTypeName","src":"86553:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":16058,"nodeType":"ArrayTypeName","src":"86553:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"86552:29:14"},"returnParameters":{"id":16061,"nodeType":"ParameterList","parameters":[],"src":"86590:0:14"},"scope":16513,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16072,"nodeType":"FunctionDefinition","src":"86662:97:14","nodes":[],"documentation":{"id":16063,"nodeType":"StructuredDocumentation","src":"86597:60:14","text":"Reverts a call to an address with specified revert data."},"functionSelector":"dbaad147","implemented":false,"kind":"function","modifiers":[],"name":"mockCallRevert","nameLocation":"86671:14:14","parameters":{"id":16070,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16065,"mutability":"mutable","name":"callee","nameLocation":"86694:6:14","nodeType":"VariableDeclaration","scope":16072,"src":"86686:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16064,"name":"address","nodeType":"ElementaryTypeName","src":"86686:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":16067,"mutability":"mutable","name":"data","nameLocation":"86717:4:14","nodeType":"VariableDeclaration","scope":16072,"src":"86702:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":16066,"name":"bytes","nodeType":"ElementaryTypeName","src":"86702:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":16069,"mutability":"mutable","name":"revertData","nameLocation":"86738:10:14","nodeType":"VariableDeclaration","scope":16072,"src":"86723:25:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":16068,"name":"bytes","nodeType":"ElementaryTypeName","src":"86723:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"86685:64:14"},"returnParameters":{"id":16071,"nodeType":"ParameterList","parameters":[],"src":"86758:0:14"},"scope":16513,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16084,"nodeType":"FunctionDefinition","src":"86859:123:14","nodes":[],"documentation":{"id":16073,"nodeType":"StructuredDocumentation","src":"86765:89:14","text":"Reverts a call to an address with a specific `msg.value`, with specified revert data."},"functionSelector":"d23cd037","implemented":false,"kind":"function","modifiers":[],"name":"mockCallRevert","nameLocation":"86868:14:14","parameters":{"id":16082,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16075,"mutability":"mutable","name":"callee","nameLocation":"86891:6:14","nodeType":"VariableDeclaration","scope":16084,"src":"86883:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16074,"name":"address","nodeType":"ElementaryTypeName","src":"86883:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":16077,"mutability":"mutable","name":"msgValue","nameLocation":"86907:8:14","nodeType":"VariableDeclaration","scope":16084,"src":"86899:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16076,"name":"uint256","nodeType":"ElementaryTypeName","src":"86899:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":16079,"mutability":"mutable","name":"data","nameLocation":"86932:4:14","nodeType":"VariableDeclaration","scope":16084,"src":"86917:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":16078,"name":"bytes","nodeType":"ElementaryTypeName","src":"86917:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":16081,"mutability":"mutable","name":"revertData","nameLocation":"86953:10:14","nodeType":"VariableDeclaration","scope":16084,"src":"86938:25:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":16080,"name":"bytes","nodeType":"ElementaryTypeName","src":"86938:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"86882:82:14"},"returnParameters":{"id":16083,"nodeType":"ParameterList","parameters":[],"src":"86981:0:14"},"scope":16513,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16094,"nodeType":"FunctionDefinition","src":"87242:91:14","nodes":[],"documentation":{"id":16085,"nodeType":"StructuredDocumentation","src":"86988:249:14","text":"Mocks a call to an address, returning specified data.\n Calldata can either be strict or a partial match, e.g. if you only\n pass a Solidity selector to the expected calldata, then the entire Solidity\n function will be mocked."},"functionSelector":"b96213e4","implemented":false,"kind":"function","modifiers":[],"name":"mockCall","nameLocation":"87251:8:14","parameters":{"id":16092,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16087,"mutability":"mutable","name":"callee","nameLocation":"87268:6:14","nodeType":"VariableDeclaration","scope":16094,"src":"87260:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16086,"name":"address","nodeType":"ElementaryTypeName","src":"87260:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":16089,"mutability":"mutable","name":"data","nameLocation":"87291:4:14","nodeType":"VariableDeclaration","scope":16094,"src":"87276:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":16088,"name":"bytes","nodeType":"ElementaryTypeName","src":"87276:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":16091,"mutability":"mutable","name":"returnData","nameLocation":"87312:10:14","nodeType":"VariableDeclaration","scope":16094,"src":"87297:25:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":16090,"name":"bytes","nodeType":"ElementaryTypeName","src":"87297:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"87259:64:14"},"returnParameters":{"id":16093,"nodeType":"ParameterList","parameters":[],"src":"87332:0:14"},"scope":16513,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16106,"nodeType":"FunctionDefinition","src":"87508:109:14","nodes":[],"documentation":{"id":16095,"nodeType":"StructuredDocumentation","src":"87339:164:14","text":"Mocks a call to an address with a specific `msg.value`, returning specified data.\n Calldata match takes precedence over `msg.value` in case of ambiguity."},"functionSelector":"81409b91","implemented":false,"kind":"function","modifiers":[],"name":"mockCall","nameLocation":"87517:8:14","parameters":{"id":16104,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16097,"mutability":"mutable","name":"callee","nameLocation":"87534:6:14","nodeType":"VariableDeclaration","scope":16106,"src":"87526:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16096,"name":"address","nodeType":"ElementaryTypeName","src":"87526:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":16099,"mutability":"mutable","name":"msgValue","nameLocation":"87550:8:14","nodeType":"VariableDeclaration","scope":16106,"src":"87542:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16098,"name":"uint256","nodeType":"ElementaryTypeName","src":"87542:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":16101,"mutability":"mutable","name":"data","nameLocation":"87575:4:14","nodeType":"VariableDeclaration","scope":16106,"src":"87560:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":16100,"name":"bytes","nodeType":"ElementaryTypeName","src":"87560:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":16103,"mutability":"mutable","name":"returnData","nameLocation":"87596:10:14","nodeType":"VariableDeclaration","scope":16106,"src":"87581:25:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":16102,"name":"bytes","nodeType":"ElementaryTypeName","src":"87581:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"87525:82:14"},"returnParameters":{"id":16105,"nodeType":"ParameterList","parameters":[],"src":"87616:0:14"},"scope":16513,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16112,"nodeType":"FunctionDefinition","src":"87692:43:14","nodes":[],"documentation":{"id":16107,"nodeType":"StructuredDocumentation","src":"87623:64:14","text":"Sets the *next* call's `msg.sender` to be the input address."},"functionSelector":"ca669fa7","implemented":false,"kind":"function","modifiers":[],"name":"prank","nameLocation":"87701:5:14","parameters":{"id":16110,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16109,"mutability":"mutable","name":"msgSender","nameLocation":"87715:9:14","nodeType":"VariableDeclaration","scope":16112,"src":"87707:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16108,"name":"address","nodeType":"ElementaryTypeName","src":"87707:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"87706:19:14"},"returnParameters":{"id":16111,"nodeType":"ParameterList","parameters":[],"src":"87734:0:14"},"scope":16513,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16120,"nodeType":"FunctionDefinition","src":"87854:61:14","nodes":[],"documentation":{"id":16113,"nodeType":"StructuredDocumentation","src":"87741:108:14","text":"Sets the *next* call's `msg.sender` to be the input address, and the `tx.origin` to be the second input."},"functionSelector":"47e50cce","implemented":false,"kind":"function","modifiers":[],"name":"prank","nameLocation":"87863:5:14","parameters":{"id":16118,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16115,"mutability":"mutable","name":"msgSender","nameLocation":"87877:9:14","nodeType":"VariableDeclaration","scope":16120,"src":"87869:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16114,"name":"address","nodeType":"ElementaryTypeName","src":"87869:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":16117,"mutability":"mutable","name":"txOrigin","nameLocation":"87896:8:14","nodeType":"VariableDeclaration","scope":16120,"src":"87888:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16116,"name":"address","nodeType":"ElementaryTypeName","src":"87888:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"87868:37:14"},"returnParameters":{"id":16119,"nodeType":"ParameterList","parameters":[],"src":"87914:0:14"},"scope":16513,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16126,"nodeType":"FunctionDefinition","src":"88092:52:14","nodes":[],"documentation":{"id":16121,"nodeType":"StructuredDocumentation","src":"87921:166:14","text":"Sets `block.prevrandao`.\n Not available on EVM versions before Paris. Use `difficulty` instead.\n If used on unsupported EVM versions it will revert."},"functionSelector":"3b925549","implemented":false,"kind":"function","modifiers":[],"name":"prevrandao","nameLocation":"88101:10:14","parameters":{"id":16124,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16123,"mutability":"mutable","name":"newPrevrandao","nameLocation":"88120:13:14","nodeType":"VariableDeclaration","scope":16126,"src":"88112:21:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16122,"name":"bytes32","nodeType":"ElementaryTypeName","src":"88112:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"88111:23:14"},"returnParameters":{"id":16125,"nodeType":"ParameterList","parameters":[],"src":"88143:0:14"},"scope":16513,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16132,"nodeType":"FunctionDefinition","src":"88321:52:14","nodes":[],"documentation":{"id":16127,"nodeType":"StructuredDocumentation","src":"88150:166:14","text":"Sets `block.prevrandao`.\n Not available on EVM versions before Paris. Use `difficulty` instead.\n If used on unsupported EVM versions it will revert."},"functionSelector":"9cb1c0d4","implemented":false,"kind":"function","modifiers":[],"name":"prevrandao","nameLocation":"88330:10:14","parameters":{"id":16130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16129,"mutability":"mutable","name":"newPrevrandao","nameLocation":"88349:13:14","nodeType":"VariableDeclaration","scope":16132,"src":"88341:21:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16128,"name":"uint256","nodeType":"ElementaryTypeName","src":"88341:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"88340:23:14"},"returnParameters":{"id":16131,"nodeType":"ParameterList","parameters":[],"src":"88372:0:14"},"scope":16513,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16143,"nodeType":"FunctionDefinition","src":"88501:101:14","nodes":[],"documentation":{"id":16133,"nodeType":"StructuredDocumentation","src":"88379:117:14","text":"Reads the current `msg.sender` and `tx.origin` from state and reports if there is any active caller modification."},"functionSelector":"4ad0bac9","implemented":false,"kind":"function","modifiers":[],"name":"readCallers","nameLocation":"88510:11:14","parameters":{"id":16134,"nodeType":"ParameterList","parameters":[],"src":"88521:2:14"},"returnParameters":{"id":16142,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16137,"mutability":"mutable","name":"callerMode","nameLocation":"88553:10:14","nodeType":"VariableDeclaration","scope":16143,"src":"88542:21:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_CallerMode_$12486","typeString":"enum VmSafe.CallerMode"},"typeName":{"id":16136,"nodeType":"UserDefinedTypeName","pathNode":{"id":16135,"name":"CallerMode","nameLocations":["88542:10:14"],"nodeType":"IdentifierPath","referencedDeclaration":12486,"src":"88542:10:14"},"referencedDeclaration":12486,"src":"88542:10:14","typeDescriptions":{"typeIdentifier":"t_enum$_CallerMode_$12486","typeString":"enum VmSafe.CallerMode"}},"visibility":"internal"},{"constant":false,"id":16139,"mutability":"mutable","name":"msgSender","nameLocation":"88573:9:14","nodeType":"VariableDeclaration","scope":16143,"src":"88565:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16138,"name":"address","nodeType":"ElementaryTypeName","src":"88565:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":16141,"mutability":"mutable","name":"txOrigin","nameLocation":"88592:8:14","nodeType":"VariableDeclaration","scope":16143,"src":"88584:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16140,"name":"address","nodeType":"ElementaryTypeName","src":"88584:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"88541:60:14"},"scope":16513,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16149,"nodeType":"FunctionDefinition","src":"88690:46:14","nodes":[],"documentation":{"id":16144,"nodeType":"StructuredDocumentation","src":"88608:77:14","text":"Resets the nonce of an account to 0 for EOAs and 1 for contract accounts."},"functionSelector":"1c72346d","implemented":false,"kind":"function","modifiers":[],"name":"resetNonce","nameLocation":"88699:10:14","parameters":{"id":16147,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16146,"mutability":"mutable","name":"account","nameLocation":"88718:7:14","nodeType":"VariableDeclaration","scope":16149,"src":"88710:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16145,"name":"address","nodeType":"ElementaryTypeName","src":"88710:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"88709:17:14"},"returnParameters":{"id":16148,"nodeType":"ParameterList","parameters":[],"src":"88735:0:14"},"scope":16513,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16157,"nodeType":"FunctionDefinition","src":"89079:70:14","nodes":[],"documentation":{"id":16150,"nodeType":"StructuredDocumentation","src":"88742:332:14","text":"Revert the state of the EVM to a previous snapshot\n Takes the snapshot ID to revert to.\n Returns `true` if the snapshot was successfully reverted.\n Returns `false` if the snapshot does not exist.\n **Note:** This does not automatically delete the snapshot. To delete the snapshot use `deleteSnapshot`."},"functionSelector":"44d7f0a4","implemented":false,"kind":"function","modifiers":[],"name":"revertTo","nameLocation":"89088:8:14","parameters":{"id":16153,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16152,"mutability":"mutable","name":"snapshotId","nameLocation":"89105:10:14","nodeType":"VariableDeclaration","scope":16157,"src":"89097:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16151,"name":"uint256","nodeType":"ElementaryTypeName","src":"89097:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"89096:20:14"},"returnParameters":{"id":16156,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16155,"mutability":"mutable","name":"success","nameLocation":"89140:7:14","nodeType":"VariableDeclaration","scope":16157,"src":"89135:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":16154,"name":"bool","nodeType":"ElementaryTypeName","src":"89135:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"89134:14:14"},"scope":16513,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16165,"nodeType":"FunctionDefinition","src":"89432:79:14","nodes":[],"documentation":{"id":16158,"nodeType":"StructuredDocumentation","src":"89155:272:14","text":"Revert the state of the EVM to a previous snapshot and automatically deletes the snapshots\n Takes the snapshot ID to revert to.\n Returns `true` if the snapshot was successfully reverted and deleted.\n Returns `false` if the snapshot does not exist."},"functionSelector":"03e0aca9","implemented":false,"kind":"function","modifiers":[],"name":"revertToAndDelete","nameLocation":"89441:17:14","parameters":{"id":16161,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16160,"mutability":"mutable","name":"snapshotId","nameLocation":"89467:10:14","nodeType":"VariableDeclaration","scope":16165,"src":"89459:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16159,"name":"uint256","nodeType":"ElementaryTypeName","src":"89459:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"89458:20:14"},"returnParameters":{"id":16164,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16163,"mutability":"mutable","name":"success","nameLocation":"89502:7:14","nodeType":"VariableDeclaration","scope":16165,"src":"89497:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":16162,"name":"bool","nodeType":"ElementaryTypeName","src":"89497:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"89496:14:14"},"scope":16513,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16171,"nodeType":"FunctionDefinition","src":"89608:52:14","nodes":[],"documentation":{"id":16166,"nodeType":"StructuredDocumentation","src":"89517:86:14","text":"Revokes persistent status from the address, previously added via `makePersistent`."},"functionSelector":"997a0222","implemented":false,"kind":"function","modifiers":[],"name":"revokePersistent","nameLocation":"89617:16:14","parameters":{"id":16169,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16168,"mutability":"mutable","name":"account","nameLocation":"89642:7:14","nodeType":"VariableDeclaration","scope":16171,"src":"89634:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16167,"name":"address","nodeType":"ElementaryTypeName","src":"89634:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"89633:17:14"},"returnParameters":{"id":16170,"nodeType":"ParameterList","parameters":[],"src":"89659:0:14"},"scope":16513,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16178,"nodeType":"FunctionDefinition","src":"89707:64:14","nodes":[],"documentation":{"id":16172,"nodeType":"StructuredDocumentation","src":"89666:36:14","text":"See `revokePersistent(address)`."},"functionSelector":"3ce969e6","implemented":false,"kind":"function","modifiers":[],"name":"revokePersistent","nameLocation":"89716:16:14","parameters":{"id":16176,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16175,"mutability":"mutable","name":"accounts","nameLocation":"89752:8:14","nodeType":"VariableDeclaration","scope":16178,"src":"89733:27:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":16173,"name":"address","nodeType":"ElementaryTypeName","src":"89733:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":16174,"nodeType":"ArrayTypeName","src":"89733:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"89732:29:14"},"returnParameters":{"id":16177,"nodeType":"ParameterList","parameters":[],"src":"89770:0:14"},"scope":16513,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16184,"nodeType":"FunctionDefinition","src":"89806:42:14","nodes":[],"documentation":{"id":16179,"nodeType":"StructuredDocumentation","src":"89777:24:14","text":"Sets `block.height`."},"functionSelector":"1f7b4f30","implemented":false,"kind":"function","modifiers":[],"name":"roll","nameLocation":"89815:4:14","parameters":{"id":16182,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16181,"mutability":"mutable","name":"newHeight","nameLocation":"89828:9:14","nodeType":"VariableDeclaration","scope":16184,"src":"89820:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16180,"name":"uint256","nodeType":"ElementaryTypeName","src":"89820:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"89819:19:14"},"returnParameters":{"id":16183,"nodeType":"ParameterList","parameters":[],"src":"89847:0:14"},"scope":16513,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16190,"nodeType":"FunctionDefinition","src":"89987:48:14","nodes":[],"documentation":{"id":16185,"nodeType":"StructuredDocumentation","src":"89854:128:14","text":"Updates the currently active fork to given block number\n This is similar to `roll` but for the currently active fork."},"functionSelector":"d9bbf3a1","implemented":false,"kind":"function","modifiers":[],"name":"rollFork","nameLocation":"89996:8:14","parameters":{"id":16188,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16187,"mutability":"mutable","name":"blockNumber","nameLocation":"90013:11:14","nodeType":"VariableDeclaration","scope":16190,"src":"90005:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16186,"name":"uint256","nodeType":"ElementaryTypeName","src":"90005:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"90004:21:14"},"returnParameters":{"id":16189,"nodeType":"ParameterList","parameters":[],"src":"90034:0:14"},"scope":16513,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16196,"nodeType":"FunctionDefinition","src":"90250:43:14","nodes":[],"documentation":{"id":16191,"nodeType":"StructuredDocumentation","src":"90041:204:14","text":"Updates the currently active fork to given transaction. This will `rollFork` with the number\n of the block the transaction was mined in and replays all transaction mined before it in the block."},"functionSelector":"0f29772b","implemented":false,"kind":"function","modifiers":[],"name":"rollFork","nameLocation":"90259:8:14","parameters":{"id":16194,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16193,"mutability":"mutable","name":"txHash","nameLocation":"90276:6:14","nodeType":"VariableDeclaration","scope":16196,"src":"90268:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16192,"name":"bytes32","nodeType":"ElementaryTypeName","src":"90268:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"90267:16:14"},"returnParameters":{"id":16195,"nodeType":"ParameterList","parameters":[],"src":"90292:0:14"},"scope":16513,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16204,"nodeType":"FunctionDefinition","src":"90353:64:14","nodes":[],"documentation":{"id":16197,"nodeType":"StructuredDocumentation","src":"90299:49:14","text":"Updates the given fork to given block number."},"functionSelector":"d74c83a4","implemented":false,"kind":"function","modifiers":[],"name":"rollFork","nameLocation":"90362:8:14","parameters":{"id":16202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16199,"mutability":"mutable","name":"forkId","nameLocation":"90379:6:14","nodeType":"VariableDeclaration","scope":16204,"src":"90371:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16198,"name":"uint256","nodeType":"ElementaryTypeName","src":"90371:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":16201,"mutability":"mutable","name":"blockNumber","nameLocation":"90395:11:14","nodeType":"VariableDeclaration","scope":16204,"src":"90387:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16200,"name":"uint256","nodeType":"ElementaryTypeName","src":"90387:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"90370:37:14"},"returnParameters":{"id":16203,"nodeType":"ParameterList","parameters":[],"src":"90416:0:14"},"scope":16513,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16212,"nodeType":"FunctionDefinition","src":"90553:59:14","nodes":[],"documentation":{"id":16205,"nodeType":"StructuredDocumentation","src":"90423:125:14","text":"Updates the given fork to block number of the given transaction and replays all transaction mined before it in the block."},"functionSelector":"f2830f7b","implemented":false,"kind":"function","modifiers":[],"name":"rollFork","nameLocation":"90562:8:14","parameters":{"id":16210,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16207,"mutability":"mutable","name":"forkId","nameLocation":"90579:6:14","nodeType":"VariableDeclaration","scope":16212,"src":"90571:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16206,"name":"uint256","nodeType":"ElementaryTypeName","src":"90571:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":16209,"mutability":"mutable","name":"txHash","nameLocation":"90595:6:14","nodeType":"VariableDeclaration","scope":16212,"src":"90587:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16208,"name":"bytes32","nodeType":"ElementaryTypeName","src":"90587:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"90570:32:14"},"returnParameters":{"id":16211,"nodeType":"ParameterList","parameters":[],"src":"90611:0:14"},"scope":16513,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16218,"nodeType":"FunctionDefinition","src":"90725:45:14","nodes":[],"documentation":{"id":16213,"nodeType":"StructuredDocumentation","src":"90618:102:14","text":"Takes a fork identifier created by `createFork` and sets the corresponding forked state as active."},"functionSelector":"9ebf6827","implemented":false,"kind":"function","modifiers":[],"name":"selectFork","nameLocation":"90734:10:14","parameters":{"id":16216,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16215,"mutability":"mutable","name":"forkId","nameLocation":"90753:6:14","nodeType":"VariableDeclaration","scope":16218,"src":"90745:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16214,"name":"uint256","nodeType":"ElementaryTypeName","src":"90745:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"90744:16:14"},"returnParameters":{"id":16217,"nodeType":"ParameterList","parameters":[],"src":"90769:0:14"},"scope":16513,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16226,"nodeType":"FunctionDefinition","src":"90920:71:14","nodes":[],"documentation":{"id":16219,"nodeType":"StructuredDocumentation","src":"90776:139:14","text":"Set blockhash for the current block.\n It only sets the blockhash for blocks where `block.number - 256 <= number < block.number`."},"functionSelector":"5314b54a","implemented":false,"kind":"function","modifiers":[],"name":"setBlockhash","nameLocation":"90929:12:14","parameters":{"id":16224,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16221,"mutability":"mutable","name":"blockNumber","nameLocation":"90950:11:14","nodeType":"VariableDeclaration","scope":16226,"src":"90942:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16220,"name":"uint256","nodeType":"ElementaryTypeName","src":"90942:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":16223,"mutability":"mutable","name":"blockHash","nameLocation":"90971:9:14","nodeType":"VariableDeclaration","scope":16226,"src":"90963:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16222,"name":"bytes32","nodeType":"ElementaryTypeName","src":"90963:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"90941:40:14"},"returnParameters":{"id":16225,"nodeType":"ParameterList","parameters":[],"src":"90990:0:14"},"scope":16513,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16234,"nodeType":"FunctionDefinition","src":"91089:61:14","nodes":[],"documentation":{"id":16227,"nodeType":"StructuredDocumentation","src":"90997:87:14","text":"Sets the nonce of an account. Must be higher than the current nonce of the account."},"functionSelector":"f8e18b57","implemented":false,"kind":"function","modifiers":[],"name":"setNonce","nameLocation":"91098:8:14","parameters":{"id":16232,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16229,"mutability":"mutable","name":"account","nameLocation":"91115:7:14","nodeType":"VariableDeclaration","scope":16234,"src":"91107:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16228,"name":"address","nodeType":"ElementaryTypeName","src":"91107:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":16231,"mutability":"mutable","name":"newNonce","nameLocation":"91131:8:14","nodeType":"VariableDeclaration","scope":16234,"src":"91124:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":16230,"name":"uint64","nodeType":"ElementaryTypeName","src":"91124:6:14","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"91106:34:14"},"returnParameters":{"id":16233,"nodeType":"ParameterList","parameters":[],"src":"91149:0:14"},"scope":16513,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16242,"nodeType":"FunctionDefinition","src":"91216:67:14","nodes":[],"documentation":{"id":16235,"nodeType":"StructuredDocumentation","src":"91156:55:14","text":"Sets the nonce of an account to an arbitrary value."},"functionSelector":"9b67b21c","implemented":false,"kind":"function","modifiers":[],"name":"setNonceUnsafe","nameLocation":"91225:14:14","parameters":{"id":16240,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16237,"mutability":"mutable","name":"account","nameLocation":"91248:7:14","nodeType":"VariableDeclaration","scope":16242,"src":"91240:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16236,"name":"address","nodeType":"ElementaryTypeName","src":"91240:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":16239,"mutability":"mutable","name":"newNonce","nameLocation":"91264:8:14","nodeType":"VariableDeclaration","scope":16242,"src":"91257:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":16238,"name":"uint64","nodeType":"ElementaryTypeName","src":"91257:6:14","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"91239:34:14"},"returnParameters":{"id":16241,"nodeType":"ParameterList","parameters":[],"src":"91282:0:14"},"scope":16513,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16248,"nodeType":"FunctionDefinition","src":"91438:58:14","nodes":[],"documentation":{"id":16243,"nodeType":"StructuredDocumentation","src":"91289:144:14","text":"Snapshot the current state of the evm.\n Returns the ID of the snapshot that was created.\n To revert a snapshot use `revertTo`."},"functionSelector":"9711715a","implemented":false,"kind":"function","modifiers":[],"name":"snapshot","nameLocation":"91447:8:14","parameters":{"id":16244,"nodeType":"ParameterList","parameters":[],"src":"91455:2:14"},"returnParameters":{"id":16247,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16246,"mutability":"mutable","name":"snapshotId","nameLocation":"91484:10:14","nodeType":"VariableDeclaration","scope":16248,"src":"91476:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16245,"name":"uint256","nodeType":"ElementaryTypeName","src":"91476:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"91475:20:14"},"scope":16513,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16254,"nodeType":"FunctionDefinition","src":"91603:48:14","nodes":[],"documentation":{"id":16249,"nodeType":"StructuredDocumentation","src":"91502:96:14","text":"Sets all subsequent calls' `msg.sender` to be the input address until `stopPrank` is called."},"functionSelector":"06447d56","implemented":false,"kind":"function","modifiers":[],"name":"startPrank","nameLocation":"91612:10:14","parameters":{"id":16252,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16251,"mutability":"mutable","name":"msgSender","nameLocation":"91631:9:14","nodeType":"VariableDeclaration","scope":16254,"src":"91623:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16250,"name":"address","nodeType":"ElementaryTypeName","src":"91623:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"91622:19:14"},"returnParameters":{"id":16253,"nodeType":"ParameterList","parameters":[],"src":"91650:0:14"},"scope":16513,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16262,"nodeType":"FunctionDefinition","src":"91802:66:14","nodes":[],"documentation":{"id":16255,"nodeType":"StructuredDocumentation","src":"91657:140:14","text":"Sets all subsequent calls' `msg.sender` to be the input address until `stopPrank` is called, and the `tx.origin` to be the second input."},"functionSelector":"45b56078","implemented":false,"kind":"function","modifiers":[],"name":"startPrank","nameLocation":"91811:10:14","parameters":{"id":16260,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16257,"mutability":"mutable","name":"msgSender","nameLocation":"91830:9:14","nodeType":"VariableDeclaration","scope":16262,"src":"91822:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16256,"name":"address","nodeType":"ElementaryTypeName","src":"91822:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":16259,"mutability":"mutable","name":"txOrigin","nameLocation":"91849:8:14","nodeType":"VariableDeclaration","scope":16262,"src":"91841:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16258,"name":"address","nodeType":"ElementaryTypeName","src":"91841:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"91821:37:14"},"returnParameters":{"id":16261,"nodeType":"ParameterList","parameters":[],"src":"91867:0:14"},"scope":16513,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16266,"nodeType":"FunctionDefinition","src":"91943:30:14","nodes":[],"documentation":{"id":16263,"nodeType":"StructuredDocumentation","src":"91874:64:14","text":"Resets subsequent calls' `msg.sender` to be `address(this)`."},"functionSelector":"90c5013b","implemented":false,"kind":"function","modifiers":[],"name":"stopPrank","nameLocation":"91952:9:14","parameters":{"id":16264,"nodeType":"ParameterList","parameters":[],"src":"91961:2:14"},"returnParameters":{"id":16265,"nodeType":"ParameterList","parameters":[],"src":"91972:0:14"},"scope":16513,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16276,"nodeType":"FunctionDefinition","src":"92031:69:14","nodes":[],"documentation":{"id":16267,"nodeType":"StructuredDocumentation","src":"91979:47:14","text":"Stores a value to an address' storage slot."},"functionSelector":"70ca10bb","implemented":false,"kind":"function","modifiers":[],"name":"store","nameLocation":"92040:5:14","parameters":{"id":16274,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16269,"mutability":"mutable","name":"target","nameLocation":"92054:6:14","nodeType":"VariableDeclaration","scope":16276,"src":"92046:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16268,"name":"address","nodeType":"ElementaryTypeName","src":"92046:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":16271,"mutability":"mutable","name":"slot","nameLocation":"92070:4:14","nodeType":"VariableDeclaration","scope":16276,"src":"92062:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16270,"name":"bytes32","nodeType":"ElementaryTypeName","src":"92062:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":16273,"mutability":"mutable","name":"value","nameLocation":"92084:5:14","nodeType":"VariableDeclaration","scope":16276,"src":"92076:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16272,"name":"bytes32","nodeType":"ElementaryTypeName","src":"92076:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"92045:45:14"},"returnParameters":{"id":16275,"nodeType":"ParameterList","parameters":[],"src":"92099:0:14"},"scope":16513,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16282,"nodeType":"FunctionDefinition","src":"92203:43:14","nodes":[],"documentation":{"id":16277,"nodeType":"StructuredDocumentation","src":"92106:92:14","text":"Fetches the given transaction from the active fork and executes it on the current state."},"functionSelector":"be646da1","implemented":false,"kind":"function","modifiers":[],"name":"transact","nameLocation":"92212:8:14","parameters":{"id":16280,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16279,"mutability":"mutable","name":"txHash","nameLocation":"92229:6:14","nodeType":"VariableDeclaration","scope":16282,"src":"92221:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16278,"name":"bytes32","nodeType":"ElementaryTypeName","src":"92221:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"92220:16:14"},"returnParameters":{"id":16281,"nodeType":"ParameterList","parameters":[],"src":"92245:0:14"},"scope":16513,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16290,"nodeType":"FunctionDefinition","src":"92348:59:14","nodes":[],"documentation":{"id":16283,"nodeType":"StructuredDocumentation","src":"92252:91:14","text":"Fetches the given transaction from the given fork and executes it on the current state."},"functionSelector":"4d8abc4b","implemented":false,"kind":"function","modifiers":[],"name":"transact","nameLocation":"92357:8:14","parameters":{"id":16288,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16285,"mutability":"mutable","name":"forkId","nameLocation":"92374:6:14","nodeType":"VariableDeclaration","scope":16290,"src":"92366:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16284,"name":"uint256","nodeType":"ElementaryTypeName","src":"92366:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":16287,"mutability":"mutable","name":"txHash","nameLocation":"92390:6:14","nodeType":"VariableDeclaration","scope":16290,"src":"92382:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16286,"name":"bytes32","nodeType":"ElementaryTypeName","src":"92382:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"92365:32:14"},"returnParameters":{"id":16289,"nodeType":"ParameterList","parameters":[],"src":"92406:0:14"},"scope":16513,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16296,"nodeType":"FunctionDefinition","src":"92441:50:14","nodes":[],"documentation":{"id":16291,"nodeType":"StructuredDocumentation","src":"92413:23:14","text":"Sets `tx.gasprice`."},"functionSelector":"48f50c0f","implemented":false,"kind":"function","modifiers":[],"name":"txGasPrice","nameLocation":"92450:10:14","parameters":{"id":16294,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16293,"mutability":"mutable","name":"newGasPrice","nameLocation":"92469:11:14","nodeType":"VariableDeclaration","scope":16296,"src":"92461:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16292,"name":"uint256","nodeType":"ElementaryTypeName","src":"92461:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"92460:21:14"},"returnParameters":{"id":16295,"nodeType":"ParameterList","parameters":[],"src":"92490:0:14"},"scope":16513,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16302,"nodeType":"FunctionDefinition","src":"92529:45:14","nodes":[],"documentation":{"id":16297,"nodeType":"StructuredDocumentation","src":"92497:27:14","text":"Sets `block.timestamp`."},"functionSelector":"e5d6bf02","implemented":false,"kind":"function","modifiers":[],"name":"warp","nameLocation":"92538:4:14","parameters":{"id":16300,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16299,"mutability":"mutable","name":"newTimestamp","nameLocation":"92551:12:14","nodeType":"VariableDeclaration","scope":16302,"src":"92543:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16298,"name":"uint256","nodeType":"ElementaryTypeName","src":"92543:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"92542:22:14"},"returnParameters":{"id":16301,"nodeType":"ParameterList","parameters":[],"src":"92573:0:14"},"scope":16513,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16314,"nodeType":"FunctionDefinition","src":"92726:105:14","nodes":[],"documentation":{"id":16303,"nodeType":"StructuredDocumentation","src":"92614:107:14","text":"Expect a call to an address with the specified `msg.value` and calldata, and a *minimum* amount of gas."},"functionSelector":"08e4e116","implemented":false,"kind":"function","modifiers":[],"name":"expectCallMinGas","nameLocation":"92735:16:14","parameters":{"id":16312,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16305,"mutability":"mutable","name":"callee","nameLocation":"92760:6:14","nodeType":"VariableDeclaration","scope":16314,"src":"92752:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16304,"name":"address","nodeType":"ElementaryTypeName","src":"92752:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":16307,"mutability":"mutable","name":"msgValue","nameLocation":"92776:8:14","nodeType":"VariableDeclaration","scope":16314,"src":"92768:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16306,"name":"uint256","nodeType":"ElementaryTypeName","src":"92768:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":16309,"mutability":"mutable","name":"minGas","nameLocation":"92793:6:14","nodeType":"VariableDeclaration","scope":16314,"src":"92786:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":16308,"name":"uint64","nodeType":"ElementaryTypeName","src":"92786:6:14","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":16311,"mutability":"mutable","name":"data","nameLocation":"92816:4:14","nodeType":"VariableDeclaration","scope":16314,"src":"92801:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":16310,"name":"bytes","nodeType":"ElementaryTypeName","src":"92801:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"92751:70:14"},"returnParameters":{"id":16313,"nodeType":"ParameterList","parameters":[],"src":"92830:0:14"},"scope":16513,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16328,"nodeType":"FunctionDefinition","src":"92964:127:14","nodes":[],"documentation":{"id":16315,"nodeType":"StructuredDocumentation","src":"92837:122:14","text":"Expect given number of calls to an address with the specified `msg.value` and calldata, and a *minimum* amount of gas."},"functionSelector":"e13a1834","implemented":false,"kind":"function","modifiers":[],"name":"expectCallMinGas","nameLocation":"92973:16:14","parameters":{"id":16326,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16317,"mutability":"mutable","name":"callee","nameLocation":"92998:6:14","nodeType":"VariableDeclaration","scope":16328,"src":"92990:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16316,"name":"address","nodeType":"ElementaryTypeName","src":"92990:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":16319,"mutability":"mutable","name":"msgValue","nameLocation":"93014:8:14","nodeType":"VariableDeclaration","scope":16328,"src":"93006:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16318,"name":"uint256","nodeType":"ElementaryTypeName","src":"93006:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":16321,"mutability":"mutable","name":"minGas","nameLocation":"93031:6:14","nodeType":"VariableDeclaration","scope":16328,"src":"93024:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":16320,"name":"uint64","nodeType":"ElementaryTypeName","src":"93024:6:14","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":16323,"mutability":"mutable","name":"data","nameLocation":"93054:4:14","nodeType":"VariableDeclaration","scope":16328,"src":"93039:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":16322,"name":"bytes","nodeType":"ElementaryTypeName","src":"93039:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":16325,"mutability":"mutable","name":"count","nameLocation":"93067:5:14","nodeType":"VariableDeclaration","scope":16328,"src":"93060:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":16324,"name":"uint64","nodeType":"ElementaryTypeName","src":"93060:6:14","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"92989:84:14"},"returnParameters":{"id":16327,"nodeType":"ParameterList","parameters":[],"src":"93090:0:14"},"scope":16513,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16336,"nodeType":"FunctionDefinition","src":"93223:66:14","nodes":[],"documentation":{"id":16329,"nodeType":"StructuredDocumentation","src":"93097:121:14","text":"Expects a call to an address with the specified calldata.\n Calldata can either be a strict or a partial match."},"functionSelector":"bd6af434","implemented":false,"kind":"function","modifiers":[],"name":"expectCall","nameLocation":"93232:10:14","parameters":{"id":16334,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16331,"mutability":"mutable","name":"callee","nameLocation":"93251:6:14","nodeType":"VariableDeclaration","scope":16336,"src":"93243:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16330,"name":"address","nodeType":"ElementaryTypeName","src":"93243:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":16333,"mutability":"mutable","name":"data","nameLocation":"93274:4:14","nodeType":"VariableDeclaration","scope":16336,"src":"93259:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":16332,"name":"bytes","nodeType":"ElementaryTypeName","src":"93259:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"93242:37:14"},"returnParameters":{"id":16335,"nodeType":"ParameterList","parameters":[],"src":"93288:0:14"},"scope":16513,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16346,"nodeType":"FunctionDefinition","src":"93376:80:14","nodes":[],"documentation":{"id":16337,"nodeType":"StructuredDocumentation","src":"93295:76:14","text":"Expects given number of calls to an address with the specified calldata."},"functionSelector":"c1adbbff","implemented":false,"kind":"function","modifiers":[],"name":"expectCall","nameLocation":"93385:10:14","parameters":{"id":16344,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16339,"mutability":"mutable","name":"callee","nameLocation":"93404:6:14","nodeType":"VariableDeclaration","scope":16346,"src":"93396:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16338,"name":"address","nodeType":"ElementaryTypeName","src":"93396:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":16341,"mutability":"mutable","name":"data","nameLocation":"93427:4:14","nodeType":"VariableDeclaration","scope":16346,"src":"93412:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":16340,"name":"bytes","nodeType":"ElementaryTypeName","src":"93412:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":16343,"mutability":"mutable","name":"count","nameLocation":"93440:5:14","nodeType":"VariableDeclaration","scope":16346,"src":"93433:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":16342,"name":"uint64","nodeType":"ElementaryTypeName","src":"93433:6:14","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"93395:51:14"},"returnParameters":{"id":16345,"nodeType":"ParameterList","parameters":[],"src":"93455:0:14"},"scope":16513,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16356,"nodeType":"FunctionDefinition","src":"93544:84:14","nodes":[],"documentation":{"id":16347,"nodeType":"StructuredDocumentation","src":"93462:77:14","text":"Expects a call to an address with the specified `msg.value` and calldata."},"functionSelector":"f30c7ba3","implemented":false,"kind":"function","modifiers":[],"name":"expectCall","nameLocation":"93553:10:14","parameters":{"id":16354,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16349,"mutability":"mutable","name":"callee","nameLocation":"93572:6:14","nodeType":"VariableDeclaration","scope":16356,"src":"93564:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16348,"name":"address","nodeType":"ElementaryTypeName","src":"93564:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":16351,"mutability":"mutable","name":"msgValue","nameLocation":"93588:8:14","nodeType":"VariableDeclaration","scope":16356,"src":"93580:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16350,"name":"uint256","nodeType":"ElementaryTypeName","src":"93580:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":16353,"mutability":"mutable","name":"data","nameLocation":"93613:4:14","nodeType":"VariableDeclaration","scope":16356,"src":"93598:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":16352,"name":"bytes","nodeType":"ElementaryTypeName","src":"93598:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"93563:55:14"},"returnParameters":{"id":16355,"nodeType":"ParameterList","parameters":[],"src":"93627:0:14"},"scope":16513,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16368,"nodeType":"FunctionDefinition","src":"93731:98:14","nodes":[],"documentation":{"id":16357,"nodeType":"StructuredDocumentation","src":"93634:92:14","text":"Expects given number of calls to an address with the specified `msg.value` and calldata."},"functionSelector":"a2b1a1ae","implemented":false,"kind":"function","modifiers":[],"name":"expectCall","nameLocation":"93740:10:14","parameters":{"id":16366,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16359,"mutability":"mutable","name":"callee","nameLocation":"93759:6:14","nodeType":"VariableDeclaration","scope":16368,"src":"93751:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16358,"name":"address","nodeType":"ElementaryTypeName","src":"93751:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":16361,"mutability":"mutable","name":"msgValue","nameLocation":"93775:8:14","nodeType":"VariableDeclaration","scope":16368,"src":"93767:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16360,"name":"uint256","nodeType":"ElementaryTypeName","src":"93767:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":16363,"mutability":"mutable","name":"data","nameLocation":"93800:4:14","nodeType":"VariableDeclaration","scope":16368,"src":"93785:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":16362,"name":"bytes","nodeType":"ElementaryTypeName","src":"93785:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":16365,"mutability":"mutable","name":"count","nameLocation":"93813:5:14","nodeType":"VariableDeclaration","scope":16368,"src":"93806:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":16364,"name":"uint64","nodeType":"ElementaryTypeName","src":"93806:6:14","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"93750:69:14"},"returnParameters":{"id":16367,"nodeType":"ParameterList","parameters":[],"src":"93828:0:14"},"scope":16513,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16380,"nodeType":"FunctionDefinition","src":"93922:96:14","nodes":[],"documentation":{"id":16369,"nodeType":"StructuredDocumentation","src":"93835:82:14","text":"Expect a call to an address with the specified `msg.value`, gas, and calldata."},"functionSelector":"23361207","implemented":false,"kind":"function","modifiers":[],"name":"expectCall","nameLocation":"93931:10:14","parameters":{"id":16378,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16371,"mutability":"mutable","name":"callee","nameLocation":"93950:6:14","nodeType":"VariableDeclaration","scope":16380,"src":"93942:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16370,"name":"address","nodeType":"ElementaryTypeName","src":"93942:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":16373,"mutability":"mutable","name":"msgValue","nameLocation":"93966:8:14","nodeType":"VariableDeclaration","scope":16380,"src":"93958:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16372,"name":"uint256","nodeType":"ElementaryTypeName","src":"93958:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":16375,"mutability":"mutable","name":"gas","nameLocation":"93983:3:14","nodeType":"VariableDeclaration","scope":16380,"src":"93976:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":16374,"name":"uint64","nodeType":"ElementaryTypeName","src":"93976:6:14","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":16377,"mutability":"mutable","name":"data","nameLocation":"94003:4:14","nodeType":"VariableDeclaration","scope":16380,"src":"93988:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":16376,"name":"bytes","nodeType":"ElementaryTypeName","src":"93988:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"93941:67:14"},"returnParameters":{"id":16379,"nodeType":"ParameterList","parameters":[],"src":"94017:0:14"},"scope":16513,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16394,"nodeType":"FunctionDefinition","src":"94127:110:14","nodes":[],"documentation":{"id":16381,"nodeType":"StructuredDocumentation","src":"94024:98:14","text":"Expects given number of calls to an address with the specified `msg.value`, gas, and calldata."},"functionSelector":"65b7b7cc","implemented":false,"kind":"function","modifiers":[],"name":"expectCall","nameLocation":"94136:10:14","parameters":{"id":16392,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16383,"mutability":"mutable","name":"callee","nameLocation":"94155:6:14","nodeType":"VariableDeclaration","scope":16394,"src":"94147:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16382,"name":"address","nodeType":"ElementaryTypeName","src":"94147:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":16385,"mutability":"mutable","name":"msgValue","nameLocation":"94171:8:14","nodeType":"VariableDeclaration","scope":16394,"src":"94163:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16384,"name":"uint256","nodeType":"ElementaryTypeName","src":"94163:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":16387,"mutability":"mutable","name":"gas","nameLocation":"94188:3:14","nodeType":"VariableDeclaration","scope":16394,"src":"94181:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":16386,"name":"uint64","nodeType":"ElementaryTypeName","src":"94181:6:14","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":16389,"mutability":"mutable","name":"data","nameLocation":"94208:4:14","nodeType":"VariableDeclaration","scope":16394,"src":"94193:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":16388,"name":"bytes","nodeType":"ElementaryTypeName","src":"94193:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":16391,"mutability":"mutable","name":"count","nameLocation":"94221:5:14","nodeType":"VariableDeclaration","scope":16394,"src":"94214:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":16390,"name":"uint64","nodeType":"ElementaryTypeName","src":"94214:6:14","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"94146:81:14"},"returnParameters":{"id":16393,"nodeType":"ParameterList","parameters":[],"src":"94236:0:14"},"scope":16513,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16408,"nodeType":"FunctionDefinition","src":"94596:134:14","nodes":[],"documentation":{"id":16395,"nodeType":"StructuredDocumentation","src":"94243:348:14","text":"Prepare an expected anonymous log with (bool checkTopic1, bool checkTopic2, bool checkTopic3, bool checkData.).\n Call this function, then emit an anonymous event, then call a function. Internally after the call, we check if\n logs were emitted in the expected order with the expected topics and data (as specified by the booleans)."},"functionSelector":"c948db5e","implemented":false,"kind":"function","modifiers":[],"name":"expectEmitAnonymous","nameLocation":"94605:19:14","parameters":{"id":16406,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16397,"mutability":"mutable","name":"checkTopic0","nameLocation":"94630:11:14","nodeType":"VariableDeclaration","scope":16408,"src":"94625:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":16396,"name":"bool","nodeType":"ElementaryTypeName","src":"94625:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":16399,"mutability":"mutable","name":"checkTopic1","nameLocation":"94648:11:14","nodeType":"VariableDeclaration","scope":16408,"src":"94643:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":16398,"name":"bool","nodeType":"ElementaryTypeName","src":"94643:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":16401,"mutability":"mutable","name":"checkTopic2","nameLocation":"94666:11:14","nodeType":"VariableDeclaration","scope":16408,"src":"94661:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":16400,"name":"bool","nodeType":"ElementaryTypeName","src":"94661:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":16403,"mutability":"mutable","name":"checkTopic3","nameLocation":"94684:11:14","nodeType":"VariableDeclaration","scope":16408,"src":"94679:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":16402,"name":"bool","nodeType":"ElementaryTypeName","src":"94679:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":16405,"mutability":"mutable","name":"checkData","nameLocation":"94702:9:14","nodeType":"VariableDeclaration","scope":16408,"src":"94697:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":16404,"name":"bool","nodeType":"ElementaryTypeName","src":"94697:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"94624:88:14"},"returnParameters":{"id":16407,"nodeType":"ParameterList","parameters":[],"src":"94729:0:14"},"scope":16513,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16424,"nodeType":"FunctionDefinition","src":"94833:197:14","nodes":[],"documentation":{"id":16409,"nodeType":"StructuredDocumentation","src":"94736:92:14","text":"Same as the previous method, but also checks supplied address against emitting contract."},"functionSelector":"71c95899","implemented":false,"kind":"function","modifiers":[],"name":"expectEmitAnonymous","nameLocation":"94842:19:14","parameters":{"id":16422,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16411,"mutability":"mutable","name":"checkTopic0","nameLocation":"94876:11:14","nodeType":"VariableDeclaration","scope":16424,"src":"94871:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":16410,"name":"bool","nodeType":"ElementaryTypeName","src":"94871:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":16413,"mutability":"mutable","name":"checkTopic1","nameLocation":"94902:11:14","nodeType":"VariableDeclaration","scope":16424,"src":"94897:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":16412,"name":"bool","nodeType":"ElementaryTypeName","src":"94897:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":16415,"mutability":"mutable","name":"checkTopic2","nameLocation":"94928:11:14","nodeType":"VariableDeclaration","scope":16424,"src":"94923:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":16414,"name":"bool","nodeType":"ElementaryTypeName","src":"94923:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":16417,"mutability":"mutable","name":"checkTopic3","nameLocation":"94954:11:14","nodeType":"VariableDeclaration","scope":16424,"src":"94949:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":16416,"name":"bool","nodeType":"ElementaryTypeName","src":"94949:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":16419,"mutability":"mutable","name":"checkData","nameLocation":"94980:9:14","nodeType":"VariableDeclaration","scope":16424,"src":"94975:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":16418,"name":"bool","nodeType":"ElementaryTypeName","src":"94975:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":16421,"mutability":"mutable","name":"emitter","nameLocation":"95007:7:14","nodeType":"VariableDeclaration","scope":16424,"src":"94999:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16420,"name":"address","nodeType":"ElementaryTypeName","src":"94999:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"94861:159:14"},"returnParameters":{"id":16423,"nodeType":"ParameterList","parameters":[],"src":"95029:0:14"},"scope":16513,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16428,"nodeType":"FunctionDefinition","src":"95320:40:14","nodes":[],"documentation":{"id":16425,"nodeType":"StructuredDocumentation","src":"95036:279:14","text":"Prepare an expected anonymous log with all topic and data checks enabled.\n Call this function, then emit an anonymous event, then call a function. Internally after the call, we check if\n logs were emitted in the expected order with the expected topics and data."},"functionSelector":"2e5f270c","implemented":false,"kind":"function","modifiers":[],"name":"expectEmitAnonymous","nameLocation":"95329:19:14","parameters":{"id":16426,"nodeType":"ParameterList","parameters":[],"src":"95348:2:14"},"returnParameters":{"id":16427,"nodeType":"ParameterList","parameters":[],"src":"95359:0:14"},"scope":16513,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16434,"nodeType":"FunctionDefinition","src":"95463:55:14","nodes":[],"documentation":{"id":16429,"nodeType":"StructuredDocumentation","src":"95366:92:14","text":"Same as the previous method, but also checks supplied address against emitting contract."},"functionSelector":"6fc68705","implemented":false,"kind":"function","modifiers":[],"name":"expectEmitAnonymous","nameLocation":"95472:19:14","parameters":{"id":16432,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16431,"mutability":"mutable","name":"emitter","nameLocation":"95500:7:14","nodeType":"VariableDeclaration","scope":16434,"src":"95492:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16430,"name":"address","nodeType":"ElementaryTypeName","src":"95492:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"95491:17:14"},"returnParameters":{"id":16433,"nodeType":"ParameterList","parameters":[],"src":"95517:0:14"},"scope":16513,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16446,"nodeType":"FunctionDefinition","src":"95857:99:14","nodes":[],"documentation":{"id":16435,"nodeType":"StructuredDocumentation","src":"95524:328:14","text":"Prepare an expected log with (bool checkTopic1, bool checkTopic2, bool checkTopic3, bool checkData.).\n Call this function, then emit an event, then call a function. Internally after the call, we check if\n logs were emitted in the expected order with the expected topics and data (as specified by the booleans)."},"functionSelector":"491cc7c2","implemented":false,"kind":"function","modifiers":[],"name":"expectEmit","nameLocation":"95866:10:14","parameters":{"id":16444,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16437,"mutability":"mutable","name":"checkTopic1","nameLocation":"95882:11:14","nodeType":"VariableDeclaration","scope":16446,"src":"95877:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":16436,"name":"bool","nodeType":"ElementaryTypeName","src":"95877:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":16439,"mutability":"mutable","name":"checkTopic2","nameLocation":"95900:11:14","nodeType":"VariableDeclaration","scope":16446,"src":"95895:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":16438,"name":"bool","nodeType":"ElementaryTypeName","src":"95895:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":16441,"mutability":"mutable","name":"checkTopic3","nameLocation":"95918:11:14","nodeType":"VariableDeclaration","scope":16446,"src":"95913:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":16440,"name":"bool","nodeType":"ElementaryTypeName","src":"95913:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":16443,"mutability":"mutable","name":"checkData","nameLocation":"95936:9:14","nodeType":"VariableDeclaration","scope":16446,"src":"95931:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":16442,"name":"bool","nodeType":"ElementaryTypeName","src":"95931:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"95876:70:14"},"returnParameters":{"id":16445,"nodeType":"ParameterList","parameters":[],"src":"95955:0:14"},"scope":16513,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16460,"nodeType":"FunctionDefinition","src":"96059:124:14","nodes":[],"documentation":{"id":16447,"nodeType":"StructuredDocumentation","src":"95962:92:14","text":"Same as the previous method, but also checks supplied address against emitting contract."},"functionSelector":"81bad6f3","implemented":false,"kind":"function","modifiers":[],"name":"expectEmit","nameLocation":"96068:10:14","parameters":{"id":16458,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16449,"mutability":"mutable","name":"checkTopic1","nameLocation":"96084:11:14","nodeType":"VariableDeclaration","scope":16460,"src":"96079:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":16448,"name":"bool","nodeType":"ElementaryTypeName","src":"96079:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":16451,"mutability":"mutable","name":"checkTopic2","nameLocation":"96102:11:14","nodeType":"VariableDeclaration","scope":16460,"src":"96097:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":16450,"name":"bool","nodeType":"ElementaryTypeName","src":"96097:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":16453,"mutability":"mutable","name":"checkTopic3","nameLocation":"96120:11:14","nodeType":"VariableDeclaration","scope":16460,"src":"96115:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":16452,"name":"bool","nodeType":"ElementaryTypeName","src":"96115:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":16455,"mutability":"mutable","name":"checkData","nameLocation":"96138:9:14","nodeType":"VariableDeclaration","scope":16460,"src":"96133:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":16454,"name":"bool","nodeType":"ElementaryTypeName","src":"96133:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":16457,"mutability":"mutable","name":"emitter","nameLocation":"96157:7:14","nodeType":"VariableDeclaration","scope":16460,"src":"96149:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16456,"name":"address","nodeType":"ElementaryTypeName","src":"96149:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"96078:87:14"},"returnParameters":{"id":16459,"nodeType":"ParameterList","parameters":[],"src":"96182:0:14"},"scope":16513,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16464,"nodeType":"FunctionDefinition","src":"96453:31:14","nodes":[],"documentation":{"id":16461,"nodeType":"StructuredDocumentation","src":"96189:259:14","text":"Prepare an expected log with all topic and data checks enabled.\n Call this function, then emit an event, then call a function. Internally after the call, we check if\n logs were emitted in the expected order with the expected topics and data."},"functionSelector":"440ed10d","implemented":false,"kind":"function","modifiers":[],"name":"expectEmit","nameLocation":"96462:10:14","parameters":{"id":16462,"nodeType":"ParameterList","parameters":[],"src":"96472:2:14"},"returnParameters":{"id":16463,"nodeType":"ParameterList","parameters":[],"src":"96483:0:14"},"scope":16513,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16470,"nodeType":"FunctionDefinition","src":"96587:46:14","nodes":[],"documentation":{"id":16465,"nodeType":"StructuredDocumentation","src":"96490:92:14","text":"Same as the previous method, but also checks supplied address against emitting contract."},"functionSelector":"86b9620d","implemented":false,"kind":"function","modifiers":[],"name":"expectEmit","nameLocation":"96596:10:14","parameters":{"id":16468,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16467,"mutability":"mutable","name":"emitter","nameLocation":"96615:7:14","nodeType":"VariableDeclaration","scope":16470,"src":"96607:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16466,"name":"address","nodeType":"ElementaryTypeName","src":"96607:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"96606:17:14"},"returnParameters":{"id":16469,"nodeType":"ParameterList","parameters":[],"src":"96632:0:14"},"scope":16513,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16474,"nodeType":"FunctionDefinition","src":"96699:33:14","nodes":[],"documentation":{"id":16471,"nodeType":"StructuredDocumentation","src":"96639:55:14","text":"Expects an error on next call with any revert data."},"functionSelector":"f4844814","implemented":false,"kind":"function","modifiers":[],"name":"expectRevert","nameLocation":"96708:12:14","parameters":{"id":16472,"nodeType":"ParameterList","parameters":[],"src":"96720:2:14"},"returnParameters":{"id":16473,"nodeType":"ParameterList","parameters":[],"src":"96731:0:14"},"scope":16513,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16480,"nodeType":"FunctionDefinition","src":"96810:50:14","nodes":[],"documentation":{"id":16475,"nodeType":"StructuredDocumentation","src":"96738:67:14","text":"Expects an error on next call that starts with the revert data."},"functionSelector":"c31eb0e0","implemented":false,"kind":"function","modifiers":[],"name":"expectRevert","nameLocation":"96819:12:14","parameters":{"id":16478,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16477,"mutability":"mutable","name":"revertData","nameLocation":"96839:10:14","nodeType":"VariableDeclaration","scope":16480,"src":"96832:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":16476,"name":"bytes4","nodeType":"ElementaryTypeName","src":"96832:6:14","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"96831:19:14"},"returnParameters":{"id":16479,"nodeType":"ParameterList","parameters":[],"src":"96859:0:14"},"scope":16513,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16486,"nodeType":"FunctionDefinition","src":"96942:58:14","nodes":[],"documentation":{"id":16481,"nodeType":"StructuredDocumentation","src":"96866:71:14","text":"Expects an error on next call that exactly matches the revert data."},"functionSelector":"f28dceb3","implemented":false,"kind":"function","modifiers":[],"name":"expectRevert","nameLocation":"96951:12:14","parameters":{"id":16484,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16483,"mutability":"mutable","name":"revertData","nameLocation":"96979:10:14","nodeType":"VariableDeclaration","scope":16486,"src":"96964:25:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":16482,"name":"bytes","nodeType":"ElementaryTypeName","src":"96964:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"96963:27:14"},"returnParameters":{"id":16485,"nodeType":"ParameterList","parameters":[],"src":"96999:0:14"},"scope":16513,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16494,"nodeType":"FunctionDefinition","src":"97229:59:14","nodes":[],"documentation":{"id":16487,"nodeType":"StructuredDocumentation","src":"97006:218:14","text":"Only allows memory writes to offsets [0x00, 0x60) ∪ [min, max) in the current subcontext. If any other\n memory is written to, the test will fail. Can be called multiple times to add more ranges to the set."},"functionSelector":"6d016688","implemented":false,"kind":"function","modifiers":[],"name":"expectSafeMemory","nameLocation":"97238:16:14","parameters":{"id":16492,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16489,"mutability":"mutable","name":"min","nameLocation":"97262:3:14","nodeType":"VariableDeclaration","scope":16494,"src":"97255:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":16488,"name":"uint64","nodeType":"ElementaryTypeName","src":"97255:6:14","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":16491,"mutability":"mutable","name":"max","nameLocation":"97274:3:14","nodeType":"VariableDeclaration","scope":16494,"src":"97267:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":16490,"name":"uint64","nodeType":"ElementaryTypeName","src":"97267:6:14","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"97254:24:14"},"returnParameters":{"id":16493,"nodeType":"ParameterList","parameters":[],"src":"97287:0:14"},"scope":16513,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16502,"nodeType":"FunctionDefinition","src":"97530:63:14","nodes":[],"documentation":{"id":16495,"nodeType":"StructuredDocumentation","src":"97294:231:14","text":"Only allows memory writes to offsets [0x00, 0x60) ∪ [min, max) in the next created subcontext.\n If any other memory is written to, the test will fail. Can be called multiple times to add more ranges\n to the set."},"functionSelector":"05838bf4","implemented":false,"kind":"function","modifiers":[],"name":"expectSafeMemoryCall","nameLocation":"97539:20:14","parameters":{"id":16500,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16497,"mutability":"mutable","name":"min","nameLocation":"97567:3:14","nodeType":"VariableDeclaration","scope":16502,"src":"97560:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":16496,"name":"uint64","nodeType":"ElementaryTypeName","src":"97560:6:14","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":16499,"mutability":"mutable","name":"max","nameLocation":"97579:3:14","nodeType":"VariableDeclaration","scope":16502,"src":"97572:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":16498,"name":"uint64","nodeType":"ElementaryTypeName","src":"97572:6:14","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"97559:24:14"},"returnParameters":{"id":16501,"nodeType":"ParameterList","parameters":[],"src":"97592:0:14"},"scope":16513,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16508,"nodeType":"FunctionDefinition","src":"97671:38:14","nodes":[],"documentation":{"id":16503,"nodeType":"StructuredDocumentation","src":"97599:67:14","text":"Marks a test as skipped. Must be called at the top of the test."},"functionSelector":"dd82d13e","implemented":false,"kind":"function","modifiers":[],"name":"skip","nameLocation":"97680:4:14","parameters":{"id":16506,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16505,"mutability":"mutable","name":"skipTest","nameLocation":"97690:8:14","nodeType":"VariableDeclaration","scope":16508,"src":"97685:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":16504,"name":"bool","nodeType":"ElementaryTypeName","src":"97685:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"97684:15:14"},"returnParameters":{"id":16507,"nodeType":"ParameterList","parameters":[],"src":"97708:0:14"},"scope":16513,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16512,"nodeType":"FunctionDefinition","src":"97784:41:14","nodes":[],"documentation":{"id":16509,"nodeType":"StructuredDocumentation","src":"97715:64:14","text":"Stops all safe memory expectation in the current subcontext."},"functionSelector":"0956441b","implemented":false,"kind":"function","modifiers":[],"name":"stopExpectSafeMemory","nameLocation":"97793:20:14","parameters":{"id":16510,"nodeType":"ParameterList","parameters":[],"src":"97813:2:14"},"returnParameters":{"id":16511,"nodeType":"ParameterList","parameters":[],"src":"97824:0:14"},"scope":16513,"stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"abstract":false,"baseContracts":[{"baseName":{"id":15866,"name":"VmSafe","nameLocations":["81955:6:14"],"nodeType":"IdentifierPath","referencedDeclaration":15864,"src":"81955:6:14"},"id":15867,"nodeType":"InheritanceSpecifier","src":"81955:6:14"}],"canonicalName":"Vm","contractDependencies":[],"contractKind":"interface","documentation":{"id":15865,"nodeType":"StructuredDocumentation","src":"81768:171:14","text":"The `Vm` interface does allow manipulation of the EVM state. These are all intended to be used\n in tests, but it is not recommended to use these cheats in scripts."},"fullyImplemented":false,"linearizedBaseContracts":[16513,15864],"name":"Vm","nameLocation":"81949:2:14","scope":16514,"usedErrors":[],"usedEvents":[]}],"license":"MIT OR Apache-2.0"},"id":14}